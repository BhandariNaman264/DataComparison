{"version":3,"sources":["theme/shadows.js","theme/typography.js","theme/index.js","components/GlobalStyles.js","components/Page.js","views/ComparePayView/ClientCard/components/ClientEnvSelect.js","components/APIBase/BaseURL.js","views/ComparePayView/ClientCard/components/ClientFilePath.js","views/ComparePayView/ClientCard/components/ClientCatSelect.js","views/ComparePayView/ClientCard/components/ClientSelect.js","views/ComparePayView/ClientCard/components/ClientNamespaceSelect1.js","views/ComparePayView/ClientCard/components/ClientNamespaceSelect2.js","views/ComparePayView/ClientCard/ClientCard.js","views/ComparePayView/VersionsCard/VersionsCard.js","views/ComparePayView/JobCard/components/JobSelect.js","views/ComparePayView/JobCard/TargetJobCard.js","views/ComparePayView/ConfriguationsCard/components/ForceCompareOnly.js","views/ComparePayView/ConfriguationsCard/components/IsRunTask1.js","views/ComparePayView/ConfriguationsCard/components/IsRunTask2.js","views/ComparePayView/ConfriguationsCard/components/OrgUnit.js","views/ComparePayView/ConfriguationsCard/components/TimeStart.js","views/ComparePayView/ConfriguationsCard/components/TimeEnd.js","views/ComparePayView/ConfriguationsCard/components/Name.js","views/ComparePayView/ConfriguationsCard/components/DateRelativeToToday.js","views/ComparePayView/ConfriguationsCard/components/Policy.js","views/ComparePayView/ConfriguationsCard/components/PGCalendarID.js","views/ComparePayView/ConfriguationsCard/components/MockTransmit.js","views/ComparePayView/ConfriguationsCard/components/ExportFile.js","views/ComparePayView/ConfriguationsCard/components/ExportMode.js","views/ComparePayView/ConfriguationsCard/ConfriguationsCard.js","views/ComparePayView/RunComparisonCard/components/RunComparison.js","views/ComparePayView/RunComparisonCard/RunComparisonCard.js","views/ComparePayView/index.js","layout/NavBar/NavItem.js","layout/NavBar/index.js","layout/TopBar.js","layout/Footer.js","layout/index.js","mixins/chartjs.js","views/MaintenanceView/index.js","views/HomeView/components/Statistics.js","views/HomeView/components/CompletedComparison.js","views/HomeView/components/JobStatistics.js","views/HomeView/components/MyComparisonTable.js","views/HomeView/Home.js","util/DateTime/dates.js","views/ResultsPageView/components/ResultTable.js","views/ResultsPageView/ResultsPage.js","views/AboutView/ComparePayTool.js","views/AnalyzeView/components/AnalyzeTable.js","views/AnalyzeView/AnalyzePage.js","views/RuleView/components/Tracer.js","views/RuleView/RulePage.js","App.js","index.js"],"names":["shadows","typography","h1","fontWeight","fontSize","letterSpacing","h2","h3","h4","h5","color","h6","overline","theme","createTheme","palette","background","dark","colors","blueGrey","default","common","white","paper","primary","main","secondary","text","useStyles","makeStyles","createStyles","boxSizing","margin","padding","html","height","width","body","backgroundColor","a","textDecoration","GlobalStyles","Page","forwardRef","ref","children","title","rest","Helmet","root","minHeight","paddingBottom","spacing","paddingTop","card","formControl","minWidth","maxWidth","sortFormControl","sortGroup","position","right","top","server","wordWrap","textAlign","serverHead","marginTop","marginBottom","ClientEnvSelect","ClientInfo","setClientInfo","setValid","setSubOpen","classes","Box","mb","FormControl","required","className","Autocomplete","id","options","envName","value","onChange","event","newValue","prev","update","filePath","category","status","clientId","clientName","clientDb","adminDb","adminDbSrv","namespace","namespace2","getOptionSelected","option","getOptionLabel","renderInput","params","TextField","label","variant","referrer","hostname","window","location","console","log","clientListAPI","categoryAPI","adminClientAPI","userAPI","namespaceAPI","referrer_cpt","inputAPI","analyzeAPI","analyzeBRRAPI","analyzeJSRAPI","analyzeSCRAPI","analyzeAEAPI","analyzeEAPI","CPTtracerAPI","tracerAPI","bottom","grey","type","animationDuration","left","circle","strokeLinecap","ClientCatSelect","categoryList","toLowerCase","ClientSelect","clientList","valid","useState","list","setList","loading","setLoading","useEffect","api","url","axios","method","then","response","data","catch","error","finally","length","style","justifyContent","marginLeft","timeout","mt","RadioGroup","row","name","sortParam","target","sort","b","trim","localeCompare","defaultValue","FormControlLabel","control","Radio","labelPlacement","site","dbSize","ClientNamespaceSelect1","displayArr","setDisplayArr","open","setOpen","tmp","forEach","item","dbName","includes","push","parseInt","version","x","test","handleClose","Dialog","onClose","DialogTitle","Typography","DialogContent","DialogContentText","DialogActions","Button","onClick","dbSize2","visibility","gutterBottom","ClientNamespaceSelect2","ClientCard","Card","Tooltip","align","Divider","CardContent","listStyle","paddingInlineStart","paddingInlineEnd","marginBlockStart","marginBlockEnd","wordBreak","listLi","listTitle","VersionsCard","JobSelect","Job","setJob","jobchangereset","jobName","file","TargetJobCard","ForceCompareOnly","ForceCompare","setForceCompare","booleanValue","val","bool","IsRunTask1","RunTask1","setRunTask1","IsRunTask2","RunTask2","setRunTask2","OrgUnit","Org","setOrg","e","TimeStart","Start","setStart","utils","DateMomentUtils","DatePicker","format","selected","TimeEnd","End","setEnd","disabled","minDate","minDateMessage","Name","TaskName","setTaskName","replace","DateRelativeToToday","DateRelative","setDateRelative","inputStyle","Policy","PolicyName","setPolicyName","PGCalendarID","PGCalendar","setPGCalendar","MockTransmit","TransmitMock","setTransmitMock","ExportFile","ExportFileName","setExportFileName","ExportMode","ModeExport","setModeExport","ConfriguationsCard","Grid","container","lg","md","xl","xs","Alert","props","elevation","buttonProgress","ButtonCompare","userInfo","reset","subOpen","buttonType","setbuttonType","download","setdownload","success","setSuccess","msg","setMsg","Reset","setReset","reason","createStringDate","date","d","toISOString","split","createFileType","job","createNameSpace1Info","controlDbServer","controlDb","createNameSpace2Info","createInputPSRJSRBRR","namespace1Info","namespace2Info","inputObject","ControlDBNamespace","Tasks","Task1","IsRunTask","Namespace","FromDate","ToDate","Task2","inputData","JSON","stringify","blob","Blob","URL","createObjectURL","link","document","createElement","href","click","createInputSCR","createInputAE","createInputEFile","PayGroupCalendarId","createInputE","saveInput","InputFile","Date","toLocaleString","month_temp","month","d_temp","year_time","formatted_date","User_ID","samAccountName","User_Name","displayName","User_Email","userPrincipalName","Client","DBName_1","DBName_2","ControlDB_1","ControlDB_2","ControlDBServer_1","ControlDBServer_2","ControlDBServer_Server1","ControlDBServer_Server2","Task_Name","RunTask_1","RunTask_2","Start_Time","End_Time","Date_Relative_To_Today","Pay_Group_Calendar_Id","Export_Mode","Mock_Transmit","Export_File_Name","LogId1","Status1","LogId2","Status2","Results","Compared","Analyzed","Version1_Path","Version2_Path","Analyze_Path","err","FormLabel","component","ComparisonRan","Snackbar","autoHideDuration","severity","givenName","RunComparisonCard","subheader","icon","ColorButton","withStyles","getContrastText","ComparisonForm","setCategoryList","admClientList","setAdmClientList","databaseVersion","setClientList","clientApi","catApi","admClientApi","client","this","obj","clientID","clientServer","prodBackupSizeMB","backupClientApi","seen","out","j","i","Container","float","display","button","fontWeightMedium","textTransform","marginRight","active","NavItem","Icon","ListItem","clsx","disableGutters","activeClassName","RouterLink","to","size","items","CompareIcon","ResultsIcon","mobileDrawer","desktopDrawer","flexShrink","avatar","cursor","NavBar","closeDrawer","content","flexDirection","alignItems","p","surname","List","map","key","Hidden","lgUp","Drawer","anchor","mdDown","defaultProps","paddingLeft","paddingRight","TopBar","toggleDrawer","AppBar","Toolbar","IconButton","rel","flexGrow","footer","zIndex","Footer","message","raw","navigator","userAgent","match","getChromeVersion","toString","menuButton","drawer","drawerPaper","drawerHeader","mixins","toolbar","transition","transitions","create","easing","sharp","duration","leavingScreen","contentShift","easeOut","enteringScreen","DashboardLayout","Chart","helpers","extend","elements","Rectangle","prototype","draw","signX","signY","borderSkipped","radius","ctx","_chart","vm","_view","borderWidth","cornerRadius","config","horizontal","base","y","barSize","Math","min","abs","halfStroke","borderLeft","borderRight","borderTop","borderBottom","beginPath","fillStyle","strokeStyle","borderColor","lineWidth","corners","startCorner","indexOf","cornerAt","index","corner","moveTo","nextCornerId","floor","xTl","xTr","yTl","yTr","xBl","xBr","yBl","yBr","lineTo","quadraticCurveTo","fill","stroke","MaintenanceRedirect","note","Statistics","result","useTheme","differenceCount","setdifferenceCount","nodifferenceCount","setnodifferenceCount","runningCount","setrunningCount","failedCount","setfailedCount","noresultsCount","setnoresultsCount","set","results","compared","animation","cutoutPercentage","layout","legend","maintainAspectRatio","responsive","tooltips","bodyFontColor","divider","enabled","footerFontColor","intersect","mode","titleFontColor","datasets","hoverBorderColor","labels","statuses","isNaN","CloseIcon","DoneIcon","DirectionsRunIcon","ErrorIcon","HelpOutlineIcon","Paper","CompletedComparison","dates","setDates","count","setCount","reverse","getDate","barPercentage","maxBarThickness","barThickness","categoryPercentage","scales","xAxes","ticks","fontColor","gridLines","drawBorder","yAxes","beginAtZero","borderDash","borderDashOffset","zeroLineBorderDash","zeroLineBorderDashOffset","zeroLineColor","JobStatistics","aeCount","setaeCount","brrCount","setbrrCount","exportCount","setexportCount","jsrCount","setjsrCount","psrCount","setpsrCount","scrCount","setscrCount","AccountBalanceIcon","StorageIcon","FlightTakeoffIcon","WorkIcon","PaymentIcon","AttachMoneyIcon","table","visuallyHidden","border","clip","overflow","descendingComparator","orderBy","compA","compB","headCells","numeric","EnhancedTableHead","order","onRequestSort","TableHead","TableRow","headCell","TableCell","sortDirection","TableSortLabel","direction","property","MyComparisonTable","setOrder","setOrderBy","page","setPage","rowsPerPage","setRowsPerPage","dense","setDense","setlist","refreshPage","reload","remove","runAgain","request","user_ID","user_Name","user_Email","dbName_1","dbName_2","controlDB_1","controlDB_2","controlDBServer_1","controlDBServer_2","controlDBServer_Server1","controlDBServer_Server2","task_Name","forceCompareOnly","runTask_1","runTask_2","start_Time","end_Time","date_Relative_To_Today","org","policy","pay_Group_Calendar_Id","export_Mode","mock_Transmit","export_File_Name","filter","TableContainer","Table","TableBody","colSpan","array","comparator","stabilizedThis","el","stableSort","getComparator","slice","label1","color1","label2","color2","labelcomparison","colorcomparison","joblabel","jobcolor","start_dt","end_dt","status1","status2","resultRow","Chip","analyzed","hover","tabIndex","TablePagination","rowsPerPageOptions","onChangePage","newPage","onChangeRowsPerPage","Switch","checked","Home","setresult","resultApi","convert","constructor","Array","Number","String","year","NaN","convertToUTCDate","convertToDateString","toDateString","dateValue","hours","getHours","minutes","getMinutes","ampm","compare","isFinite","valueOf","pad","num","s","ResultTable","searchParam","setSearchParam","setFilter","jobfilter","setjobFilter","day","prevDay","setDate","today","getMonth","getFullYear","yesterday","selectedDate","setSelectedDate","DateFnsUtils","justify","disableToolbar","disableFuture","da","date_filter","KeyboardButtonProps","InputLabel","Select","labelId","MenuItem","toSearch","l","r","substring","trimString","searchFor","ResultsPage","ComparePayTool","headCellsPSR_SCR","EnhancedTableHeadFilePSRSCR","headCells2","EnhancedTableHeadFile","headCellsBRR","EnhancedTableHeadBRR","headCellsJSR","EnhancedTableHeadJSR","headCellsAE","EnhancedTableHeadAE","headCellsE","EnhancedTableHeadE","AnalyzeTable","logId1","logId2","version1_Path","version2_Path","analyze_Path","input","setinput","useParams","handleRequestSort","handleChangePage","handleChangeRowsPerPage","analyzeApi","analyzeBRRApi","analyzeJSRApi","analyzeSCRApi","analyzeAEApi","analyzeEApi","inputApi","buisness_Date","employee_ID","discrepancy","employee_Pay_AdjustID","searchForPSRSCR","rule","analyzePSRSCRRow","line","employeeId","employmentStatusId","searchForBRR","analyzeBRRRow","effectiveStart","effectiveEnd","employeeWorkAssignmentId","searchForJSR","analyzeJSRRow","searchForAE","analyzeAERow","searchForE","analyzeERow","AnalyzePage","Tracer","comparison_ID","analyze","setanalyze","tracerApi","employee","EmployeeId","RunPeriod","ShowPolicyConfiguration","ShowOnlyReferencePolicyConfiguration","SegmentCapturePeriodType","KeepSegmentsCaptureRunPeriod","KeepRunsOutsideRunPeriod","DontAddSegmentsForRepeatRuns","DropEmptyRuns","UseClientRounding","CalculateMissingAmounts","RulePage","App","start","setError","distinguishedName","domain","isMemberOf","role","tfsName","user","setUserInfo","userApi","headers","withCredentials","ThemeProvider","exact","path","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.de7601fd.chunk.js","sourcesContent":["const shadows = [\r\n  \"none\",\r\n  \"0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)\",\r\n];\r\n\r\nexport default shadows;\r\n","const typography = {\r\n  h1: {\r\n    fontWeight: 500,\r\n    fontSize: 35,\r\n    letterSpacing: \"-0.24px\",\r\n  },\r\n  h2: {\r\n    fontWeight: 500,\r\n    fontSize: 29,\r\n    letterSpacing: \"-0.24px\",\r\n  },\r\n  h3: {\r\n    fontWeight: 500,\r\n    fontSize: 24,\r\n    letterSpacing: \"-0.06px\",\r\n  },\r\n  h4: {\r\n    fontWeight: 500,\r\n    fontSize: 20,\r\n    letterSpacing: \"-0.06px\",\r\n  },\r\n  h5: {\r\n    fontWeight: 500,\r\n    fontSize: 22,\r\n    color: \"#3f51b5\",\r\n    letterSpacing: \"-0.05px\",\r\n  },\r\n  h6: {\r\n    fontWeight: 500,\r\n    fontSize: 14,\r\n    letterSpacing: \"-0.05px\",\r\n  },\r\n  overline: {\r\n    fontWeight: 500,\r\n  },\r\n};\r\n\r\nexport default typography;\r\n","import { createTheme, colors } from \"@material-ui/core\";\r\nimport shadows from \"./shadows\";\r\nimport typography from \"./typography\";\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    background: {\r\n      dark: colors.blueGrey[900],\r\n      default: colors.common.white,\r\n      paper: colors.common.white,\r\n    },\r\n    primary: {\r\n      main: colors.blueGrey[900],\r\n    },\r\n    secondary: {\r\n      main: colors.blueGrey[900],\r\n    },\r\n    text: {\r\n      primary: colors.blueGrey[900],\r\n      secondary: colors.blueGrey[600],\r\n    },\r\n  },\r\n  shadows,\r\n  typography,\r\n});\r\n\r\nexport default theme;\r\n","import { createStyles, makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(() =>\r\n  createStyles({\r\n    \"@global\": {\r\n      \"*\": {\r\n        boxSizing: \"border-box\",\r\n        margin: 0,\r\n        padding: 0,\r\n      },\r\n      html: {\r\n        \"-webkit-font-smoothing\": \"antialiased\",\r\n        \"-moz-osx-font-smoothing\": \"grayscale\",\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n      },\r\n      body: {\r\n        backgroundColor: \"#f4f6f8\",\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n      },\r\n      a: {\r\n        textDecoration: \"none\",\r\n      },\r\n      \"#root\": {\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\nconst GlobalStyles = () => {\r\n  useStyles();\r\n\r\n  return null;\r\n};\r\n\r\nexport default GlobalStyles;\r\n","import React, { forwardRef } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Page = forwardRef(({ children, title = \"\", ...rest }, ref) => {\r\n  return (\r\n    <div ref={ref} {...rest}>\r\n      <Helmet>\r\n        <title>{title}</title>\r\n      </Helmet>\r\n      {children}\r\n    </div>\r\n  );\r\n});\r\n\r\nPage.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Page;\r\n","import React from \"react\";\r\nimport { Box, FormControl, TextField, makeStyles } from \"@material-ui/core\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n  card: {\r\n    height: \"100%\",\r\n    color: theme.palette.text.secondary,\r\n    minHeight: 688,\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 450,\r\n    maxWidth: 450,\r\n  },\r\n  sortFormControl: {\r\n    maxWidth: 450,\r\n    minWidth: 450,\r\n  },\r\n  sortGroup: {\r\n    position: \"absolute\",\r\n    right: 0,\r\n    top: -40,\r\n  },\r\n  server: {\r\n    wordWrap: \"word-break\",\r\n    textAlign: \"left\",\r\n    color: \"rgba(0, 0, 0, 0.54)\",\r\n  },\r\n  serverHead: {\r\n    color: \"rgba(0, 0, 0, 0.83)\",\r\n    textAlign: \"left\",\r\n    marginTop: 8,\r\n    marginBottom: 3,\r\n  },\r\n}));\r\n\r\nconst ClientEnvSelect = ({\r\n  ClientInfo,\r\n  setClientInfo,\r\n  setValid,\r\n  setSubOpen,\r\n}) => {\r\n  const classes = useStyles();\r\n  //3 options for selecting the source environment\r\n  const srcEnvList = [\r\n    { envName: \"dfrd\", id: 1 },\r\n    // { envName: \"backupPath\", id: 2 },\r\n    // { envName: \"toolbox\", id: 3 },\r\n  ];\r\n  return (\r\n    <Box mb={2}>\r\n      <FormControl required className={classes.formControl}>\r\n        <Autocomplete\r\n          id=\"clientEnv\"\r\n          options={srcEnvList}\r\n          required\r\n          value={ClientInfo}\r\n          onChange={(event, newValue) => {\r\n            setSubOpen(false);\r\n            //if the user decides to change the environment, all source data previously fetched gets overwritten\r\n            setClientInfo((prev) => {\r\n              let update = { ...prev };\r\n              update.id = newValue ? newValue.id : 0;\r\n              update.envName = newValue ? newValue.envName : \"\";\r\n              update.filePath = \"\";\r\n              update.category = \"\";\r\n              update.status = 0;\r\n              update.clientId = -1;\r\n              update.clientName = \"\";\r\n              update.clientDb = \"\";\r\n              update.adminDb = \"\";\r\n              update.adminDbSrv = \"\";\r\n              update.namespace = null;\r\n              update.namespace2 = null;\r\n              return update;\r\n            });\r\n            setValid(0);\r\n          }}\r\n          getOptionSelected={(option, value) => option.id === value.id}\r\n          getOptionLabel={(option) =>\r\n            option.id === 1 ? \"DF R&D (Existing QA Env)\" : \"\"\r\n          }\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label=\"Client Environment\"\r\n              required\r\n              variant=\"outlined\"\r\n            />\r\n          )}\r\n        />\r\n      </FormControl>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ClientEnvSelect;\r\n","// host name\r\nlet referrer = \"\";\r\n\r\n///////////////////////////////////////\r\n// Please select environment\r\n\r\nexport const env = \"prod\";\r\n// export const env = \"dev\";\r\n// export const env = \"local\";\r\n\r\n// API URL for CM-Team\r\n\r\nconst hostname = window.location.hostname;\r\nconsole.log(\"hostname : \", hostname);\r\n\r\nif (hostname === \"nan5dfc1web01.corpadds.com\") {\r\n  referrer = \"http://nan5dfc1web01.corpadds.com:8084/cmtools\";\r\n} else {\r\n  referrer = \"http://localhost:58994\";\r\n}\r\n\r\nexport const clientListAPI = referrer + \"/api/toolbox/clients\";\r\nexport const categoryAPI = referrer + \"/api/buildversion/category/list/1\";\r\nexport const adminClientAPI = referrer + \"/api/admclients/\";\r\nexport const restoreSettingAPI = referrer + \"/api/RestoreRequestSetting\";\r\nexport const userAPI = referrer + \"/api/user\";\r\n\r\nexport const namespaceAPI = referrer + \"/api/namespace?qr=\";\r\nexport const restoreListAPI = referrer + \"/api/restorelist\";\r\nexport const restoreBackupPOSTAPI = referrer + \"/api/restorebackup\";\r\n\r\nexport const fileCheckAPI = referrer + \"/api/filecheck?filePath=\";\r\nexport const fileServerCheckAPI = referrer + \"/api/FileServerCheck\";\r\n\r\nexport const serverAPI = referrer + \"/api/server\";\r\nexport const settingAPI = referrer + \"/api/setting\";\r\n\r\nexport { referrer };\r\n\r\n// API URL for Comapre Pay Tool\r\n\r\nlet referrer_cpt = \"\";\r\n\r\nif (hostname === \"nan5dfc1web01.corpadds.com\") {\r\n  referrer_cpt = \"http://nan5dfc1web01.corpadds.com:8084/server\";\r\n} else {\r\n  referrer_cpt = \"http://localhost:5000\";\r\n}\r\n\r\nexport const inputAPI = referrer_cpt + \"/api/input/\";\r\n\r\nexport const analyzeAPI = referrer_cpt + \"/api/analyzepsr/\";\r\n\r\nexport const analyzeBRRAPI = referrer_cpt + \"/api/analyzebrr/\";\r\n\r\nexport const analyzeJSRAPI = referrer_cpt + \"/api/analyzejsr/\";\r\n\r\nexport const analyzeSCRAPI = referrer_cpt + \"/api/analyzescr/\";\r\n\r\nexport const analyzeAEAPI = referrer_cpt + \"/api/analyzeae/\";\r\n\r\nexport const analyzeEAPI = referrer_cpt + \"/api/analyzee/\";\r\n\r\nexport const CPTtracerAPI = referrer_cpt + \"/api/tracer/\";\r\n\r\nexport { referrer_cpt };\r\n\r\n// API URL for Tracer API - NOTE: After being able to call Tracer API, configure Tracer API url\r\n\r\nlet referrer_tracer = \"\";\r\n\r\nif (hostname === \"nan5dfc1web01.corpadds.com\") {\r\n  referrer_tracer = \"http://localhost:51000\";\r\n} else {\r\n  referrer_tracer = \"http://localhost:51000\";\r\n}\r\n\r\nexport const tracerAPI =\r\n  referrer_tracer + \"/u/GPNcpL9ZGkKdTmlbSDMpgQ/Timesheet/Tracer/Tracer\";\r\n\r\nexport { referrer_tracer };\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  FormControl,\r\n  Snackbar,\r\n  OutlinedInput,\r\n  InputLabel,\r\n  makeStyles,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { green } from \"@material-ui/core/colors\";\r\nimport axios from \"axios\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport {\r\n  fileCheckAPI,\r\n  fileServerCheckAPI,\r\n} from \"src/components/APIBase/BaseURL\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n  card: {\r\n    height: \"100%\",\r\n    color: theme.palette.text.secondary,\r\n    minHeight: 688,\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 450,\r\n    maxWidth: 450,\r\n  },\r\n  sortFormControl: {\r\n    maxWidth: 450,\r\n    minWidth: 450,\r\n  },\r\n  sortGroup: {\r\n    position: \"absolute\",\r\n    right: 0,\r\n    top: -40,\r\n  },\r\n  server: {\r\n    wordWrap: \"word-break\",\r\n    textAlign: \"left\",\r\n    color: \"rgba(0, 0, 0, 0.54)\",\r\n  },\r\n  serverHead: {\r\n    color: \"rgba(0, 0, 0, 0.83)\",\r\n    textAlign: \"left\",\r\n    marginTop: 8,\r\n    marginBottom: 3,\r\n  },\r\n}));\r\n\r\nconst useStyleSpinner = makeStyles((theme) => ({\r\n  root: {\r\n    position: \"relative\",\r\n  },\r\n  bottom: {\r\n    color: theme.palette.grey[theme.palette.type === \"light\" ? 200 : 700],\r\n  },\r\n  top: {\r\n    color: \"#3f51b5\",\r\n    animationDuration: \"550ms\",\r\n    position: \"absolute\",\r\n    left: 0,\r\n  },\r\n  circle: {\r\n    strokeLinecap: \"round\",\r\n  },\r\n}));\r\n\r\nfunction CircleProgress(props) {\r\n  const classes = useStyleSpinner();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress\r\n        variant=\"determinate\"\r\n        className={classes.bottom}\r\n        size={40}\r\n        thickness={4}\r\n        {...props}\r\n        value={100}\r\n      />\r\n      <CircularProgress\r\n        variant=\"indeterminate\"\r\n        disableShrink\r\n        className={classes.top}\r\n        classes={{ circle: classes.circle }}\r\n        size={40}\r\n        thickness={4}\r\n        {...props}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst ClientFilePath = ({\r\n  ClientInfo,\r\n  setClientInfo,\r\n  valid,\r\n  setValid,\r\n  Alert,\r\n  setSubOpen,\r\n}) => {\r\n  const classes = useStyles();\r\n  const [checking, setChecking] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n  const [tmpFilePath, setTmpFilePath] = useState(\"\");\r\n  const [serverPath, setServerPath] = useState({\r\n    server: \"\",\r\n    path: \"\",\r\n    size: \"\",\r\n  });\r\n  const [servLoad, setServLoad] = useState(false);\r\n\r\n  const handleInput = (event) => {\r\n    setValid(0);\r\n    setSubOpen(false);\r\n    setClientInfo({ ...ClientInfo, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTmpFilePath(\"\");\r\n  }, [ClientInfo.id]);\r\n\r\n  useEffect(() => {\r\n    if (valid === -1) {\r\n      setServLoad(true);\r\n      console.log(\"test\");\r\n      let url = fileServerCheckAPI;\r\n      async function serverCheck() {\r\n        await axios({\r\n          method: \"GET\",\r\n          url,\r\n        })\r\n          .then(function (response) {\r\n            setServerPath(response.data);\r\n            console.log(\"fileServerCheckAPI in FilePath Success\");\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n            console.log(\"fileServerCheckAPI in File Path\");\r\n          })\r\n          .finally(() => {\r\n            setServLoad(false);\r\n          });\r\n      }\r\n      serverCheck();\r\n    }\r\n  }, [valid]);\r\n\r\n  const checkFilePath = () => {\r\n    // only run check if the user input a value\r\n    setOpen(false);\r\n    if (ClientInfo.filePath) {\r\n      setTmpFilePath(ClientInfo.filePath);\r\n      // check if the user actually changed the input value\r\n      if (ClientInfo.filePath !== tmpFilePath || valid === -4) {\r\n        // check that the filepath leads to a .bak file\r\n        if (\r\n          !ClientInfo.filePath.substr(0, 2).includes(\"\\\\\\\\\") ||\r\n          ClientInfo.filePath\r\n            .substr(2, ClientInfo.filePath.length - 1)\r\n            .split(\"\\\\\").length < 2\r\n        ) {\r\n          // check that the filepath starts with '\\\\' for server path UNC\r\n          setValid(-3);\r\n        } else {\r\n          // check validity\r\n          setValid(0);\r\n          setChecking(true);\r\n          let url = fileCheckAPI + ClientInfo.filePath;\r\n          async function validFileCheck() {\r\n            await axios({\r\n              method: \"GET\",\r\n              url,\r\n              \"Access-Control-Allow-Credentials\": true,\r\n            })\r\n              .then(function (response) {\r\n                console.log(\"fileCheckAPI in FilePath Success\");\r\n                // response will return two properties: file (string) and exist (boolean)\r\n                if (!response.data.exist) {\r\n                  setValid(-1);\r\n                  setOpen(true);\r\n                } else {\r\n                  // check that the inputted file is a .bak file\r\n                  setValid(\r\n                    ClientInfo.filePath.substr(\r\n                      ClientInfo.filePath.length - 4\r\n                    ) !== \".bak\"\r\n                      ? -2\r\n                      : 1\r\n                  );\r\n                  if (\r\n                    ClientInfo.filePath.substr(ClientInfo.filePath.length - 4)\r\n                  ) {\r\n                    setOpen(true);\r\n                  }\r\n                }\r\n              })\r\n              .catch(function (error) {\r\n                setOpen(true);\r\n                setValid(-4);\r\n                console.log(error);\r\n                console.log(\"fileCheckAPI in FilePath\");\r\n              })\r\n              .finally(() => {\r\n                setChecking(false);\r\n              });\r\n          }\r\n          validFileCheck();\r\n        }\r\n      }\r\n    } else {\r\n      setTmpFilePath(\"\");\r\n      setValid(0);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box mb={2}>\r\n        <FormControl className={classes.formControl} variant=\"outlined\">\r\n          <InputLabel required error={valid < 0} htmlFor=\"backupFilePath\">\r\n            Client File Path\r\n          </InputLabel>\r\n          <OutlinedInput\r\n            id=\"clientBackupFilePath\"\r\n            name=\"filePath\"\r\n            placeholder=\"\\\\servername\\filename.bak\"\r\n            value={ClientInfo.filePath}\r\n            onChange={handleInput}\r\n            onBlur={checkFilePath}\r\n            error={valid < 0}\r\n            endAdornment={\r\n              checking ? (\r\n                <CircleProgress />\r\n              ) : valid === -2 ? (\r\n                <ErrorIcon style={{ color: \"#f44336\" }} />\r\n              ) : valid === 1 ? (\r\n                <CheckCircleIcon style={{ color: green[500] }} />\r\n              ) : (\r\n                \"\"\r\n              )\r\n            }\r\n            labelWidth={75}\r\n          />\r\n          <p\r\n            id=\"filePathResult\"\r\n            style={{\r\n              color:\r\n                valid === 1\r\n                  ? \"rgb(76, 175, 80)\"\r\n                  : valid < 0\r\n                  ? \"#f44336\"\r\n                  : \"rgba(0, 0, 0, 0.54)\",\r\n              marginBottom: \"0px\",\r\n              marginTop: \"5px\",\r\n              fontSize: \"14px\",\r\n              textAlign: \"left\",\r\n            }}\r\n          >\r\n            {checking\r\n              ? \"Checking file path for accessibility...\"\r\n              : valid === 1\r\n              ? \"File path is valid and accessible\"\r\n              : valid === -1\r\n              ? \"File cannot be accessed from our file servers\"\r\n              : valid === -2\r\n              ? \"File exists, but must be a .bak file\"\r\n              : valid === -3\r\n              ? \"File path does not follow server UNC\"\r\n              : valid === -4\r\n              ? \"Check failed, try again\"\r\n              : \"Please provide a valid UNC backup file path to our File Servers\"}\r\n          </p>\r\n          {valid === -1 || valid === -2 || valid === -4 ? (\r\n            <Snackbar open={open} onClose={handleClose} autoHideDuration={6000}>\r\n              <Alert\r\n                id=\"filePathError\"\r\n                onClose={handleClose}\r\n                severity={valid === -2 ? \"warning\" : \"error\"}\r\n              >\r\n                {valid === -2\r\n                  ? \"Error: Backup file must be a .bak file. Please rename the file to the appropriate file type.\"\r\n                  : valid === -4\r\n                  ? \"There was an error in checking your file. Please try again.\"\r\n                  : \"Error: Backup file is inaccessible. Make sure that your file has been copied to our accessible file servers.\"}\r\n              </Alert>\r\n            </Snackbar>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {valid === -1 ? (\r\n            servLoad ? (\r\n              <Box mt={2}>\r\n                <div style={{ justifyContent: \"center\", marginLeft: \"1em\" }}>\r\n                  <Loader\r\n                    type=\"ThreeDots\"\r\n                    color=\"#00BFFF\"\r\n                    height={50}\r\n                    width={50}\r\n                    timeout={20000}\r\n                  />\r\n                </div>\r\n              </Box>\r\n            ) : (\r\n              <Box mt={1} mb={1}>\r\n                <p className={classes.serverHead}>Recommended Server Path: </p>\r\n                <p\r\n                  id=\"serverPath\"\r\n                  className={classes.server}\r\n                  style={{ wordWrap: \"break-word\" }}\r\n                >\r\n                  {serverPath.path}\r\n                </p>\r\n                <p className={classes.serverHead}>\r\n                  Available Space:{\" \"}\r\n                  <span className={classes.server} id=\"serverSpace\">\r\n                    {serverPath.size}\r\n                  </span>\r\n                </p>\r\n              </Box>\r\n            )\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </FormControl>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ClientFilePath;\r\n","import React from \"react\";\r\nimport { Box, FormControl, TextField, makeStyles } from \"@material-ui/core\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n  card: {\r\n    height: \"100%\",\r\n    color: theme.palette.text.secondary,\r\n    minHeight: 688,\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 450,\r\n    maxWidth: 450,\r\n  },\r\n  sortFormControl: {\r\n    maxWidth: 450,\r\n    minWidth: 450,\r\n  },\r\n  sortGroup: {\r\n    position: \"absolute\",\r\n    right: 0,\r\n    top: -40,\r\n  },\r\n  server: {\r\n    wordWrap: \"word-break\",\r\n    textAlign: \"left\",\r\n    color: \"rgba(0, 0, 0, 0.54)\",\r\n  },\r\n  serverHead: {\r\n    color: \"rgba(0, 0, 0, 0.83)\",\r\n    textAlign: \"left\",\r\n    marginTop: 8,\r\n    marginBottom: 3,\r\n  },\r\n}));\r\n\r\nconst ClientCatSelect = ({\r\n  ClientInfo,\r\n  setClientInfo,\r\n  categoryList,\r\n  setSubOpen,\r\n}) => {\r\n  const classes = useStyles();\r\n  if (categoryList) {\r\n    return (\r\n      <Box mb={2}>\r\n        <FormControl required className={classes.formControl}>\r\n          <Autocomplete\r\n            id=\"clientCategory\"\r\n            options={categoryList}\r\n            required\r\n            value={ClientInfo}\r\n            // If the user decides to change the category, all category data previously fetched gets overwritten\r\n            onChange={(event, newValue) => {\r\n              setSubOpen(false);\r\n              setClientInfo((prev) => {\r\n                let update = { ...prev };\r\n                update.category = newValue ? newValue.category : \"\";\r\n                update.status = newValue ? newValue.status : 0;\r\n                update.clientId = -1;\r\n                update.clientName = \"\";\r\n                update.clientDb = \"\";\r\n                update.adminDb = \"\";\r\n                update.adminDbSrv = \"\";\r\n                update.namespace = null;\r\n                update.namespace2 = null;\r\n                return update;\r\n              });\r\n            }}\r\n            getOptionSelected={(option, value) =>\r\n              option.category === value.category &&\r\n              option.status === value.status\r\n            }\r\n            getOptionLabel={(option) =>\r\n              option.category ? option.category.toLowerCase() : \"\"\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Client Test Infrastructure\"\r\n                required\r\n                variant=\"outlined\"\r\n              />\r\n            )}\r\n          />\r\n        </FormControl>\r\n      </Box>\r\n    );\r\n  }\r\n};\r\n\r\nexport default ClientCatSelect;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  FormControl,\r\n  TextField,\r\n  FormControlLabel,\r\n  RadioGroup,\r\n  Radio,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport axios from \"axios\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { adminClientAPI } from \"src/components/APIBase/BaseURL\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n  card: {\r\n    height: \"100%\",\r\n    color: theme.palette.text.secondary,\r\n    minHeight: 688,\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 450,\r\n    maxWidth: 450,\r\n  },\r\n  sortFormControl: {\r\n    maxWidth: 450,\r\n    minWidth: 450,\r\n  },\r\n  sortGroup: {\r\n    position: \"absolute\",\r\n    right: 0,\r\n    top: -40,\r\n  },\r\n  server: {\r\n    wordWrap: \"word-break\",\r\n    textAlign: \"left\",\r\n    color: \"rgba(0, 0, 0, 0.54)\",\r\n  },\r\n  serverHead: {\r\n    color: \"rgba(0, 0, 0, 0.83)\",\r\n    textAlign: \"left\",\r\n    marginTop: 8,\r\n    marginBottom: 3,\r\n  },\r\n}));\r\n\r\nconst ClientSelect = ({\r\n  clientList,\r\n  ClientInfo,\r\n  setClientInfo,\r\n  valid,\r\n  setSubOpen,\r\n}) => {\r\n  const classes = useStyles();\r\n  const [list, setList] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let api = async () => {\r\n      switch (ClientInfo.id) {\r\n        case 1:\r\n          if (ClientInfo.category) {\r\n            setLoading(true);\r\n            let url = adminClientAPI + ClientInfo.category;\r\n            //gets the list of clients using the category selected\r\n            await axios({\r\n              method: \"GET\",\r\n              url,\r\n            })\r\n              .then(function (response) {\r\n                setList(response.data);\r\n                // setInput1ClientList(response.data);\r\n                console.log(\"adminClientAPI in ClientSelect Success\");\r\n              })\r\n              .catch(function (error) {\r\n                console.log(error);\r\n                console.log(\"adminClientAPI in ClientSelect\");\r\n              })\r\n              .finally(() => {\r\n                setLoading(false);\r\n              });\r\n          }\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    };\r\n    api();\r\n  }, [ClientInfo.category, ClientInfo.id, clientList, valid]);\r\n\r\n  //handles sorting by client ID or by client name (radio buttons)\r\n  function handleSort(sortParam) {\r\n    if (sortParam === \"ID\") {\r\n      setList(list.sort((a, b) => a.clientId - b.clientId));\r\n    } else {\r\n      setList(\r\n        list.sort((a, b) =>\r\n          a.clientName.trim().localeCompare(b.clientName.trim())\r\n        )\r\n      );\r\n    }\r\n  }\r\n\r\n  if (loading || clientList.length < 2) {\r\n    return (\r\n      <Box mb={2}>\r\n        <div style={{ justifyContent: \"center\", marginLeft: \"1em\" }}>\r\n          <Loader\r\n            type=\"ThreeDots\"\r\n            color=\"#000000\"\r\n            height={50}\r\n            width={50}\r\n            timeout={20000}\r\n          />\r\n        </div>\r\n      </Box>\r\n    );\r\n  } else {\r\n    return (\r\n      <Box mt={4} mb={2}>\r\n        <FormControl required className={classes.formControl}>\r\n          <RadioGroup\r\n            className={classes.sortGroup}\r\n            row\r\n            aria-label=\"sort\"\r\n            name=\"sort\"\r\n            onChange={(event) => handleSort(event.target.value)}\r\n            defaultValue=\"Name\"\r\n          >\r\n            <FormControlLabel\r\n              value=\"ID\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"Sort Client ID\"\r\n              labelPlacement=\"start\"\r\n            />\r\n            <FormControlLabel\r\n              value=\"Name\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"Sort Client Name\"\r\n              labelPlacement=\"start\"\r\n            />\r\n          </RadioGroup>\r\n          <Autocomplete\r\n            id=\"Client\"\r\n            options={list}\r\n            required\r\n            value={ClientInfo}\r\n            onChange={(event, newValue) => {\r\n              setSubOpen(false);\r\n              //if the user decides to change the client, all client data previously fetched gets overwritten\r\n              setClientInfo((prev) => {\r\n                let update = { ...prev };\r\n                update.clientId = newValue ? newValue.clientId : -1;\r\n                update.clientName = newValue ? newValue.clientName : \"\";\r\n                update.clientDb = newValue ? newValue.clientDb : \"\";\r\n                update.adminDb = newValue ? newValue.adminDb : \"\";\r\n                update.adminDbSrv = newValue ? newValue.adminDbSrv : \"\";\r\n                update.site = newValue ? newValue.site : \"\";\r\n                update.dbSize =\r\n                  newValue && (ClientInfo.id === 2 || ClientInfo.id === 3)\r\n                    ? newValue.dbSize\r\n                    : 0;\r\n                update.namespace = null;\r\n                update.namespace2 = null;\r\n                return update;\r\n              });\r\n            }}\r\n            getOptionSelected={(option, value) =>\r\n              option.clientId === value.clientId &&\r\n              option.clientName === value.clientName &&\r\n              option.adminDb === value.adminDb &&\r\n              option.adminDbSrv === value.adminDbSrv &&\r\n              (ClientInfo.id === 1 ||\r\n                (ClientInfo.id > 1 && option.site === value.site))\r\n            }\r\n            getOptionLabel={(option) =>\r\n              option.clientName\r\n                ? ClientInfo.id < 3\r\n                  ? option.clientName?.toLowerCase() + \"-\" + option.clientId\r\n                  : option.clientDb === \"\" ||\r\n                    option.clientDb\r\n                      ?.toLowerCase()\r\n                      .localeCompare(option.clientName?.toLowerCase()) === 0\r\n                  ? option.clientName?.toLowerCase() +\r\n                    \"-\" +\r\n                    option.clientId +\r\n                    \" [\" +\r\n                    option.site?.toLowerCase() +\r\n                    \"]\"\r\n                  : option.clientName?.toLowerCase() +\r\n                    \"-\" +\r\n                    option.clientId +\r\n                    \" (\" +\r\n                    option.clientDb?.toLowerCase() +\r\n                    \") [\" +\r\n                    option.site?.toLowerCase() +\r\n                    \"]\"\r\n                : \"\"\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label={\r\n                  ClientInfo.id === 2 ? \"Client Given File Info\" : \"Client Info\"\r\n                }\r\n                required\r\n                variant=\"outlined\"\r\n              />\r\n            )}\r\n          />\r\n          {ClientInfo.site && ClientInfo.id === 3 ? (\r\n            <p\r\n              id=\"clientDBVersion\"\r\n              style={{\r\n                color: \"rgba(0, 0, 0, 0.54)\",\r\n                marginBottom: \"0px\",\r\n                marginTop: \"5px\",\r\n                fontSize: \"14px\",\r\n                textAlign: \"left\",\r\n              }}\r\n            >\r\n              Database Version: {ClientInfo.adminDb}\r\n            </p>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </FormControl>\r\n      </Box>\r\n    );\r\n  }\r\n};\r\n\r\nexport default ClientSelect;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  FormControl,\r\n  Typography,\r\n  Button,\r\n  TextField,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport axios from \"axios\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { namespaceAPI } from \"src/components/APIBase/BaseURL\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n  card: {\r\n    height: \"100%\",\r\n    color: theme.palette.text.secondary,\r\n    minHeight: 688,\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 450,\r\n    maxWidth: 450,\r\n  },\r\n  sortFormControl: {\r\n    maxWidth: 450,\r\n    minWidth: 450,\r\n  },\r\n  sortGroup: {\r\n    position: \"absolute\",\r\n    right: 0,\r\n    top: -40,\r\n  },\r\n  server: {\r\n    wordWrap: \"word-break\",\r\n    textAlign: \"left\",\r\n    color: \"rgba(0, 0, 0, 0.54)\",\r\n  },\r\n  serverHead: {\r\n    color: \"rgba(0, 0, 0, 0.83)\",\r\n    textAlign: \"left\",\r\n    marginTop: 8,\r\n    marginBottom: 3,\r\n  },\r\n}));\r\n\r\nconst ClientNamespaceSelect1 = ({ ClientInfo, setClientInfo, setSubOpen }) => {\r\n  const classes = useStyles();\r\n  const [list, setList] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [displayArr, setDisplayArr] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (ClientInfo.clientId > 0 && ClientInfo.id === 1 && ClientInfo.category) {\r\n      setLoading(true);\r\n      let api = async () => {\r\n        let url =\r\n          namespaceAPI + ClientInfo.category + \"&id=\" + ClientInfo.clientId;\r\n        //gets the list of name spaces\r\n        await axios({\r\n          method: \"GET\",\r\n          url,\r\n        })\r\n          .then(function (response) {\r\n            setList(response.data);\r\n            console.log(\"namespaceAPI in NamespaceSelect1 Success\");\r\n          })\r\n          .finally(() => {\r\n            setLoading(false);\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n            console.log(\"namespaceAPI in NamespaceSelect1\");\r\n          });\r\n      };\r\n      api();\r\n    }\r\n  }, [ClientInfo.category, ClientInfo.clientId, ClientInfo.id]);\r\n\r\n  useEffect(() => {\r\n    let tmp = [];\r\n    if (list) {\r\n      list.forEach(function (item) {\r\n        if (\r\n          !item.dbName.includes(\"[DB not available]\") &&\r\n          !item.site.includes(\"root\")\r\n        ) {\r\n          tmp.push(item);\r\n        }\r\n      });\r\n      if (tmp.length > 0) {\r\n        tmp = tmp.sort((a, b) => parseInt(a.version) - parseInt(b.version));\r\n        tmp.forEach(function (x) {\r\n          if (ClientInfo.category.toLowerCase() === \"qa\") {\r\n            // need to check for wfm, and payroll clients\r\n            const hrpayroll =\r\n              /([a-z])*(hrpayroll)([a-z])*([0-9])+( (- )?[0-9]+)?\\w+/g;\r\n            const hr = /([a-z])*(hr)([a-z])*([0-9])+( (- )?[0-9]+)?\\w+/g;\r\n            const payroll =\r\n              /([a-z])*(payroll)([a-z])*([0-9])+( (- )?[0-9]+)?\\w+/g;\r\n            const wfm = /([a-z])*(wfm)([a-z])*([0-9])+( (- )?[0-9]+)?\\w+/g;\r\n            let site = \"\";\r\n            if (hrpayroll.test(ClientInfo.clientName.toLowerCase())) {\r\n              site = \"qa\";\r\n            } else if (hr.test(ClientInfo.clientName.toLowerCase())) {\r\n              site = \"qahr\";\r\n            } else if (payroll.test(ClientInfo.clientName.toLowerCase())) {\r\n              site = \"payroll\";\r\n            } else if (wfm.test(ClientInfo.clientName.toLowerCase())) {\r\n              site = \"qawfm\";\r\n            } else {\r\n              site = \"qa\";\r\n            }\r\n            x.label = x.version + site + ClientInfo.clientId;\r\n          } else {\r\n            x.label = x.dbName.toLowerCase();\r\n          }\r\n        });\r\n        setDisplayArr(tmp);\r\n        setOpen(false);\r\n      } else {\r\n        setDisplayArr(tmp);\r\n        setLoading(true);\r\n        setOpen(true);\r\n      }\r\n    }\r\n  }, [list, ClientInfo.category, ClientInfo.clientId, ClientInfo.clientName]);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const switchToolbox = () => {\r\n    setClientInfo((prev) => {\r\n      let update = { ...prev };\r\n      update.id = 3;\r\n      update.envName = \"toolbox\";\r\n      update.filePath = \"\";\r\n      update.category = \"\";\r\n      update.status = 0;\r\n      update.clientId = -1;\r\n      update.clientName = \"\";\r\n      update.clientDb = \"\";\r\n      update.site = \"\";\r\n      update.dbSize = 0;\r\n      update.dbSize2 = 0;\r\n      update.adminDb = \"\";\r\n      update.adminDbSrv = \"\";\r\n      update.namespace = null;\r\n      update.namespace2 = null;\r\n      return update;\r\n    });\r\n    setOpen(false);\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Box mb={2}>\r\n        <div style={{ justifyContent: \"center\", marginLeft: \"1em\" }}>\r\n          <Loader type=\"ThreeDots\" color=\"#000000\" height={50} width={50} />\r\n        </div>\r\n      </Box>\r\n    );\r\n  } else {\r\n    return (\r\n      <Box mb={2}>\r\n        <FormControl required className={classes.formControl}>\r\n          {displayArr.length > 0 ? (\r\n            <Autocomplete\r\n              id=\"clientNamespace1\"\r\n              options={displayArr}\r\n              required\r\n              value={ClientInfo.namespace}\r\n              onChange={(event, newValue) => {\r\n                setSubOpen(false);\r\n                setClientInfo((prev) => {\r\n                  let update = { ...prev };\r\n                  update.namespace = newValue;\r\n                  update.dbSize = newValue ? newValue.dbSize : 0;\r\n                  return update;\r\n                });\r\n              }}\r\n              getOptionSelected={(option, value) => option.site === value.site}\r\n              getOptionLabel={(option) =>\r\n                option.label\r\n                  ? `${option.site?.toLowerCase()} ${option.dbName?.toLowerCase()} [${\r\n                      option.version\r\n                    }]`\r\n                  : \"\"\r\n              }\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Client DB Version 1\"\r\n                  required\r\n                  variant=\"outlined\"\r\n                />\r\n              )}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <Dialog\r\n            open={false}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"emptyNamespaceTitle\"\r\n            aria-describedby=\"emptyNamespaceContent\"\r\n          >\r\n            <DialogTitle id=\"emptyNamespaceTitle\">\r\n              <Typography style={{ fontSize: \"1.25rem\" }}>\r\n                Client Empty Namespace\r\n              </Typography>\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText id=\"emptyNamespaceContent\">\r\n                The selected Client has no existing database namespace versions\r\n                in our admin database servers. Consider restoring the database\r\n                from Toolbox servers instead.\r\n              </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={handleClose} color=\"primary\">\r\n                Change Client\r\n              </Button>\r\n              <Button onClick={switchToolbox} color=\"primary\">\r\n                Switch to Toolbox\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n          <Typography\r\n            style={{ visibility: open ? \"visible\" : \"hidden\", color: \"red\" }}\r\n            variant=\"subtitle1\"\r\n            gutterBottom\r\n          >\r\n            The selected Client has no existing database namespace versions in\r\n            our admin database servers\r\n          </Typography>\r\n        </FormControl>\r\n      </Box>\r\n    );\r\n  }\r\n};\r\n\r\nexport default ClientNamespaceSelect1;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  FormControl,\r\n  Typography,\r\n  Button,\r\n  TextField,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport axios from \"axios\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { namespaceAPI } from \"src/components/APIBase/BaseURL\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n  card: {\r\n    height: \"100%\",\r\n    color: theme.palette.text.secondary,\r\n    minHeight: 688,\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 450,\r\n    maxWidth: 450,\r\n  },\r\n  sortFormControl: {\r\n    maxWidth: 450,\r\n    minWidth: 450,\r\n  },\r\n  sortGroup: {\r\n    position: \"absolute\",\r\n    right: 0,\r\n    top: -40,\r\n  },\r\n  server: {\r\n    wordWrap: \"word-break\",\r\n    textAlign: \"left\",\r\n    color: \"rgba(0, 0, 0, 0.54)\",\r\n  },\r\n  serverHead: {\r\n    color: \"rgba(0, 0, 0, 0.83)\",\r\n    textAlign: \"left\",\r\n    marginTop: 8,\r\n    marginBottom: 3,\r\n  },\r\n}));\r\n\r\nconst ClientNamespaceSelect2 = ({ ClientInfo, setClientInfo, setSubOpen }) => {\r\n  const classes = useStyles();\r\n  const [list, setList] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [displayArr, setDisplayArr] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (ClientInfo.clientId > 0 && ClientInfo.id === 1 && ClientInfo.category) {\r\n      setLoading(true);\r\n      let api = async () => {\r\n        let url =\r\n          namespaceAPI + ClientInfo.category + \"&id=\" + ClientInfo.clientId;\r\n        //gets the list of name spaces\r\n        await axios({\r\n          method: \"GET\",\r\n          url,\r\n        })\r\n          .then(function (response) {\r\n            setList(response.data);\r\n            console.log(\"namespaceAPI in NamespaceSelect2 Success\");\r\n          })\r\n          .finally(() => {\r\n            setLoading(false);\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n            console.log(\"namespaceAPI in NamespaceSelect2\");\r\n          });\r\n      };\r\n      api();\r\n    }\r\n  }, [ClientInfo.category, ClientInfo.clientId, ClientInfo.id]);\r\n\r\n  useEffect(() => {\r\n    let tmp = [];\r\n    if (list) {\r\n      list.forEach(function (item) {\r\n        if (\r\n          !item.dbName.includes(\"[DB not available]\") &&\r\n          !item.site.includes(\"root\")\r\n        ) {\r\n          tmp.push(item);\r\n        }\r\n      });\r\n      if (tmp.length > 0) {\r\n        tmp = tmp.sort((a, b) => parseInt(a.version) - parseInt(b.version));\r\n        tmp.forEach(function (x) {\r\n          if (ClientInfo.category.toLowerCase() === \"qa\") {\r\n            // need to check for wfm, and payroll clients\r\n            const hrpayroll =\r\n              /([a-z])*(hrpayroll)([a-z])*([0-9])+( (- )?[0-9]+)?\\w+/g;\r\n            const hr = /([a-z])*(hr)([a-z])*([0-9])+( (- )?[0-9]+)?\\w+/g;\r\n            const payroll =\r\n              /([a-z])*(payroll)([a-z])*([0-9])+( (- )?[0-9]+)?\\w+/g;\r\n            const wfm = /([a-z])*(wfm)([a-z])*([0-9])+( (- )?[0-9]+)?\\w+/g;\r\n            let site = \"\";\r\n            if (hrpayroll.test(ClientInfo.clientName.toLowerCase())) {\r\n              site = \"qa\";\r\n            } else if (hr.test(ClientInfo.clientName.toLowerCase())) {\r\n              site = \"qahr\";\r\n            } else if (payroll.test(ClientInfo.clientName.toLowerCase())) {\r\n              site = \"payroll\";\r\n            } else if (wfm.test(ClientInfo.clientName.toLowerCase())) {\r\n              site = \"qawfm\";\r\n            } else {\r\n              site = \"qa\";\r\n            }\r\n            x.label = x.version + site + ClientInfo.clientId;\r\n          } else {\r\n            x.label = x.dbName.toLowerCase();\r\n          }\r\n        });\r\n        setDisplayArr(tmp);\r\n        setOpen(false);\r\n      } else {\r\n        setDisplayArr(tmp);\r\n        setLoading(true);\r\n        setOpen(true);\r\n      }\r\n    }\r\n  }, [list, ClientInfo.category, ClientInfo.clientId, ClientInfo.clientName]);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const switchToolbox = () => {\r\n    setClientInfo((prev) => {\r\n      let update = { ...prev };\r\n      update.id = 3;\r\n      update.envName = \"toolbox\";\r\n      update.filePath = \"\";\r\n      update.category = \"\";\r\n      update.status = 0;\r\n      update.clientId = -1;\r\n      update.clientName = \"\";\r\n      update.clientDb = \"\";\r\n      update.site = \"\";\r\n      update.dbSize = 0;\r\n      update.dbSize2 = 0;\r\n      update.adminDb = \"\";\r\n      update.adminDbSrv = \"\";\r\n      update.namespace = null;\r\n      update.namespace2 = null;\r\n      return update;\r\n    });\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Box mb={2}>\r\n        <div style={{ justifyContent: \"center\", marginLeft: \"1em\" }}>\r\n          <Loader type=\"ThreeDots\" color=\"#000000\" height={50} width={50} />\r\n        </div>\r\n      </Box>\r\n    );\r\n  } else {\r\n    return (\r\n      <Box mb={2}>\r\n        <FormControl required className={classes.formControl}>\r\n          {displayArr.length > 0 ? (\r\n            <Autocomplete\r\n              id=\"clientNamespace2\"\r\n              options={displayArr}\r\n              required\r\n              value={ClientInfo.namespace2}\r\n              onChange={(event, newValue) => {\r\n                setSubOpen(false);\r\n                setClientInfo((prev) => {\r\n                  let update = { ...prev };\r\n                  update.namespace2 = newValue;\r\n                  update.dbSize2 = newValue ? newValue.dbSize : 0;\r\n                  return update;\r\n                });\r\n              }}\r\n              getOptionSelected={(option, value) => option.site === value.site}\r\n              getOptionLabel={(option) =>\r\n                option.label\r\n                  ? `${option.site?.toLowerCase()} ${option.dbName?.toLowerCase()} [${\r\n                      option.version\r\n                    }]`\r\n                  : \"\"\r\n              }\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Client DB Version 2\"\r\n                  required\r\n                  variant=\"outlined\"\r\n                />\r\n              )}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <Dialog\r\n            open={false}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"emptyNamespaceTitle\"\r\n            aria-describedby=\"emptyNamespaceContent\"\r\n          >\r\n            <DialogTitle id=\"emptyNamespaceTitle\">\r\n              <Typography style={{ fontSize: \"1.25rem\" }}>\r\n                Client Empty Namespace\r\n              </Typography>\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText id=\"emptyNamespaceContent\">\r\n                The selected Client has no existing database namespace versions\r\n                in our admin database servers. Consider restoring the database\r\n                from Toolbox servers instead.\r\n              </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={handleClose} color=\"primary\">\r\n                Change Client\r\n              </Button>\r\n              <Button onClick={switchToolbox} color=\"primary\">\r\n                Switch to Toolbox\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n          <Typography\r\n            style={{ visibility: open ? \"visible\" : \"hidden\", color: \"red\" }}\r\n            variant=\"subtitle1\"\r\n            gutterBottom\r\n          >\r\n            The selected Client has no existing database namespace versions in\r\n            our admin database servers\r\n          </Typography>\r\n        </FormControl>\r\n      </Box>\r\n    );\r\n  }\r\n};\r\n\r\nexport default ClientNamespaceSelect2;\r\n","import React from \"react\";\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  Tooltip,\r\n  Divider,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport {\r\n  ClientEnvSelect,\r\n  ClientCatSelect,\r\n  ClientSelect,\r\n} from \"./components/index\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n  card: {\r\n    height: \"100%\",\r\n    color: theme.palette.text.secondary,\r\n    minHeight: 400,\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 450,\r\n    maxWidth: 450,\r\n  },\r\n  sortFormControl: {\r\n    maxWidth: 450,\r\n    minWidth: 450,\r\n  },\r\n  sortGroup: {\r\n    position: \"absolute\",\r\n    right: 0,\r\n    top: -40,\r\n  },\r\n  server: {\r\n    wordWrap: \"word-break\",\r\n    textAlign: \"left\",\r\n    color: \"rgba(0, 0, 0, 0.54)\",\r\n  },\r\n  serverHead: {\r\n    color: \"rgba(0, 0, 0, 0.83)\",\r\n    textAlign: \"left\",\r\n    marginTop: 8,\r\n    marginBottom: 3,\r\n  },\r\n}));\r\n\r\nconst ClientCard = ({\r\n  ClientInfo,\r\n  setClientInfo,\r\n  valid,\r\n  setValid,\r\n  categoryList,\r\n  clientList,\r\n  setSubOpen,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <Box mt={2} mb={2}>\r\n        <Tooltip title=\"Select Client Environment\">\r\n          <Typography variant=\"h5\" align=\"center\" color=\"primary\">\r\n            Client\r\n          </Typography>\r\n        </Tooltip>\r\n      </Box>\r\n      <Divider />\r\n      <CardContent>\r\n        <Box mt={2} mb={2}>\r\n          <ClientEnvSelect\r\n            ClientInfo={ClientInfo}\r\n            setClientInfo={setClientInfo}\r\n            setValid={setValid}\r\n            setSubOpen={setSubOpen}\r\n          />\r\n          {ClientInfo.id === 1 ? (\r\n            <ClientCatSelect\r\n              ClientInfo={ClientInfo}\r\n              setClientInfo={setClientInfo}\r\n              categoryList={categoryList}\r\n              setSubOpen={setSubOpen}\r\n            />\r\n          ) : (\r\n            <Box></Box>\r\n          )}\r\n          {ClientInfo.category ? (\r\n            <ClientSelect\r\n              clientList={clientList}\r\n              ClientInfo={ClientInfo}\r\n              setClientInfo={setClientInfo}\r\n              valid={valid}\r\n              setSubOpen={setSubOpen}\r\n            />\r\n          ) : (\r\n            <Box></Box>\r\n          )}\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ClientCard;\r\n","import React from \"react\";\r\nimport {\r\n  Box,\r\n  Tooltip,\r\n  Divider,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\n\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nimport {\r\n  ClientNamespaceSelect1,\r\n  ClientNamespaceSelect2,\r\n} from \"../ClientCard/components\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n  card: {\r\n    height: \"100%\",\r\n    color: theme.palette.text.secondary,\r\n    minHeight: 400,\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 450,\r\n    maxWidth: 450,\r\n  },\r\n  sortFormControl: {\r\n    maxWidth: 450,\r\n    minWidth: 450,\r\n  },\r\n  sortGroup: {\r\n    position: \"absolute\",\r\n    right: 0,\r\n    top: -40,\r\n  },\r\n  list: {\r\n    listStyle: \"none\",\r\n    textAlign: \"left\",\r\n    fontSize: 14,\r\n    paddingInlineStart: \"15px\",\r\n    paddingInlineEnd: \"15px\",\r\n    marginBlockStart: \"5px\",\r\n    marginBlockEnd: \"5px\",\r\n    wordBreak: \"break-word\",\r\n  },\r\n  listLi: {\r\n    margin: \"5px 0\",\r\n    color: \"rgba(0, 0, 0, 0.54)\",\r\n  },\r\n  listTitle: {\r\n    color: \"rgba(0, 0, 0, 0.83);\",\r\n  },\r\n}));\r\n\r\nconst VersionsCard = ({\r\n  ClientInfo,\r\n  setClientInfo,\r\n  setSubOpen,\r\n}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Card className={classes.card}>\r\n      <Box mt={2} mb={2}>\r\n        <Tooltip title=\"Select 2 Version to be compared\">\r\n          <Typography variant=\"h5\" align=\"center\" color=\"primary\">\r\n            Versions\r\n          </Typography>\r\n        </Tooltip>\r\n      </Box>\r\n      <Divider />\r\n      <CardContent>\r\n        <Box mt={1} mb={2}>\r\n          {ClientInfo.clientId > 0 &&\r\n          ClientInfo.id === 1 &&\r\n          ClientInfo.category ? (\r\n            <ClientNamespaceSelect1\r\n              ClientInfo={ClientInfo}\r\n              setClientInfo={setClientInfo}\r\n              setSubOpen={setSubOpen}\r\n            />\r\n          ) : (\r\n            <Box></Box>\r\n          )}\r\n          {ClientInfo.clientId > 0 &&\r\n          ClientInfo.id === 1 &&\r\n          ClientInfo.category ? (\r\n            <ClientNamespaceSelect2\r\n              ClientInfo={ClientInfo}\r\n              setClientInfo={setClientInfo}\r\n              setSubOpen={setSubOpen}\r\n            />\r\n          ) : (\r\n            <Box></Box>\r\n          )}\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default VersionsCard;\r\n","import React from \"react\";\r\nimport { Box, FormControl, TextField, makeStyles } from \"@material-ui/core\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n  card: {\r\n    height: \"100%\",\r\n    color: theme.palette.text.secondary,\r\n    minHeight: 688,\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 450,\r\n    maxWidth: 450,\r\n  },\r\n  sortFormControl: {\r\n    maxWidth: 450,\r\n    minWidth: 450,\r\n  },\r\n  sortGroup: {\r\n    position: \"absolute\",\r\n    right: 0,\r\n    top: -40,\r\n  },\r\n  server: {\r\n    wordWrap: \"word-break\",\r\n    textAlign: \"left\",\r\n    color: \"rgba(0, 0, 0, 0.54)\",\r\n  },\r\n  serverHead: {\r\n    color: \"rgba(0, 0, 0, 0.83)\",\r\n    textAlign: \"left\",\r\n    marginTop: 8,\r\n    marginBottom: 3,\r\n  },\r\n}));\r\n\r\nconst JobSelect = ({ Job, setJob, setSubOpen, jobchangereset }) => {\r\n  const classes = useStyles();\r\n  //6 options for selecting the job\r\n  const jobList = [\r\n    { jobName: \"Pay Summary Recalc\", id: 1, file: \"PSR\" },\r\n    { jobName: \"Base Rate Recalc\", id: 2, file: \"BRR\" },\r\n    { jobName: \"Schedule Cost Recalc\", id: 3, file: \"SCR\" },\r\n    { jobName: \"Job Step Recalc\", id: 4, file: \"JobStepRecalc\" },\r\n    { jobName: \"Pay Export\", id: 5, file: \"Export\" },\r\n    { jobName: \"Award Entitlement\", id: 6, file: \"AE_Sample\" },\r\n  ];\r\n  return (\r\n    <Box mb={2}>\r\n      <FormControl required className={classes.formControl}>\r\n        <Autocomplete\r\n          id=\"job\"\r\n          options={jobList}\r\n          value={Job}\r\n          required\r\n          getOptionSelected={(option, value) => option.id === value.id}\r\n          getOptionLabel={(option) =>\r\n            option.id === 1\r\n              ? \"Pay Summary Recalc\"\r\n              : option.id === 2\r\n              ? \"Base Rate Recalc\"\r\n              : option.id === 3\r\n              ? \"Schedule Cost Recalc\"\r\n              : option.id === 4\r\n              ? \"Job Step Recalc\"\r\n              : option.id === 5\r\n              ? \"Pay Export\"\r\n              : option.id === 6\r\n              ? \"Award Entitlement\"\r\n              : \"\"\r\n          }\r\n          onChange={(event, newValue) => {\r\n            setJob((prev) => {\r\n              let update = { ...prev };\r\n              update.jobName = newValue ? newValue.jobName : \"\";\r\n              update.id = newValue ? newValue.id : 0;\r\n              update.file = newValue ? newValue.file : \"\";\r\n              return update;\r\n            });\r\n            jobchangereset();\r\n            setSubOpen(false);\r\n          }}\r\n          renderInput={(params) => (\r\n            <TextField {...params} label=\"Job\" required variant=\"outlined\" />\r\n          )}\r\n        />\r\n      </FormControl>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default JobSelect;\r\n","import React from \"react\";\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  Tooltip,\r\n  Divider,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport JobSelect from \"./components/JobSelect\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n  card: {\r\n    height: \"100%\",\r\n    color: theme.palette.text.secondary,\r\n    minHeight: 200,\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 450,\r\n    maxWidth: 450,\r\n  },\r\n  sortFormControl: {\r\n    maxWidth: 450,\r\n    minWidth: 450,\r\n  },\r\n  sortGroup: {\r\n    position: \"absolute\",\r\n    right: 0,\r\n    top: -40,\r\n  },\r\n  server: {\r\n    wordWrap: \"word-break\",\r\n    textAlign: \"left\",\r\n    color: \"rgba(0, 0, 0, 0.54)\",\r\n  },\r\n  serverHead: {\r\n    color: \"rgba(0, 0, 0, 0.83)\",\r\n    textAlign: \"left\",\r\n    marginTop: 8,\r\n    marginBottom: 3,\r\n  },\r\n}));\r\n\r\nconst TargetJobCard = ({ Job, setJob, setSubOpen, jobchangereset }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Card className={classes.card}>\r\n      <Box mt={2} mb={2}>\r\n        <Tooltip title=\"Select Target Job\">\r\n          <Typography variant=\"h5\" align=\"center\" color=\"primary\">\r\n            Target Job\r\n          </Typography>\r\n        </Tooltip>\r\n      </Box>\r\n      <Divider />\r\n      <CardContent>\r\n        <Box mt={2} mb={2}>\r\n          <JobSelect\r\n            Job={Job}\r\n            setJob={setJob}\r\n            setSubOpen={setSubOpen}\r\n            jobchangereset={jobchangereset}\r\n          />\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TargetJobCard;\r\n","import React from \"react\";\r\nimport { Box, FormControl, TextField, makeStyles } from \"@material-ui/core\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n  card: {\r\n    height: \"100%\",\r\n    color: theme.palette.text.secondary,\r\n    minHeight: 688,\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 450,\r\n    maxWidth: 450,\r\n  },\r\n  sortFormControl: {\r\n    maxWidth: 450,\r\n    minWidth: 450,\r\n  },\r\n  sortGroup: {\r\n    position: \"absolute\",\r\n    right: 0,\r\n    top: -40,\r\n  },\r\n  server: {\r\n    wordWrap: \"word-break\",\r\n    textAlign: \"left\",\r\n    color: \"rgba(0, 0, 0, 0.54)\",\r\n  },\r\n  serverHead: {\r\n    color: \"rgba(0, 0, 0, 0.83)\",\r\n    textAlign: \"left\",\r\n    marginTop: 8,\r\n    marginBottom: 3,\r\n  },\r\n}));\r\n\r\nconst ForceCompareOnly = ({ ForceCompare, setForceCompare, setSubOpen }) => {\r\n  const classes = useStyles();\r\n  //Option for selecting True or False\r\n  const forceCompareOnly = [\r\n    { booleanValue: \"False\", val: 0, bool: false },\r\n    { booleanValue: \"True\", val: 1, bool: true },\r\n  ];\r\n  return (\r\n    <Box mb={2}>\r\n      <FormControl required className={classes.formControl}>\r\n        <Autocomplete\r\n          id=\"forceCompareOnly\"\r\n          options={forceCompareOnly}\r\n          required\r\n          value={ForceCompare}\r\n          getOptionSelected={(option, value) => option.val === value.val}\r\n          getOptionLabel={(option) =>\r\n            option.val === 0 ? \"False\" : option.val === 1 ? \"True\" : \"\"\r\n          }\r\n          onChange={(event, newValue) => {\r\n            setForceCompare((prev) => {\r\n              let update = { ...prev };\r\n              update.booleanValue = newValue ? newValue.booleanValue : \"\";\r\n              update.val = newValue ? newValue.val : -1;\r\n              update.bool = newValue ? newValue.bool : null;\r\n              return update;\r\n            });\r\n\r\n            setSubOpen(false);\r\n          }}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label=\"Force Compare Only\"\r\n              required\r\n              variant=\"outlined\"\r\n            />\r\n          )}\r\n        />\r\n      </FormControl>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ForceCompareOnly;\r\n","import React from \"react\";\r\nimport { Box, FormControl, TextField, makeStyles } from \"@material-ui/core\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n  card: {\r\n    height: \"100%\",\r\n    color: theme.palette.text.secondary,\r\n    minHeight: 688,\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 450,\r\n    maxWidth: 450,\r\n  },\r\n  sortFormControl: {\r\n    maxWidth: 450,\r\n    minWidth: 450,\r\n  },\r\n  sortGroup: {\r\n    position: \"absolute\",\r\n    right: 0,\r\n    top: -40,\r\n  },\r\n  server: {\r\n    wordWrap: \"word-break\",\r\n    textAlign: \"left\",\r\n    color: \"rgba(0, 0, 0, 0.54)\",\r\n  },\r\n  serverHead: {\r\n    color: \"rgba(0, 0, 0, 0.83)\",\r\n    textAlign: \"left\",\r\n    marginTop: 8,\r\n    marginBottom: 3,\r\n  },\r\n}));\r\n\r\nconst IsRunTask1 = ({ RunTask1, setRunTask1, setSubOpen }) => {\r\n  const classes = useStyles();\r\n  //Option for selecting True or False\r\n  const list1 = [\r\n    { booleanValue: \"False\", val: 0, bool: false },\r\n    { booleanValue: \"True\", val: 1, bool: true },\r\n  ];\r\n  return (\r\n    <Box mb={2}>\r\n      <FormControl required className={classes.formControl}>\r\n        <Autocomplete\r\n          id=\"runtask1\"\r\n          options={list1}\r\n          required\r\n          value={RunTask1}\r\n          getOptionSelected={(option, value) => option.val === value.val}\r\n          getOptionLabel={(option) =>\r\n            option.val === 0 ? \"False\" : option.val === 1 ? \"True\" : \"\"\r\n          }\r\n          onChange={(event, newValue) => {\r\n            setRunTask1((prev) => {\r\n              let update = { ...prev };\r\n              update.booleanValue = newValue ? newValue.booleanValue : \"\";\r\n              update.val = newValue ? newValue.val : -1;\r\n              update.bool = newValue ? newValue.bool : null;\r\n              return update;\r\n            });\r\n\r\n            setSubOpen(false);\r\n          }}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label=\"Run Job Version 1\"\r\n              required\r\n              variant=\"outlined\"\r\n            />\r\n          )}\r\n        />\r\n      </FormControl>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default IsRunTask1;\r\n","import React from \"react\";\r\nimport { Box, FormControl, TextField, makeStyles } from \"@material-ui/core\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n  card: {\r\n    height: \"100%\",\r\n    color: theme.palette.text.secondary,\r\n    minHeight: 688,\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 450,\r\n    maxWidth: 450,\r\n  },\r\n  sortFormControl: {\r\n    maxWidth: 450,\r\n    minWidth: 450,\r\n  },\r\n  sortGroup: {\r\n    position: \"absolute\",\r\n    right: 0,\r\n    top: -40,\r\n  },\r\n  server: {\r\n    wordWrap: \"word-break\",\r\n    textAlign: \"left\",\r\n    color: \"rgba(0, 0, 0, 0.54)\",\r\n  },\r\n  serverHead: {\r\n    color: \"rgba(0, 0, 0, 0.83)\",\r\n    textAlign: \"left\",\r\n    marginTop: 8,\r\n    marginBottom: 3,\r\n  },\r\n}));\r\n\r\nconst IsRunTask2 = ({ RunTask2, setRunTask2, setSubOpen }) => {\r\n  const classes = useStyles();\r\n  //Option for selecting True or False\r\n  const list2 = [\r\n    { booleanValue: \"False\", val: 0, bool: false },\r\n    { booleanValue: \"True\", val: 1, bool: true },\r\n  ];\r\n  return (\r\n    <Box mb={2}>\r\n      <FormControl required className={classes.formControl}>\r\n        <Autocomplete\r\n          id=\"runtask2\"\r\n          options={list2}\r\n          required\r\n          value={RunTask2}\r\n          getOptionSelected={(option, value) => option.val === value.val}\r\n          getOptionLabel={(option) =>\r\n            option.val === 0 ? \"False\" : option.val === 1 ? \"True\" : \"\"\r\n          }\r\n          onChange={(event, newValue) => {\r\n            setRunTask2((prev) => {\r\n              let update = { ...prev };\r\n              update.booleanValue = newValue ? newValue.booleanValue : \"\";\r\n              update.val = newValue ? newValue.val : -1;\r\n              update.bool = newValue ? newValue.bool : null;\r\n              return update;\r\n            });\r\n\r\n            setSubOpen(false);\r\n          }}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label=\"Run Job Version 2\"\r\n              required\r\n              variant=\"outlined\"\r\n            />\r\n          )}\r\n        />\r\n      </FormControl>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default IsRunTask2;\r\n","import React from \"react\";\r\nimport { Box, FormControl, TextField, makeStyles } from \"@material-ui/core\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n  card: {\r\n    height: \"100%\",\r\n    color: theme.palette.text.secondary,\r\n    minHeight: 688,\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 450,\r\n    maxWidth: 450,\r\n  },\r\n  sortFormControl: {\r\n    maxWidth: 450,\r\n    minWidth: 450,\r\n  },\r\n  sortGroup: {\r\n    position: \"absolute\",\r\n    right: 0,\r\n    top: -40,\r\n  },\r\n  server: {\r\n    wordWrap: \"word-break\",\r\n    textAlign: \"left\",\r\n    color: \"rgba(0, 0, 0, 0.54)\",\r\n  },\r\n  serverHead: {\r\n    color: \"rgba(0, 0, 0, 0.83)\",\r\n    textAlign: \"left\",\r\n    marginTop: 8,\r\n    marginBottom: 3,\r\n  },\r\n}));\r\n\r\nconst OrgUnit = ({ Org, setOrg, setSubOpen }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box mb={2}>\r\n      <FormControl required className={classes.formControl}>\r\n        <TextField\r\n          id=\"orgunit\"\r\n          type=\"text\"\r\n          label=\"Org Unit (Leave Blank to Run for Whole Organization)\"\r\n          variant=\"outlined\"\r\n          value={Org}\r\n          onChange={(e) => {\r\n            setOrg(e.target.value);\r\n            setSubOpen(false);\r\n          }}\r\n        />\r\n      </FormControl>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default OrgUnit;\r\n","import React from \"react\";\r\nimport { Box, FormControl, makeStyles } from \"@material-ui/core\";\r\nimport TextField from \"material-ui/TextField\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport DateMomentUtils from \"@date-io/moment\";\r\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n  card: {\r\n    height: \"100%\",\r\n    color: theme.palette.text.secondary,\r\n    minHeight: 688,\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 450,\r\n    maxWidth: 450,\r\n  },\r\n  sortFormControl: {\r\n    maxWidth: 450,\r\n    minWidth: 450,\r\n  },\r\n  sortGroup: {\r\n    position: \"absolute\",\r\n    right: 0,\r\n    top: -40,\r\n  },\r\n  server: {\r\n    wordWrap: \"word-break\",\r\n    textAlign: \"left\",\r\n    color: \"rgba(0, 0, 0, 0.54)\",\r\n  },\r\n  serverHead: {\r\n    color: \"rgba(0, 0, 0, 0.83)\",\r\n    textAlign: \"left\",\r\n    marginTop: 8,\r\n    marginBottom: 3,\r\n  },\r\n}));\r\n\r\nconst TimeStart = ({ Start, setStart, setSubOpen }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box mb={2}>\r\n      <FormControl required className={classes.formControl}>\r\n        <MuiPickersUtilsProvider utils={DateMomentUtils}>\r\n          <DatePicker\r\n            format=\"yyyy-MM-DD\"\r\n            value={Start}\r\n            onChange={(e) => {\r\n              setStart(e);\r\n              setSubOpen(false);\r\n            }}\r\n            selected={Start ? Start : null}\r\n            label=\"Start Date\"\r\n            required\r\n            renderInput={(params) => (\r\n              <TextField {...params} label=\"Job\" required variant=\"outlined\" />\r\n            )}\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n      </FormControl>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TimeStart;\r\n","import React from \"react\";\r\nimport { Box, FormControl, makeStyles } from \"@material-ui/core\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport DateMomentUtils from \"@date-io/moment\";\r\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n  card: {\r\n    height: \"100%\",\r\n    color: theme.palette.text.secondary,\r\n    minHeight: 688,\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 450,\r\n    maxWidth: 450,\r\n  },\r\n  sortFormControl: {\r\n    maxWidth: 450,\r\n    minWidth: 450,\r\n  },\r\n  sortGroup: {\r\n    position: \"absolute\",\r\n    right: 0,\r\n    top: -40,\r\n  },\r\n  server: {\r\n    wordWrap: \"word-break\",\r\n    textAlign: \"left\",\r\n    color: \"rgba(0, 0, 0, 0.54)\",\r\n  },\r\n  serverHead: {\r\n    color: \"rgba(0, 0, 0, 0.83)\",\r\n    textAlign: \"left\",\r\n    marginTop: 8,\r\n    marginBottom: 3,\r\n  },\r\n}));\r\n\r\nconst TimeEnd = ({ End, setEnd, setSubOpen, Start }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box mb={2}>\r\n      <FormControl required className={classes.formControl}>\r\n        <MuiPickersUtilsProvider utils={DateMomentUtils}>\r\n          <DatePicker\r\n            format=\"yyyy-MM-DD\"\r\n            value={End}\r\n            selected={End ? End : null}\r\n            onChange={(e) => {\r\n              setEnd(e);\r\n              setSubOpen(false);\r\n            }}\r\n            disabled={Start ? false : true}\r\n            minDate={Start}\r\n            minDateMessage=\"End Date must be after Start Date, to initiate comparison\"\r\n            label=\"End Date\"\r\n            required\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n      </FormControl>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TimeEnd;\r\n","import React from \"react\";\r\nimport { Box, FormControl, TextField, makeStyles } from \"@material-ui/core\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n  card: {\r\n    height: \"100%\",\r\n    color: theme.palette.text.secondary,\r\n    minHeight: 688,\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 450,\r\n    maxWidth: 450,\r\n  },\r\n  sortFormControl: {\r\n    maxWidth: 450,\r\n    minWidth: 450,\r\n  },\r\n  sortGroup: {\r\n    position: \"absolute\",\r\n    right: 0,\r\n    top: -40,\r\n  },\r\n  server: {\r\n    wordWrap: \"word-break\",\r\n    textAlign: \"left\",\r\n    color: \"rgba(0, 0, 0, 0.54)\",\r\n  },\r\n  serverHead: {\r\n    color: \"rgba(0, 0, 0, 0.83)\",\r\n    textAlign: \"left\",\r\n    marginTop: 8,\r\n    marginBottom: 3,\r\n  },\r\n}));\r\n\r\nconst Name = ({ TaskName, setTaskName, setSubOpen }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box mb={2}>\r\n      <FormControl required className={classes.formControl}>\r\n        <TextField\r\n          id=\"name\"\r\n          type=\"text\"\r\n          label=\"Task Name\"\r\n          required\r\n          variant=\"outlined\"\r\n          value={TaskName}\r\n          onChange={(e) => {\r\n            setTaskName(e.target.value.replace(/\\s/g, \"\"));\r\n            setSubOpen(false);\r\n          }}\r\n        />\r\n      </FormControl>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Name;\r\n","import React from \"react\";\r\nimport { Box, FormControl, makeStyles } from \"@material-ui/core\";\r\nimport TextField from \"material-ui/TextField\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport DateMomentUtils from \"@date-io/moment\";\r\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n  card: {\r\n    height: \"100%\",\r\n    color: theme.palette.text.secondary,\r\n    minHeight: 688,\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 450,\r\n    maxWidth: 450,\r\n  },\r\n  sortFormControl: {\r\n    maxWidth: 450,\r\n    minWidth: 450,\r\n  },\r\n  sortGroup: {\r\n    position: \"absolute\",\r\n    right: 0,\r\n    top: -40,\r\n  },\r\n  server: {\r\n    wordWrap: \"word-break\",\r\n    textAlign: \"left\",\r\n    color: \"rgba(0, 0, 0, 0.54)\",\r\n  },\r\n  serverHead: {\r\n    color: \"rgba(0, 0, 0, 0.83)\",\r\n    textAlign: \"left\",\r\n    marginTop: 8,\r\n    marginBottom: 3,\r\n  },\r\n}));\r\n\r\nconst DateRelativeToToday = ({ DateRelative, setDateRelative, setSubOpen }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box mb={2}>\r\n      <FormControl required className={classes.formControl}>\r\n        <MuiPickersUtilsProvider utils={DateMomentUtils}>\r\n          <DatePicker\r\n            format=\"yyyy-MM-DD\"\r\n            value={DateRelative}\r\n            onChange={(e) => {\r\n              setDateRelative(e);\r\n              setSubOpen(false);\r\n            }}\r\n            selected={DateRelative ? DateRelative : null}\r\n            inputStyle={{ textAlign: \"center\" }}\r\n            label=\"Date Relative To Today\"\r\n            required\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Date Relative To Today\"\r\n                required\r\n                variant=\"outlined\"\r\n              />\r\n            )}\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n      </FormControl>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default DateRelativeToToday;\r\n","import React from \"react\";\r\nimport { Box, FormControl, TextField, makeStyles } from \"@material-ui/core\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n  card: {\r\n    height: \"100%\",\r\n    color: theme.palette.text.secondary,\r\n    minHeight: 688,\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 450,\r\n    maxWidth: 450,\r\n  },\r\n  sortFormControl: {\r\n    maxWidth: 450,\r\n    minWidth: 450,\r\n  },\r\n  sortGroup: {\r\n    position: \"absolute\",\r\n    right: 0,\r\n    top: -40,\r\n  },\r\n  server: {\r\n    wordWrap: \"word-break\",\r\n    textAlign: \"left\",\r\n    color: \"rgba(0, 0, 0, 0.54)\",\r\n  },\r\n  serverHead: {\r\n    color: \"rgba(0, 0, 0, 0.83)\",\r\n    textAlign: \"left\",\r\n    marginTop: 8,\r\n    marginBottom: 3,\r\n  },\r\n}));\r\n\r\nconst Policy = ({ PolicyName, setPolicyName, setSubOpen }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box mb={2}>\r\n      <FormControl required className={classes.formControl}>\r\n        <TextField\r\n          id=\"policyName\"\r\n          type=\"text\"\r\n          label=\"Policy Name\"\r\n          variant=\"outlined\"\r\n          value={PolicyName}\r\n          onChange={(e) => {\r\n            setPolicyName(e.target.value);\r\n            setSubOpen(false);\r\n          }}\r\n        />\r\n      </FormControl>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Policy;\r\n","import React from \"react\";\r\nimport { Box, FormControl, TextField, makeStyles } from \"@material-ui/core\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n  card: {\r\n    height: \"100%\",\r\n    color: theme.palette.text.secondary,\r\n    minHeight: 688,\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 450,\r\n    maxWidth: 450,\r\n  },\r\n  sortFormControl: {\r\n    maxWidth: 450,\r\n    minWidth: 450,\r\n  },\r\n  sortGroup: {\r\n    position: \"absolute\",\r\n    right: 0,\r\n    top: -40,\r\n  },\r\n  server: {\r\n    wordWrap: \"word-break\",\r\n    textAlign: \"left\",\r\n    color: \"rgba(0, 0, 0, 0.54)\",\r\n  },\r\n  serverHead: {\r\n    color: \"rgba(0, 0, 0, 0.83)\",\r\n    textAlign: \"left\",\r\n    marginTop: 8,\r\n    marginBottom: 3,\r\n  },\r\n}));\r\n\r\nconst PGCalendarID = ({ PGCalendar, setPGCalendar, setSubOpen }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box mb={2}>\r\n      <FormControl required className={classes.formControl}>\r\n        <TextField\r\n          id=\"pgcalendarid\"\r\n          type=\"number\"\r\n          label=\"Pay Group Calendar ID\"\r\n          required\r\n          variant=\"outlined\"\r\n          value={PGCalendar}\r\n          onChange={(e) => {\r\n            setPGCalendar(e.target.value);\r\n            setSubOpen(false);\r\n          }}\r\n        />\r\n      </FormControl>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PGCalendarID;\r\n","import React from \"react\";\r\nimport { Box, FormControl, TextField, makeStyles } from \"@material-ui/core\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n  card: {\r\n    height: \"100%\",\r\n    color: theme.palette.text.secondary,\r\n    minHeight: 688,\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 450,\r\n    maxWidth: 450,\r\n  },\r\n  sortFormControl: {\r\n    maxWidth: 450,\r\n    minWidth: 450,\r\n  },\r\n  sortGroup: {\r\n    position: \"absolute\",\r\n    right: 0,\r\n    top: -40,\r\n  },\r\n  server: {\r\n    wordWrap: \"word-break\",\r\n    textAlign: \"left\",\r\n    color: \"rgba(0, 0, 0, 0.54)\",\r\n  },\r\n  serverHead: {\r\n    color: \"rgba(0, 0, 0, 0.83)\",\r\n    textAlign: \"left\",\r\n    marginTop: 8,\r\n    marginBottom: 3,\r\n  },\r\n}));\r\n\r\nconst MockTransmit = ({ TransmitMock, setTransmitMock, setSubOpen }) => {\r\n  const classes = useStyles();\r\n  //Option for selecting True or False\r\n  const TransmitMockList = [\r\n    { booleanValue: \"False\", val: 0, bool: false },\r\n    { booleanValue: \"True\", val: 1, bool: true },\r\n  ];\r\n  return (\r\n    <Box mb={2}>\r\n      <FormControl required className={classes.formControl}>\r\n        <Autocomplete\r\n          id=\"transmitmock\"\r\n          options={TransmitMockList}\r\n          required\r\n          value={TransmitMock}\r\n          getOptionSelected={(option, value) => option.val === value.val}\r\n          getOptionLabel={(option) =>\r\n            option.val === 0 ? \"False\" : option.val === 1 ? \"True\" : \"\"\r\n          }\r\n          onChange={(event, newValue) => {\r\n            setTransmitMock((prev) => {\r\n              let update = { ...prev };\r\n              update.booleanValue = newValue ? newValue.booleanValue : \"\";\r\n              update.val = newValue ? newValue.val : -1;\r\n              update.bool = newValue ? newValue.bool : null;\r\n              return update;\r\n            });\r\n\r\n            setSubOpen(false);\r\n          }}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label=\"Mock Transmit\"\r\n              required\r\n              variant=\"outlined\"\r\n            />\r\n          )}\r\n        />\r\n      </FormControl>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MockTransmit;\r\n","import React from \"react\";\r\nimport { Box, FormControl, TextField, makeStyles } from \"@material-ui/core\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n  card: {\r\n    height: \"100%\",\r\n    color: theme.palette.text.secondary,\r\n    minHeight: 688,\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 450,\r\n    maxWidth: 450,\r\n  },\r\n  sortFormControl: {\r\n    maxWidth: 450,\r\n    minWidth: 450,\r\n  },\r\n  sortGroup: {\r\n    position: \"absolute\",\r\n    right: 0,\r\n    top: -40,\r\n  },\r\n  server: {\r\n    wordWrap: \"word-break\",\r\n    textAlign: \"left\",\r\n    color: \"rgba(0, 0, 0, 0.54)\",\r\n  },\r\n  serverHead: {\r\n    color: \"rgba(0, 0, 0, 0.83)\",\r\n    textAlign: \"left\",\r\n    marginTop: 8,\r\n    marginBottom: 3,\r\n  },\r\n}));\r\n\r\nconst ExportFile = ({ ExportFileName, setExportFileName, setSubOpen }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box mb={2}>\r\n      <FormControl required className={classes.formControl}>\r\n        <TextField\r\n          id=\"exportfilename\"\r\n          type=\"text\"\r\n          label=\"Export File Name\"\r\n          variant=\"outlined\"\r\n          value={ExportFileName}\r\n          onChange={(e) => {\r\n            setExportFileName(e.target.value);\r\n            setSubOpen(false);\r\n          }}\r\n        />\r\n      </FormControl>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ExportFile;\r\n","import React from \"react\";\r\nimport { Box, FormControl, TextField, makeStyles } from \"@material-ui/core\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n  card: {\r\n    height: \"100%\",\r\n    color: theme.palette.text.secondary,\r\n    minHeight: 688,\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 450,\r\n    maxWidth: 450,\r\n  },\r\n  sortFormControl: {\r\n    maxWidth: 450,\r\n    minWidth: 450,\r\n  },\r\n  sortGroup: {\r\n    position: \"absolute\",\r\n    right: 0,\r\n    top: -40,\r\n  },\r\n  server: {\r\n    wordWrap: \"word-break\",\r\n    textAlign: \"left\",\r\n    color: \"rgba(0, 0, 0, 0.54)\",\r\n  },\r\n  serverHead: {\r\n    color: \"rgba(0, 0, 0, 0.83)\",\r\n    textAlign: \"left\",\r\n    marginTop: 8,\r\n    marginBottom: 3,\r\n  },\r\n}));\r\n\r\nconst ExportMode = ({ ModeExport, setModeExport, setSubOpen }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box mb={2}>\r\n      <FormControl required className={classes.formControl}>\r\n        <TextField\r\n          id=\"exportmode\"\r\n          type=\"text\"\r\n          label=\"Export Mode\"\r\n          required\r\n          variant=\"outlined\"\r\n          value={ModeExport}\r\n          onChange={(e) => {\r\n            setModeExport(e.target.value);\r\n            setSubOpen(false);\r\n          }}\r\n        />\r\n      </FormControl>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ExportMode;\r\n","import React from \"react\";\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  Tooltip,\r\n  Divider,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport ForceCompareOnly from \"./components/ForceCompareOnly\";\r\nimport IsRunTask1 from \"./components/IsRunTask1\";\r\nimport IsRunTask2 from \"./components/IsRunTask2\";\r\nimport OrgUnit from \"./components/OrgUnit\";\r\nimport TimeStart from \"./components/TimeStart\";\r\nimport TimeEnd from \"./components/TimeEnd\";\r\nimport Name from \"./components/Name\";\r\nimport DateRelativeToToday from \"./components/DateRelativeToToday\";\r\nimport Policy from \"./components/Policy\";\r\nimport PGCalendarID from \"./components/PGCalendarID\";\r\nimport MockTransmit from \"./components/MockTransmit\";\r\nimport ExportFile from \"./components/ExportFile\";\r\nimport ExportMode from \"./components/ExportMode\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n  card: {\r\n    height: \"100%\",\r\n    color: theme.palette.text.secondary,\r\n    minHeight: 600,\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 450,\r\n    maxWidth: 450,\r\n  },\r\n  sortFormControl: {\r\n    maxWidth: 450,\r\n    minWidth: 450,\r\n  },\r\n  sortGroup: {\r\n    position: \"absolute\",\r\n    right: 0,\r\n    top: -40,\r\n  },\r\n  server: {\r\n    wordWrap: \"word-break\",\r\n    textAlign: \"left\",\r\n    color: \"rgba(0, 0, 0, 0.54)\",\r\n  },\r\n  serverHead: {\r\n    color: \"rgba(0, 0, 0, 0.83)\",\r\n    textAlign: \"left\",\r\n    marginTop: 8,\r\n    marginBottom: 3,\r\n  },\r\n}));\r\n\r\nconst ConfriguationsCard = ({\r\n  ForceCompare,\r\n  setForceCompare,\r\n  RunTask1,\r\n  setRunTask1,\r\n  RunTask2,\r\n  setRunTask2,\r\n  Org,\r\n  TaskName,\r\n  setTaskName,\r\n  setOrg,\r\n  Start,\r\n  setStart,\r\n  End,\r\n  setEnd,\r\n  setSubOpen,\r\n  DateRelative,\r\n  setDateRelative,\r\n  Job,\r\n  setJob,\r\n  PolicyName,\r\n  setPolicyName,\r\n  PGCalendar,\r\n  setPGCalendar,\r\n  TransmitMock,\r\n  setTransmitMock,\r\n  ModeExport,\r\n  setModeExport,\r\n  ExportFileName,\r\n  setExportFileName,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <Box mt={2} mb={2}>\r\n        <Tooltip title=\"Select Confriguations for the Comparison\">\r\n          <Typography variant=\"h5\" align=\"center\" color=\"primary\">\r\n            Comparison Confriguations\r\n          </Typography>\r\n        </Tooltip>\r\n      </Box>\r\n      <Divider />\r\n      <CardContent>\r\n        <Box mt={2} mb={2}>\r\n          <Grid container spacing={3}>\r\n            <Grid item lg={12} md={12} xl={12} xs={12}>\r\n              <Name\r\n                TaskName={TaskName}\r\n                setTaskName={setTaskName}\r\n                setSubOpen={setSubOpen}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item lg={12} md={12} xl={12} xs={12}>\r\n              <ForceCompareOnly\r\n                ForceCompare={ForceCompare}\r\n                setForceCompare={setForceCompare}\r\n                setSubOpen={setSubOpen}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item lg={6} md={6} xl={6} xs={6}>\r\n              <IsRunTask1\r\n                RunTask1={RunTask1}\r\n                setRunTask1={setRunTask1}\r\n                setSubOpen={setSubOpen}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item lg={6} md={6} xl={6} xs={6}>\r\n              <IsRunTask2\r\n                RunTask2={RunTask2}\r\n                setRunTask2={setRunTask2}\r\n                setSubOpen={setSubOpen}\r\n              />\r\n            </Grid>\r\n\r\n            {Job.id === 1 || Job.id === 2 || Job.id === 4 || Job.id === 6 ? (\r\n              <>\r\n                <Grid item lg={6} md={6} xl={6} xs={6}>\r\n                  <TimeStart\r\n                    Start={Start}\r\n                    setStart={setStart}\r\n                    setSubOpen={setSubOpen}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item lg={6} md={6} xl={6} xs={6}>\r\n                  <TimeEnd\r\n                    End={End}\r\n                    setEnd={setEnd}\r\n                    setSubOpen={setSubOpen}\r\n                    Start={Start}\r\n                  />\r\n                </Grid>\r\n              </>\r\n            ) : (\r\n              <></>\r\n            )}\r\n\r\n            {Job.id === 3 ? (\r\n              <>\r\n                <Grid item lg={12} md={12} xl={12} xs={12}>\r\n                  <DateRelativeToToday\r\n                    DateRelative={DateRelative}\r\n                    setDateRelative={setDateRelative}\r\n                    setSubOpen={setSubOpen}\r\n                  />\r\n                </Grid>\r\n              </>\r\n            ) : (\r\n              <></>\r\n            )}\r\n\r\n            {Job.id === 6 ? (\r\n              <>\r\n                <Grid item lg={12} md={12} xl={12} xs={12}>\r\n                  <Policy\r\n                    PolicyName={PolicyName}\r\n                    setPolicyName={setPolicyName}\r\n                    setSubOpen={setSubOpen}\r\n                  />\r\n                </Grid>\r\n              </>\r\n            ) : (\r\n              <></>\r\n            )}\r\n\r\n            {Job.id === 5 ? (\r\n              <>\r\n                <Grid item lg={12} md={12} xl={12} xs={12}>\r\n                  <PGCalendarID\r\n                    PGCalendar={PGCalendar}\r\n                    setPGCalendar={setPGCalendar}\r\n                    setSubOpen={setSubOpen}\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={12} md={12} xl={12} xs={12}>\r\n                  <MockTransmit\r\n                    TransmitMock={TransmitMock}\r\n                    setTransmitMock={setTransmitMock}\r\n                    setSubOpen={setSubOpen}\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={6} md={6} xl={6} xs={12}>\r\n                  <ExportFile\r\n                    ExportFileName={ExportFileName}\r\n                    setExportFileName={setExportFileName}\r\n                    setSubOpen={setSubOpen}\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={6} md={6} xl={6} xs={12}>\r\n                  <ExportMode\r\n                    ModeExport={ModeExport}\r\n                    setModeExport={setModeExport}\r\n                    setSubOpen={setSubOpen}\r\n                  />\r\n                </Grid>\r\n              </>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {Job.id !== 5 ? (\r\n              <Grid item lg={12} md={12} xl={12} xs={12}>\r\n                <OrgUnit Org={Org} setOrg={setOrg} setSubOpen={setSubOpen} />\r\n              </Grid>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Grid>\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ConfriguationsCard;\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Snackbar,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormLabel,\r\n  Box,\r\n  makeStyles,\r\n  Grid,\r\n  Radio,\r\n  RadioGroup,\r\n} from \"@material-ui/core\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { inputAPI } from \"src/components/APIBase/BaseURL\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 400,\r\n    maxWidth: 400,\r\n  },\r\n  buttonProgress: {\r\n    color: \"#4caf50\",\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    marginTop: -12,\r\n    marginLeft: -12,\r\n  },\r\n}));\r\n\r\nconst ButtonCompare = ({\r\n  ClientInfo,\r\n  Job,\r\n  ForceCompare,\r\n  RunTask1,\r\n  RunTask2,\r\n  Org,\r\n  TaskName,\r\n  Start,\r\n  End,\r\n  userInfo,\r\n  reset,\r\n  setSubOpen,\r\n  subOpen,\r\n  DateRelative,\r\n  PolicyName,\r\n  PGCalendar,\r\n  TransmitMock,\r\n  ModeExport,\r\n  ExportFileName,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const [buttonType, setbuttonType] = useState(\"START\");\r\n\r\n  const [download, setdownload] = useState(\"false\");\r\n  const [open, setOpen] = useState(false);\r\n  const [success, setSuccess] = useState(true);\r\n  const [msg, setMsg] = useState(\r\n    \"Click RESET to Reset All Confriguations or Change any confriguation manually to run Comparison again with new confriguations or to Download Input File with new confriguations\"\r\n  );\r\n  const [Reset, setReset] = useState(false);\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  const ComparisonRan = () => {\r\n    try {\r\n      setOpen(true);\r\n      setSuccess(true);\r\n      setSubOpen(true);\r\n      setReset(true);\r\n      setdownload(\"false\");\r\n      setbuttonType(\"START\");\r\n    } catch (error) {\r\n      console.log(error);\r\n      setMsg(\r\n        \"Oops! We encountered an error in Comparison. Sorry for the Inconvenience!\"\r\n      );\r\n      setSuccess(false);\r\n    }\r\n  };\r\n\r\n  // This piece of Code is to make Input PSR file using Input Parameters\r\n\r\n  const createStringDate = (date) => {\r\n    let d = date.toISOString();\r\n\r\n    d = d.split(\"T\")[0] + \"T00:00:00\";\r\n\r\n    return d;\r\n  };\r\n\r\n  const createFileType = () => {\r\n    let job = Job.file;\r\n\r\n    job = \"Input\" + job + \".json\";\r\n\r\n    return job;\r\n  };\r\n\r\n  // This code is to make JSON File and download it in Client's Computer , and it uses the above function to format it properly\r\n\r\n  const createNameSpace1Info = () => {\r\n    let namespaceInfo =\r\n      ClientInfo.namespace.controlDbServer +\r\n      \";\" +\r\n      ClientInfo.namespace.controlDb;\r\n    return namespaceInfo;\r\n  };\r\n  const createNameSpace2Info = () => {\r\n    let namespaceInfo =\r\n      ClientInfo.namespace2.controlDbServer +\r\n      \";\" +\r\n      ClientInfo.namespace2.controlDb;\r\n    return namespaceInfo;\r\n  };\r\n\r\n  const createInputPSRJSRBRR = async () => {\r\n    let namespace1Info = createNameSpace1Info();\r\n    let namespace2Info = createNameSpace2Info();\r\n\r\n    const inputObject = {\r\n      ControlDBNamespace: {\r\n        [namespace1Info]: [ClientInfo.namespace.dbName],\r\n        [namespace2Info]: [ClientInfo.namespace2.dbName],\r\n      },\r\n      Tasks: [\r\n        {\r\n          Name: TaskName,\r\n          ForceCompareOnly: ForceCompare.bool,\r\n          Task1: {\r\n            IsRunTask: RunTask1.bool,\r\n            Namespace: ClientInfo.namespace.dbName,\r\n            FromDate: createStringDate(Start),\r\n            ToDate: createStringDate(End),\r\n            OrgUnit: Org,\r\n          },\r\n          Task2: {\r\n            IsRunTask: RunTask2.bool,\r\n            Namespace: ClientInfo.namespace2.dbName,\r\n            FromDate: createStringDate(Start),\r\n            ToDate: createStringDate(End),\r\n            OrgUnit: Org,\r\n          },\r\n        },\r\n      ],\r\n    };\r\n\r\n    // Below Code is to save INPUT FILE generated in Downloads, just for client side.\r\n\r\n    const inputData = JSON.stringify(inputObject, null, 2);\r\n    const blob = new Blob([inputData], { type: \"text/plain\" });\r\n    const url = URL.createObjectURL(blob);\r\n    const link = document.createElement(\"a\");\r\n    link.download = createFileType();\r\n    link.href = url;\r\n    link.click();\r\n  };\r\n\r\n  const createInputSCR = async () => {\r\n    let namespace1Info = createNameSpace1Info();\r\n    let namespace2Info = createNameSpace2Info();\r\n\r\n    const inputObject = {\r\n      ControlDBNamespace: {\r\n        [namespace1Info]: [ClientInfo.namespace.dbName],\r\n        [namespace2Info]: [ClientInfo.namespace2.dbName],\r\n      },\r\n      Tasks: [\r\n        {\r\n          Name: TaskName,\r\n          ForceCompareOnly: ForceCompare.bool,\r\n          Task1: {\r\n            IsRunTask: RunTask1.bool,\r\n            Namespace: ClientInfo.namespace.dbName,\r\n            DateRelativeToToday: createStringDate(DateRelative),\r\n            OrgUnit: Org,\r\n          },\r\n          Task2: {\r\n            IsRunTask: RunTask2.bool,\r\n            Namespace: ClientInfo.namespace2.dbName,\r\n            DateRelativeToToday: createStringDate(DateRelative),\r\n            OrgUnit: Org,\r\n          },\r\n        },\r\n      ],\r\n    };\r\n\r\n    // Below Code is to save INPUT FILE generated in Downloads, just for client side.\r\n\r\n    const inputData = JSON.stringify(inputObject, null, 2);\r\n    const blob = new Blob([inputData], { type: \"text/plain\" });\r\n    const url = URL.createObjectURL(blob);\r\n    const link = document.createElement(\"a\");\r\n    link.download = createFileType();\r\n    link.href = url;\r\n    link.click();\r\n  };\r\n\r\n  const createInputAE = async () => {\r\n    let namespace1Info = createNameSpace1Info();\r\n    let namespace2Info = createNameSpace2Info();\r\n\r\n    const inputObject = {\r\n      ControlDBNamespace: {\r\n        [namespace1Info]: [ClientInfo.namespace.dbName],\r\n        [namespace2Info]: [ClientInfo.namespace2.dbName],\r\n      },\r\n      Tasks: [\r\n        {\r\n          Name: TaskName,\r\n          ForceCompareOnly: ForceCompare.bool,\r\n          Task1: {\r\n            IsRunTask: RunTask1.bool,\r\n            Namespace: ClientInfo.namespace.dbName,\r\n            FromDate: createStringDate(Start),\r\n            ToDate: createStringDate(End),\r\n            OrgUnit: Org,\r\n            Policy: PolicyName,\r\n          },\r\n          Task2: {\r\n            IsRunTask: RunTask2.bool,\r\n            Namespace: ClientInfo.namespace2.dbName,\r\n            FromDate: createStringDate(Start),\r\n            ToDate: createStringDate(End),\r\n            OrgUnit: Org,\r\n            Policy: PolicyName,\r\n          },\r\n        },\r\n      ],\r\n    };\r\n\r\n    // Below Code is to save INPUT FILE generated in Downloads, just for client side.\r\n\r\n    const inputData = JSON.stringify(inputObject, null, 2);\r\n    const blob = new Blob([inputData], { type: \"text/plain\" });\r\n    const url = URL.createObjectURL(blob);\r\n    const link = document.createElement(\"a\");\r\n    link.download = createFileType();\r\n    link.href = url;\r\n    link.click();\r\n  };\r\n\r\n  const createInputEFile = async () => {\r\n    let namespace1Info = createNameSpace1Info();\r\n    let namespace2Info = createNameSpace2Info();\r\n\r\n    const inputObject = {\r\n      ControlDBNamespace: {\r\n        [namespace1Info]: [ClientInfo.namespace.dbName],\r\n        [namespace2Info]: [ClientInfo.namespace2.dbName],\r\n      },\r\n      Tasks: [\r\n        {\r\n          Name: TaskName,\r\n          ForceCompareOnly: ForceCompare.bool,\r\n          Task1: {\r\n            IsRunTask: RunTask1.bool,\r\n            Namespace: ClientInfo.namespace.dbName,\r\n            PayGroupCalendarId: parseInt(PGCalendar),\r\n            ExportMode: ModeExport,\r\n            MockTransmit: TransmitMock.bool,\r\n            ExportFileName: ExportFileName,\r\n          },\r\n          Task2: {\r\n            IsRunTask: RunTask2.bool,\r\n            Namespace: ClientInfo.namespace2.dbName,\r\n            PayGroupCalendarId: parseInt(PGCalendar),\r\n            ExportMode: ModeExport,\r\n            MockTransmit: TransmitMock.bool,\r\n            ExportFileName: ExportFileName,\r\n          },\r\n        },\r\n      ],\r\n    };\r\n\r\n    // Below Code is to save INPUT FILE generated in Downloads, just for client side.\r\n\r\n    const inputData = JSON.stringify(inputObject, null, 2);\r\n    const blob = new Blob([inputData], { type: \"text/plain\" });\r\n    const url = URL.createObjectURL(blob);\r\n    const link = document.createElement(\"a\");\r\n    link.download = createFileType();\r\n    link.href = url;\r\n    link.click();\r\n  };\r\n\r\n  const createInputE = async () => {\r\n    let namespace1Info = createNameSpace1Info();\r\n    let namespace2Info = createNameSpace2Info();\r\n\r\n    const inputObject = {\r\n      ControlDBNamespace: {\r\n        [namespace1Info]: [ClientInfo.namespace.dbName],\r\n        [namespace2Info]: [ClientInfo.namespace2.dbName],\r\n      },\r\n      Tasks: [\r\n        {\r\n          Name: TaskName,\r\n          ForceCompareOnly: ForceCompare.bool,\r\n          Task1: {\r\n            IsRunTask: RunTask1.bool,\r\n            Namespace: ClientInfo.namespace.dbName,\r\n            PayGroupCalendarId: parseInt(PGCalendar),\r\n            ExportMode: ModeExport,\r\n            MockTransmit: TransmitMock.bool,\r\n          },\r\n          Task2: {\r\n            IsRunTask: RunTask2.bool,\r\n            Namespace: ClientInfo.namespace2.dbName,\r\n            PayGroupCalendarId: parseInt(PGCalendar),\r\n            ExportMode: ModeExport,\r\n            MockTransmit: TransmitMock.bool,\r\n          },\r\n        },\r\n      ],\r\n    };\r\n\r\n    // Below Code is to save INPUT FILE generated in Downloads, just for client side.\r\n\r\n    const inputData = JSON.stringify(inputObject, null, 2);\r\n    const blob = new Blob([inputData], { type: \"text/plain\" });\r\n    const url = URL.createObjectURL(blob);\r\n    const link = document.createElement(\"a\");\r\n    link.download = createFileType();\r\n    link.href = url;\r\n    link.click();\r\n  };\r\n\r\n  const saveInput = async () => {\r\n    let InputFile = createFileType();\r\n\r\n    // POST Request to Send Input Parameter to Server Side and Database and then using these Input Parameters to run Job\r\n    // and Generate Comparison Ouput and then save it to Output Table Client Specific.\r\n\r\n    let url = inputAPI;\r\n    let date = new Date().toLocaleString();\r\n\r\n    // Convert Month to Type MM\r\n\r\n    let month_temp = date.split(\"/\")[0];\r\n    let month;\r\n\r\n    if (month_temp.length === 1) {\r\n      month = \"0\" + month_temp;\r\n    } else {\r\n      month = month_temp;\r\n    }\r\n\r\n    // Convert Date to Type dd\r\n\r\n    let d_temp = date.split(\"/\")[1];\r\n    let d;\r\n\r\n    if (d_temp.length === 1) {\r\n      d = \"0\" + d_temp;\r\n    } else {\r\n      d = d_temp;\r\n    }\r\n\r\n    let year_time = date.split(\"/\")[2];\r\n\r\n    // Make new date string in MM/dd/yyyy format with Time.\r\n\r\n    let formatted_date = month + \"/\" + d + \"/\" + year_time;\r\n\r\n    await axios({\r\n      method: \"POST\",\r\n      url: url,\r\n      data: {\r\n        User_ID: userInfo.samAccountName,\r\n        User_Name: userInfo.displayName,\r\n        User_Email: userInfo.userPrincipalName,\r\n        Client: ClientInfo.clientName,\r\n        DBName_1: ClientInfo.namespace.dbName,\r\n        DBName_2: ClientInfo.namespace2.dbName,\r\n        ControlDB_1: ClientInfo.namespace.controlDb,\r\n        ControlDB_2: ClientInfo.namespace2.controlDb,\r\n        ControlDBServer_1: ClientInfo.namespace.controlDbServer,\r\n        ControlDBServer_2: ClientInfo.namespace2.controlDbServer,\r\n        ControlDBServer_Server1: createNameSpace1Info(),\r\n        ControlDBServer_Server2: createNameSpace2Info(),\r\n        Task_Name: TaskName,\r\n        ForceCompareOnly: ForceCompare.bool,\r\n        RunTask_1: RunTask1.bool,\r\n        RunTask_2: RunTask2.bool,\r\n        Start_Time: Start === null ? \"\" : createStringDate(Start),\r\n        End_Time: End === null ? \"\" : createStringDate(End),\r\n        Date_Relative_To_Today:\r\n          DateRelative === null ? \"\" : createStringDate(DateRelative),\r\n        Org: Org,\r\n        Policy: PolicyName === \"\" ? \"\" : PolicyName,\r\n        Pay_Group_Calendar_Id: PGCalendar === \"\" ? 0 : parseInt(PGCalendar),\r\n        Export_Mode: ModeExport === \"\" ? \"\" : ModeExport,\r\n        Mock_Transmit: TransmitMock.bool === null ? false : TransmitMock.bool,\r\n        Export_File_Name: ExportFileName,\r\n        Job: Job.file,\r\n        Date: formatted_date,\r\n        LogId1: \"\",\r\n        Status1: \"\",\r\n        LogId2: \"\",\r\n        Status2: \"\",\r\n        Results: \"Comparison Not Started\",\r\n        Compared: 0,\r\n        Analyzed: 0,\r\n        Version1_Path: \"\",\r\n        Version2_Path: \"\",\r\n        Analyze_Path: \"\",\r\n      },\r\n    })\r\n      .then(() => {\r\n        console.log(\r\n          InputFile +\r\n            \"-Input POST Request is Succesfull and Input is added to Input Table\"\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error in \" + InputFile + \" POST Request\", err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <FormControl className={classes.formControl}>\r\n        <Box align=\"center\" mt={1} mb={1}>\r\n          <Grid container spacing={3}>\r\n            <Grid item lg={12} md={12} xl={12} xs={12}>\r\n              <FormLabel component=\"legend\">\r\n                Only Download Input JSON File?\r\n              </FormLabel>\r\n              <RadioGroup\r\n                aria-label=\"download\"\r\n                name=\"controlled-radio-buttons-group\"\r\n                value={download}\r\n                onChange={(e) => {\r\n                  setdownload(e.target.value);\r\n\r\n                  if (e.target.value === \"true\") {\r\n                    setbuttonType(\"Download Input\");\r\n                  } else {\r\n                    setbuttonType(\"START\");\r\n                  }\r\n\r\n                  setSubOpen(false);\r\n                }}\r\n              >\r\n                <FormControlLabel\r\n                  value=\"true\"\r\n                  control={<Radio />}\r\n                  label=\"Yes\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"false\"\r\n                  control={<Radio />}\r\n                  label=\"No\"\r\n                />\r\n              </RadioGroup>\r\n            </Grid>\r\n\r\n            <Grid item lg={12} md={12} xl={12} xs={12}>\r\n              {Reset ? (\r\n                <Button\r\n                  id=\"resetButton\"\r\n                  variant=\"contained\"\r\n                  onClick={() => {\r\n                    reset();\r\n                    setOpen(false);\r\n                    setSuccess(true);\r\n                    setSubOpen(false);\r\n                    setReset(false);\r\n                    setdownload(\"false\");\r\n                  }}\r\n                >\r\n                  RESET\r\n                </Button>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n\r\n            <Grid item lg={12} md={12} xl={12} xs={12}>\r\n              {!subOpen ? (\r\n                <Button\r\n                  disabled={\r\n                    ClientInfo.namespace.dbName ===\r\n                      ClientInfo.namespace2.dbName ||\r\n                    Start > End ||\r\n                    (!RunTask1.bool && download === \"false\") ||\r\n                    (!RunTask2.bool && download === \"false\")\r\n                  }\r\n                  id=\"submitButton\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    if (download === \"true\") {\r\n                      if (\r\n                        Job.file === \"PSR\" ||\r\n                        Job.file === \"JSR\" ||\r\n                        Job.file === \"JobStepRecalc\"\r\n                      ) {\r\n                        createInputPSRJSRBRR(); // To save JSON file in Client Computer\r\n                      } else if (Job.file === \"SCR\") {\r\n                        createInputSCR(); // To save JSON file in Client Computer\r\n                      } else if (Job.file === \"AE_Sample\") {\r\n                        createInputAE(); // To save JSON file in Client Computer\r\n                      } else if (Job.file === \"Export\" && ExportFileName !== \"\") {\r\n                        createInputEFile(); // To save JSON file in Client Computer\r\n                      }\r\n                      else if (Job.file === \"Export\" && ExportFileName === \"\") {\r\n                        createInputE(); // To save JSON file in Client Computer\r\n                      }\r\n                    } else {\r\n                      saveInput(); // To save Input Parameter in Database\r\n                    }\r\n\r\n                    ComparisonRan();\r\n                  }}\r\n                >\r\n                  {buttonType}\r\n                </Button>\r\n              ) : (\r\n                <Button\r\n                  disabled={true}\r\n                  id=\"submitButton\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                >\r\n                  {buttonType}\r\n                </Button>\r\n              )}\r\n            </Grid>\r\n\r\n            <Grid item lg={12} md={12} xl={12} xs={12}>\r\n              {subOpen ? (\r\n                <p\r\n                  id=\"submitMsg\"\r\n                  style={{\r\n                    marginBottom: \"0px\",\r\n                    marginTop: \"5px\",\r\n                    fontSize: \"14px\",\r\n                    textAlign: \"center\",\r\n                    color: \"#000000\",\r\n                  }}\r\n                >\r\n                  {msg}\r\n                </p>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Snackbar autoHideDuration={5000} open={open} onClose={handleClose}>\r\n            <Alert\r\n              id=\"submitResult\"\r\n              onClose={handleClose}\r\n              severity={success ? \"success\" : \"error\"}\r\n            >\r\n              {success\r\n                ? \"Congratulations \" +\r\n                  userInfo.givenName +\r\n                  \"! Your request between Versions - \" +\r\n                  ClientInfo.namespace.dbName +\r\n                  \" and \" +\r\n                  ClientInfo.namespace2.dbName +\r\n                  \" of Client - \" +\r\n                  ClientInfo.clientName +\r\n                  \" targeting \" +\r\n                  Job.jobName +\r\n                  \" Job, has started successfully \"\r\n                : \"Oops! We faced an issue processing your request. Sorry for the inconvenience\"}\r\n            </Alert>\r\n          </Snackbar>\r\n        </Box>\r\n      </FormControl>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ButtonCompare;\r\n","import React from \"react\";\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  Tooltip,\r\n  Divider,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport ButtonCompare from \"./components/RunComparison\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n  card: {\r\n    height: \"100%\",\r\n    color: theme.palette.text.secondary,\r\n    minHeight: 200,\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 450,\r\n    maxWidth: 450,\r\n  },\r\n  sortFormControl: {\r\n    maxWidth: 450,\r\n    minWidth: 450,\r\n  },\r\n  sortGroup: {\r\n    position: \"absolute\",\r\n    right: 0,\r\n    top: -40,\r\n  },\r\n  server: {\r\n    wordWrap: \"word-break\",\r\n    textAlign: \"left\",\r\n    color: \"rgba(0, 0, 0, 0.54)\",\r\n  },\r\n  serverHead: {\r\n    color: \"rgba(0, 0, 0, 0.83)\",\r\n    textAlign: \"left\",\r\n    marginTop: 8,\r\n    marginBottom: 3,\r\n  },\r\n}));\r\n\r\nconst RunComparisonCard = ({\r\n  ClientInfo,\r\n  Job,\r\n  ForceCompare,\r\n  RunTask1,\r\n  RunTask2,\r\n  Org,\r\n  TaskName,\r\n  Start,\r\n  End,\r\n  userInfo,\r\n  reset,\r\n  setSubOpen,\r\n  subOpen,\r\n  DateRelative,\r\n  PolicyName,\r\n  PGCalendar,\r\n  TransmitMock,\r\n  ModeExport,\r\n  ExportFileName,\r\n}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Card className={classes.card}>\r\n      <Box mt={2} mb={2}>\r\n        <Tooltip title=\"Click START to Run Comparison\">\r\n          <Typography variant=\"h5\" align=\"center\" color=\"primary\">\r\n            Run Comparison\r\n          </Typography>\r\n        </Tooltip>\r\n      </Box>\r\n      <Divider />\r\n      <CardContent>\r\n        <Box mt={2} mb={2}>\r\n          {((Job.id === 1 || Job.id === 2 || Job.id === 4) &&\r\n            ClientInfo.namespace &&\r\n            ClientInfo.namespace2 &&\r\n            ForceCompare.booleanValue !== \"\" &&\r\n            RunTask1.booleanValue !== \"\" &&\r\n            RunTask2.booleanValue !== \"\" &&\r\n            Job.id !== 0 &&\r\n            Start &&\r\n            End &&\r\n            TaskName !== \"\") ||\r\n          (ClientInfo.id > 1 && ClientInfo.clientId > 0) ? (\r\n            <ButtonCompare\r\n              ClientInfo={ClientInfo}\r\n              Job={Job}\r\n              ForceCompare={ForceCompare}\r\n              RunTask1={RunTask1}\r\n              RunTask2={RunTask2}\r\n              Org={Org}\r\n              TaskName={TaskName}\r\n              Start={Start}\r\n              End={End}\r\n              userInfo={userInfo}\r\n              reset={reset}\r\n              setSubOpen={setSubOpen}\r\n              subOpen={subOpen}\r\n              DateRelative={DateRelative}\r\n              PolicyName={PolicyName}\r\n              PGCalendar={PGCalendar}\r\n              TransmitMock={TransmitMock}\r\n              ModeExport={ModeExport}\r\n              ExportFileName={ExportFileName}\r\n            />\r\n          ) : (Job.id === 3 &&\r\n              ClientInfo.namespace &&\r\n              ClientInfo.namespace2 &&\r\n              ForceCompare.booleanValue !== \"\" &&\r\n              RunTask1.booleanValue !== \"\" &&\r\n              RunTask2.booleanValue !== \"\" &&\r\n              Job.id !== 0 &&\r\n              DateRelative &&\r\n              TaskName !== \"\") ||\r\n            (ClientInfo.id > 1 && ClientInfo.clientId > 0) ? (\r\n            <ButtonCompare\r\n              ClientInfo={ClientInfo}\r\n              Job={Job}\r\n              ForceCompare={ForceCompare}\r\n              RunTask1={RunTask1}\r\n              RunTask2={RunTask2}\r\n              Org={Org}\r\n              TaskName={TaskName}\r\n              Start={Start}\r\n              End={End}\r\n              userInfo={userInfo}\r\n              reset={reset}\r\n              setSubOpen={setSubOpen}\r\n              subOpen={subOpen}\r\n              DateRelative={DateRelative}\r\n              PolicyName={PolicyName}\r\n              PGCalendar={PGCalendar}\r\n              TransmitMock={TransmitMock}\r\n              ModeExport={ModeExport}\r\n              ExportFileName={ExportFileName}\r\n            />\r\n          ) : (Job.id === 6 &&\r\n              ClientInfo.namespace &&\r\n              ClientInfo.namespace2 &&\r\n              ForceCompare.booleanValue !== \"\" &&\r\n              RunTask1.booleanValue !== \"\" &&\r\n              RunTask2.booleanValue !== \"\" &&\r\n              Job.id !== 0 &&\r\n              Start &&\r\n              End &&\r\n              TaskName !== \"\") ||\r\n            (ClientInfo.id > 1 && ClientInfo.clientId > 0) ? (\r\n            <ButtonCompare\r\n              ClientInfo={ClientInfo}\r\n              Job={Job}\r\n              ForceCompare={ForceCompare}\r\n              RunTask1={RunTask1}\r\n              RunTask2={RunTask2}\r\n              Org={Org}\r\n              TaskName={TaskName}\r\n              Start={Start}\r\n              End={End}\r\n              userInfo={userInfo}\r\n              reset={reset}\r\n              setSubOpen={setSubOpen}\r\n              subOpen={subOpen}\r\n              DateRelative={DateRelative}\r\n              PolicyName={PolicyName}\r\n              PGCalendar={PGCalendar}\r\n              TransmitMock={TransmitMock}\r\n              ModeExport={ModeExport}\r\n              ExportFileName={ExportFileName}\r\n            />\r\n          ) : (Job.id === 5 &&\r\n              ClientInfo.namespace &&\r\n              ClientInfo.namespace2 &&\r\n              ForceCompare.booleanValue === \"False\" &&\r\n              RunTask1.booleanValue !== \"\" &&\r\n              RunTask2.booleanValue !== \"\" &&\r\n              Job.id !== 0 &&\r\n              ModeExport !== \"\" &&\r\n              PGCalendar !== \"\" &&\r\n              TransmitMock.booleanValue !== \"\" &&\r\n              TaskName !== \"\") ||\r\n            (ClientInfo.id > 1 && ClientInfo.clientId > 0) ? (\r\n            <ButtonCompare\r\n              ClientInfo={ClientInfo}\r\n              Job={Job}\r\n              ForceCompare={ForceCompare}\r\n              RunTask1={RunTask1}\r\n              RunTask2={RunTask2}\r\n              Org={Org}\r\n              TaskName={TaskName}\r\n              Start={Start}\r\n              End={End}\r\n              userInfo={userInfo}\r\n              reset={reset}\r\n              setSubOpen={setSubOpen}\r\n              subOpen={subOpen}\r\n              DateRelative={DateRelative}\r\n              PolicyName={PolicyName}\r\n              PGCalendar={PGCalendar}\r\n              TransmitMock={TransmitMock}\r\n              ModeExport={ModeExport}\r\n              ExportFileName={ExportFileName}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default RunComparisonCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Button,\r\n  Container,\r\n  makeStyles,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\nimport Page from \"src/components/Page\";\r\nimport { ClientCard } from \"./ClientCard/index\";\r\nimport VersionsCard from \"./VersionsCard/VersionsCard\";\r\nimport TargetJobCard from \"./JobCard/TargetJobCard\";\r\nimport ConfriguationsCard from \"./ConfriguationsCard/ConfriguationsCard\";\r\nimport RunComparisonCard from \"./RunComparisonCard/RunComparisonCard\";\r\nimport {\r\n  clientListAPI,\r\n  categoryAPI,\r\n  adminClientAPI,\r\n} from \"src/components/APIBase/BaseURL\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.white,\r\n    marginBottom: 35,\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n  subheader: {\r\n    margin: \"5px\",\r\n    fontSize: \"16px\",\r\n  },\r\n  icon: {\r\n    position: \"relative\",\r\n    top: 4,\r\n  },\r\n}));\r\n\r\nconst ColorButton = withStyles((theme) => ({\r\n  root: {\r\n    color: theme.palette.getContrastText(\"#f44336\"),\r\n    backgroundColor: \"#f44336\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#c51162\",\r\n    },\r\n  },\r\n}))(Button);\r\n\r\nconst ComparisonForm = ({ userInfo }) => {\r\n  const classes = useStyles();\r\n  const [categoryList, setCategoryList] = useState([]);\r\n  const [admClientList, setAdmClientList] = useState([]);\r\n\r\n  const [list, setList] = useState([]);\r\n  const [Job, setJob] = useState({\r\n    jobName: \"\",\r\n    id: 0,\r\n  });\r\n\r\n  const [ForceCompare, setForceCompare] = useState({\r\n    booleanValue: \"\",\r\n    val: -1,\r\n    bool: null,\r\n  });\r\n\r\n  const [RunTask1, setRunTask1] = useState({\r\n    booleanValue: \"\",\r\n    val: -1,\r\n    bool: null,\r\n  });\r\n  const [RunTask2, setRunTask2] = useState({\r\n    booleanValue: \"\",\r\n    val: -1,\r\n    bool: null,\r\n  });\r\n  const [Org, setOrg] = useState(\"\");\r\n\r\n  const [PolicyName, setPolicyName] = useState(\"\");\r\n\r\n  const [TaskName, setTaskName] = useState(\"\");\r\n\r\n  const [PGCalendar, setPGCalendar] = useState(\"\");\r\n\r\n  const [ModeExport, setModeExport] = useState(\"\");\r\n\r\n  const [ExportFileName, setExportFileName] = useState(\"\");\r\n\r\n  const [TransmitMock, setTransmitMock] = useState({\r\n    booleanValue: \"\",\r\n    val: -1,\r\n    bool: null,\r\n  });\r\n\r\n  const [Start, setStart] = useState(null);\r\n  const [End, setEnd] = useState(null);\r\n\r\n  const [DateRelative, setDateRelative] = useState(null);\r\n\r\n  const [clientList, setClientList] = useState([\r\n    {\r\n      adminDb: \"\",\r\n      clientId: \"\",\r\n      clientName: \"\",\r\n      adminDbSrv: \"\",\r\n      clientDb: \"\",\r\n      databaseVersion: \"\",\r\n      dbSize: 0,\r\n      site: \"\",\r\n    },\r\n  ]);\r\n  const [ClientInfo, setClientInfo] = useState({\r\n    id: 0,\r\n    envName: \"\",\r\n    category: \"\",\r\n    status: 0,\r\n    filePath: \"\",\r\n    dbSize: 0,\r\n    dbSize2: 0,\r\n    site: \"\",\r\n    clientDb: \"\",\r\n    clientId: -1,\r\n    clientName: \"\",\r\n    adminDb: \"\",\r\n    adminDbSrv: \"\",\r\n    namespace: null,\r\n    namespace2: null,\r\n  });\r\n\r\n  const [valid, setValid] = useState(0); // 0 = not checked, 1 = valid, -1 = not valid\r\n  const [subOpen, setSubOpen] = useState(false);\r\n\r\n  const reset = () => {\r\n    setJob((prev) => {\r\n      let update = { ...prev };\r\n      update.jobName = \"\";\r\n      update.id = 0;\r\n      return update;\r\n    });\r\n\r\n    setRunTask1((prev) => {\r\n      let update = { ...prev };\r\n      update.booleanValue = \"\";\r\n      update.val = -1;\r\n      update.bool = null;\r\n      return update;\r\n    });\r\n\r\n    setRunTask2((prev) => {\r\n      let update = { ...prev };\r\n      update.booleanValue = \"\";\r\n      update.val = -1;\r\n      update.bool = null;\r\n      return update;\r\n    });\r\n\r\n    setForceCompare((prev) => {\r\n      let update = { ...prev };\r\n      update.booleanValue = \"\";\r\n      update.val = -1;\r\n      update.bool = null;\r\n      return update;\r\n    });\r\n\r\n    setTaskName(\"\");\r\n    setOrg(\"\");\r\n    setPolicyName(\"\");\r\n\r\n    setPGCalendar(\"\");\r\n    setExportFileName(\"\");\r\n    setModeExport(\"\");\r\n    setTransmitMock((prev) => {\r\n      let update = { ...prev };\r\n      update.booleanValue = \"\";\r\n      update.val = -1;\r\n      update.bool = null;\r\n      return update;\r\n    });\r\n\r\n    setStart(null);\r\n    setEnd(null);\r\n    setDateRelative(null);\r\n\r\n    setClientInfo((prev) => {\r\n      let update = { ...prev };\r\n      update.id = 0;\r\n      update.envName = \"\";\r\n      update.filePath = \"\";\r\n      update.category = \"\";\r\n      update.status = 0;\r\n      update.clientId = -1;\r\n      update.clientName = \"\";\r\n      update.clientDb = \"\";\r\n      update.site = \"\";\r\n      update.dbSize = 0;\r\n      update.dbSize2 = 0;\r\n      update.adminDb = \"\";\r\n      update.adminDbSrv = \"\";\r\n      update.namespace = null;\r\n      update.namespace2 = null;\r\n      return update;\r\n    });\r\n\r\n    setValid(0);\r\n  };\r\n\r\n  const jobchangereset = () => {\r\n    setRunTask1((prev) => {\r\n      let update = { ...prev };\r\n      update.booleanValue = \"\";\r\n      update.val = -1;\r\n      update.bool = null;\r\n      return update;\r\n    });\r\n\r\n    setRunTask2((prev) => {\r\n      let update = { ...prev };\r\n      update.booleanValue = \"\";\r\n      update.val = -1;\r\n      update.bool = null;\r\n      return update;\r\n    });\r\n\r\n    setForceCompare((prev) => {\r\n      let update = { ...prev };\r\n      update.booleanValue = \"\";\r\n      update.val = -1;\r\n      update.bool = null;\r\n      return update;\r\n    });\r\n\r\n    setTaskName(\"\");\r\n    setOrg(\"\");\r\n    setPolicyName(\"\");\r\n\r\n    setPGCalendar(\"\");\r\n    setExportFileName(\"\");\r\n    setModeExport(\"\");\r\n    setTransmitMock((prev) => {\r\n      let update = { ...prev };\r\n      update.booleanValue = \"\";\r\n      update.val = -1;\r\n      update.bool = null;\r\n      return update;\r\n    });\r\n\r\n    setStart(null);\r\n    setEnd(null);\r\n    setDateRelative(null);\r\n\r\n    setClientInfo((prev) => {\r\n      let update = { ...prev };\r\n      update.id = 0;\r\n      update.envName = \"\";\r\n      update.filePath = \"\";\r\n      update.category = \"\";\r\n      update.status = 0;\r\n      update.clientId = -1;\r\n      update.clientName = \"\";\r\n      update.clientDb = \"\";\r\n      update.site = \"\";\r\n      update.dbSize = 0;\r\n      update.dbSize2 = 0;\r\n      update.adminDb = \"\";\r\n      update.adminDbSrv = \"\";\r\n      update.namespace = null;\r\n      update.namespace2 = null;\r\n      return update;\r\n    });\r\n\r\n    setValid(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let clientApi = async () => {\r\n      let url = clientListAPI;\r\n      await axios({\r\n        method: \"GET\",\r\n        url,\r\n      })\r\n        .then(function (response) {\r\n          setList(response.data);\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    };\r\n    clientApi();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let catApi = async () => {\r\n      let url = categoryAPI;\r\n      await axios({\r\n        method: \"GET\",\r\n        url,\r\n        \"Access-Control-Allow-Credentials\": true,\r\n      })\r\n        .then(function (response) {\r\n          setCategoryList(response.data);\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    };\r\n    catApi();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let admClientApi = async () => {\r\n      let url = adminClientAPI + \"ALL\";\r\n      await axios({\r\n        method: \"GET\",\r\n        url,\r\n      })\r\n        .then(function (response) {\r\n          setAdmClientList(response.data);\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    };\r\n    admClientApi();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    class client {\r\n      constructor(\r\n        clientId,\r\n        clientName,\r\n        adminDbSrv,\r\n        namespace,\r\n        databaseVersion,\r\n        dbSize,\r\n        site\r\n      ) {\r\n        this.adminDb = databaseVersion;\r\n        this.clientId = parseInt(clientId);\r\n        this.clientName = clientName;\r\n        this.adminDbSrv = adminDbSrv;\r\n        this.clientDb = namespace;\r\n        this.dbSize = dbSize;\r\n        this.site = site === \"Prod\" ? \"Production\" : site;\r\n      }\r\n    }\r\n    let tmp = [];\r\n    list.forEach(function (item) {\r\n      if (item.clientName !== \"\") {\r\n        var obj = new client(\r\n          item.clientID,\r\n          item.clientName,\r\n          item.clientServer,\r\n          item.namespace,\r\n          item.databaseVersion,\r\n          item.prodBackupSizeMB,\r\n          item.site\r\n        );\r\n        tmp.push(obj);\r\n      }\r\n    });\r\n    setClientList(\r\n      tmp.sort((a, b) => parseInt(a.clientId) - parseInt(b.clientId))\r\n    );\r\n  }, [list]);\r\n\r\n  useEffect(() => {\r\n    let backupClientApi = async () => {\r\n      // for backup file path source environment, will assume that the admin DB client names take precedence, and will just add on additional toolbox client names\r\n      var seen = {};\r\n      var out = [];\r\n      var j = 0;\r\n      // since we are backing up from a backup file, we don't need anything more than the client name and the client ID\r\n      // we can iterate through the list and only grab unique client IDs and put these unique clients into a set\r\n      // use the set as a look up to check if we have already seen this client already\r\n      // first add the Admin DB clients into the set as well as the resulting list\r\n      admClientList.forEach(function (item) {\r\n        item.site = \"DF R&D\";\r\n        item.clientDb = \"\";\r\n        seen[item.clientId] = 1;\r\n        out[j++] = item;\r\n      });\r\n      // now have to parse through the clientList and only grab clients with client ID's that are already not in the set to maintain uniqueness\r\n      for (var i = 0; i < clientList.length; i++) {\r\n        var id = clientList[i].clientId;\r\n        // since out list is composed of objects (clients), we only need to check the client ID\r\n        if (seen[id] !== 1) {\r\n          seen[id] = 1;\r\n          // if  we haven't seen the ID before, we can add the object (client) into our list\r\n          out[j++] = clientList[i];\r\n        }\r\n      }\r\n      // once you have your unique client ID list, we can sort by client ID and set it afor the options dropdown\r\n      // setBackupList(\r\n      //   out.sort((a, b) => parseInt(a.clientId) - parseInt(b.clientId))\r\n      // );\r\n    };\r\n    backupClientApi();\r\n  }, [admClientList, clientList]);\r\n\r\n  useEffect(() => {\r\n    setSubOpen(false);\r\n  }, [ClientInfo]);\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Comparison Page\">\r\n      <Container maxWidth={false}>\r\n        <Grid container spacing={3}>\r\n          <Grid item lg={12} md={12} xl={12} xs={12}>\r\n            <TargetJobCard\r\n              Job={Job}\r\n              setJob={setJob}\r\n              setSubOpen={setSubOpen}\r\n              jobchangereset={jobchangereset}\r\n            />\r\n          </Grid>\r\n          {Job.id === 1 ||\r\n          Job.id === 2 ||\r\n          Job.id === 3 ||\r\n          Job.id === 4 ||\r\n          Job.id === 5 ||\r\n          Job.id === 6 ? (\r\n            <Grid item lg={6} md={6} xl={6} xs={6}>\r\n              <ClientCard\r\n                ClientInfo={ClientInfo}\r\n                setClientInfo={setClientInfo}\r\n                valid={valid}\r\n                setValid={setValid}\r\n                categoryList={categoryList}\r\n                clientList={clientList}\r\n                setSubOpen={setSubOpen}\r\n              />\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {Job.id === 1 ||\r\n          Job.id === 2 ||\r\n          Job.id === 3 ||\r\n          Job.id === 4 ||\r\n          Job.id === 5 ||\r\n          Job.id === 6 ? (\r\n            <Grid item lg={6} md={6} xl={6} xs={6}>\r\n              <VersionsCard\r\n                ClientInfo={ClientInfo}\r\n                setClientInfo={setClientInfo}\r\n                setSubOpen={setSubOpen}\r\n              />\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {Job.id === 1 ||\r\n          Job.id === 2 ||\r\n          Job.id === 3 ||\r\n          Job.id === 4 ||\r\n          Job.id === 5 ||\r\n          Job.id === 6 ? (\r\n            <Grid item lg={12} md={12} xl={12} xs={12}>\r\n              <ConfriguationsCard\r\n                ForceCompare={ForceCompare}\r\n                setForceCompare={setForceCompare}\r\n                RunTask1={RunTask1}\r\n                setRunTask1={setRunTask1}\r\n                RunTask2={RunTask2}\r\n                setRunTask2={setRunTask2}\r\n                Org={Org}\r\n                setOrg={setOrg}\r\n                TaskName={TaskName}\r\n                setTaskName={setTaskName}\r\n                Start={Start}\r\n                setStart={setStart}\r\n                End={End}\r\n                setEnd={setEnd}\r\n                setSubOpen={setSubOpen}\r\n                DateRelative={DateRelative}\r\n                setDateRelative={setDateRelative}\r\n                Job={Job}\r\n                setJob={setJob}\r\n                PolicyName={PolicyName}\r\n                setPolicyName={setPolicyName}\r\n                PGCalendar={PGCalendar}\r\n                setPGCalendar={setPGCalendar}\r\n                TransmitMock={TransmitMock}\r\n                setTransmitMock={setTransmitMock}\r\n                ModeExport={ModeExport}\r\n                setModeExport={setModeExport}\r\n                ExportFileName={ExportFileName}\r\n                setExportFileName={setExportFileName}\r\n              />\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n\r\n          {Job.id === 1 ||\r\n          Job.id === 2 ||\r\n          Job.id === 3 ||\r\n          Job.id === 4 ||\r\n          Job.id === 5 ||\r\n          Job.id === 6 ? (\r\n            <Grid item lg={12} md={12} xl={12} xs={12}>\r\n              <RunComparisonCard\r\n                ClientInfo={ClientInfo}\r\n                Job={Job}\r\n                ForceCompare={ForceCompare}\r\n                RunTask1={RunTask1}\r\n                RunTask2={RunTask2}\r\n                Org={Org}\r\n                TaskName={TaskName}\r\n                Start={Start}\r\n                End={End}\r\n                userInfo={userInfo}\r\n                reset={reset}\r\n                setSubOpen={setSubOpen}\r\n                subOpen={subOpen}\r\n                DateRelative={DateRelative}\r\n                PolicyName={PolicyName}\r\n                PGCalendar={PGCalendar}\r\n                TransmitMock={TransmitMock}\r\n                ModeExport={ModeExport}\r\n                ExportFileName={ExportFileName}\r\n              />\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n\r\n          {valid === -1 ? (\r\n            <Grid item lg={6} md={6} xl={6} xs={12}>\r\n              <Box mb={1}>\r\n                <ColorButton\r\n                  style={{ float: \"left\" }}\r\n                  id=\"cancelButton\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={reset}\r\n                >\r\n                  Cancel Request\r\n                </ColorButton>\r\n              </Box>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Grid>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default ComparisonForm;\r\n","import React from \"react\";\r\nimport { NavLink as RouterLink } from \"react-router-dom\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, ListItem, makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  item: {\r\n    display: \"flex\",\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n  },\r\n  button: {\r\n    color: theme.palette.text.secondary,\r\n    fontWeight: theme.typography.fontWeightMedium,\r\n    justifyContent: \"flex-start\",\r\n    letterSpacing: 0,\r\n    padding: \"10px 8px\",\r\n    textTransform: \"none\",\r\n    width: \"100%\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  title: {\r\n    marginRight: \"auto\",\r\n  },\r\n  active: {\r\n    color: theme.palette.primary.main,\r\n    \"& $title\": {\r\n      fontWeight: theme.typography.fontWeightMedium,\r\n    },\r\n    \"& $icon\": {\r\n      color: theme.palette.primary.main,\r\n    },\r\n  },\r\n}));\r\n\r\nconst NavItem = ({ className, href, icon: Icon, title, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ListItem\r\n      className={clsx(classes.item, className)}\r\n      disableGutters\r\n      {...rest}\r\n    >\r\n      <Button\r\n        activeClassName={classes.active}\r\n        className={classes.button}\r\n        component={RouterLink}\r\n        to={href}\r\n      >\r\n        {Icon && <Icon className={classes.icon} size=\"20\" />}\r\n        <span className={classes.title}>{title}</span>\r\n      </Button>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nNavItem.propTypes = {\r\n  className: PropTypes.string,\r\n  href: PropTypes.string,\r\n  icon: PropTypes.elementType,\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default NavItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Box,\r\n  Divider,\r\n  Drawer,\r\n  Hidden,\r\n  List,\r\n  Typography,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport { BarChart as ResultsIcon } from \"react-feather\";\r\nimport NavItem from \"./NavItem\";\r\n\r\nimport CompareIcon from \"@material-ui/icons/Compare\";\r\n\r\nconst items = [\r\n  {\r\n    id: \"ComparisonForm\",\r\n    href: \"/comparison\",\r\n    icon: CompareIcon,\r\n    title: \"Comparison Page\",\r\n  },\r\n  {\r\n    id: \"Results\",\r\n    href: \"/result\",\r\n    icon: ResultsIcon,\r\n    title: \"Results Page\",\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  mobileDrawer: {\r\n    width: 256,\r\n  },\r\n  desktopDrawer: {\r\n    flexShrink: 0,\r\n    width: 256,\r\n    top: 64,\r\n    height: \"calc(100% - 64px)\",\r\n  },\r\n  avatar: {\r\n    cursor: \"pointer\",\r\n    width: 64,\r\n    height: 64,\r\n  },\r\n}));\r\n\r\nconst NavBar = ({ closeDrawer, open, userInfo }) => {\r\n  const classes = useStyles();\r\n  const content = (\r\n    <Box height=\"100%\" display=\"flex\" flexDirection=\"column\">\r\n      <Box alignItems=\"left\" display=\"flex\" flexDirection=\"column\" p={2}>\r\n        <Typography\r\n          className={classes.name}\r\n          color=\"textPrimary\"\r\n          align=\"left\"\r\n          variant=\"h4\"\r\n        >\r\n          {userInfo.givenName} {userInfo.surname}\r\n        </Typography>\r\n        <Typography\r\n          className={classes.name}\r\n          color=\"textSecondary\"\r\n          align=\"left\"\r\n          variant=\"body2\"\r\n        >\r\n          {userInfo.userPrincipalName}\r\n        </Typography>\r\n      </Box>\r\n      <Divider />\r\n      <Box p={2}>\r\n        <List>\r\n          {items.map((item) => (\r\n            <NavItem\r\n              id={item.id}\r\n              href={item.href}\r\n              key={item.title}\r\n              title={item.title}\r\n              icon={item.icon}\r\n            />\r\n          ))}\r\n        </List>\r\n      </Box>\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Hidden lgUp>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          classes={{ paper: classes.mobileDrawer }}\r\n          onClose={closeDrawer}\r\n          open={open}\r\n          variant=\"temporary\"\r\n        >\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n      <Hidden mdDown>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          classes={{ paper: classes.desktopDrawer }}\r\n          open={open}\r\n          variant=\"persistent\"\r\n        >\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n    </>\r\n  );\r\n};\r\n\r\nNavBar.propTypes = {\r\n  closeDrawer: PropTypes.func,\r\n  open: PropTypes.bool,\r\n  userInfo: PropTypes.object,\r\n};\r\n\r\nNavBar.defaultProps = {\r\n  closeDrawer: () => {},\r\n  open: false,\r\n  userInfo: {},\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  AppBar,\r\n  /*Badge,*/ Box,\r\n  IconButton,\r\n  Toolbar,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport HelpOutlinedIcon from \"@material-ui/icons/HelpOutlined\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  avatar: {\r\n    width: 60,\r\n    height: 60,\r\n  },\r\n\r\n  title: {\r\n    color: \"#FFFFFF\",\r\n    paddingLeft: 10,\r\n    paddingRight: 10,\r\n  },\r\n}));\r\n\r\nconst TopBar = ({ className, toggleDrawer, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  function wiki() {\r\n    window.open(\r\n      \"https://wiki.dayforce.com/pages/viewpage.action?spaceKey=WFM&title=ComparePay+Tool\",\r\n      \"_blank\"\r\n    );\r\n  }\r\n\r\n  return (\r\n    <AppBar className={clsx(classes.root, className)} elevation={0} {...rest}>\r\n      <Toolbar>\r\n        <Box style={{ fontSize: \"1.25rem\" }}>\r\n          <IconButton color=\"inherit\" onClick={toggleDrawer}>\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Link\r\n            style={{ marginLeft: 8 }}\r\n            to=\"/comparepaytool\"\r\n            className={classes.title}\r\n          >\r\n            Compare Pay Tool\r\n          </Link>\r\n          <Link style={{ marginLeft: 8 }} to=\"/\" className={classes.title}>\r\n            Home\r\n          </Link>\r\n          <a\r\n            style={{ marginLeft: 8 }}\r\n            href=\"http://cmtools.dayforce.com/testinfrastructure/\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n            className={classes.title}\r\n          >\r\n            Testinfrastructure\r\n          </a>\r\n          <a\r\n            style={{ marginLeft: 8 }}\r\n            href=\"http://cmtools2.dayforce.com/testinfrastructure/\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n            className={classes.title}\r\n          >\r\n            Testinfrastructure (Nav Cloud)\r\n          </a>\r\n        </Box>\r\n        <Box flexGrow={1} />\r\n        <IconButton color=\"inherit\" onClick={wiki}>\r\n          <HelpOutlinedIcon />\r\n        </IconButton>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nTopBar.propTypes = {\r\n  className: PropTypes.string,\r\n  toggleDrawer: PropTypes.func,\r\n};\r\n\r\nexport default TopBar;\r\n","import React from \"react\";\r\nimport { Container, Box, makeStyles, Grid } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  footer: {\r\n    position: \"fixed\",\r\n    left: 0,\r\n    bottom: 0,\r\n    width: \"100%\",\r\n    color: \"white\",\r\n    textAlign: \"left\",\r\n    backgroundColor: \"#616161\",\r\n    padding: 10,\r\n    fontSize: 12,\r\n    zIndex: 1201,\r\n  },\r\n}));\r\n\r\nconst Footer = () => {\r\n  const classes = useStyles();\r\n\r\n  function getChromeVersion() {\r\n    var raw = navigator.userAgent.match(/Chrom(e|ium)\\/([0-9]+)\\./);\r\n\r\n    return raw ? parseInt(raw[2], 10) : false;\r\n  }\r\n\r\n  let version = getChromeVersion();\r\n  let message;\r\n  let job_status =\r\n    \"Refer to About Page for Latest Anouncements related to Background Jobs available in Compare Pay Tool\";\r\n  if (version === false) {\r\n    message = \"Compare Pay Tool client supported on your Web Browser\";\r\n  } else {\r\n    message =\r\n      \"Compare Pay Tool client supported on Google Chrome Version \" +\r\n      version.toString();\r\n  }\r\n\r\n  return (\r\n    <div className={classes.footer}>\r\n      <Container maxWidth={false}>\r\n        <Box>\r\n          <Grid container spacing={3}>\r\n            <Grid item lg={3} md={3} xl={3} xs={6}>\r\n              {message}\r\n            </Grid>\r\n            <Grid item lg={3} md={3} xl={3} xs={6}></Grid>\r\n            <Grid item lg={3} md={3} xl={3} xs={6}></Grid>\r\n            <Grid item lg={3} md={3} xl={3} xs={6}>\r\n              {job_status}\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport NavBar from \"./NavBar\";\r\nimport TopBar from \"./TopBar\";\r\nimport Footer from \"./Footer\";\r\n\r\nconst drawerWidth = 256;\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(0, 1),\r\n    // Necessary for content to be below App Bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    maxWidth: \"100%\",\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n  contentShift: {\r\n    maxWidth: \"calc(100% - 256px)\",\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: drawerWidth,\r\n  },\r\n}));\r\n\r\nconst DashboardLayout = ({ userInfo, children }) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(true);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <TopBar toggleDrawer={() => setOpen(!open)} />\r\n      <NavBar\r\n        closeDrawer={() => setOpen(false)}\r\n        open={open}\r\n        userInfo={userInfo}\r\n      />\r\n      <main\r\n        className={clsx(classes.content, {\r\n          [classes.contentShift]: open,\r\n        })}\r\n      >\r\n        <div className={classes.drawerHeader} />\r\n        {children}\r\n      </main>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardLayout;\r\n","import { Chart } from \"react-chartjs-2\";\r\n\r\n// ChartJS extension rounded bar chart\r\n// https://codepen.io/jedtrow/full/ygRYgo\r\nfunction draw() {\r\n  const { ctx } = this._chart;\r\n  const vm = this._view;\r\n  let { borderWidth } = vm;\r\n\r\n  let left;\r\n  let right;\r\n  let top;\r\n  let bottom;\r\n  let signX;\r\n  let signY;\r\n  let borderSkipped;\r\n  let radius;\r\n\r\n  // If radius is less than 0 or is large enough to cause drawing errors a max\r\n  //      radius is imposed. If cornerRadius is not defined set it to 0.\r\n  let { cornerRadius } = this._chart.config.options;\r\n  if (cornerRadius < 0) {\r\n    cornerRadius = 0;\r\n  }\r\n\r\n  if (typeof cornerRadius === \"undefined\") {\r\n    cornerRadius = 0;\r\n  }\r\n\r\n  if (!vm.horizontal) {\r\n    // bar\r\n    left = vm.x - vm.width / 2;\r\n    right = vm.x + vm.width / 2;\r\n    top = vm.y;\r\n    bottom = vm.base;\r\n    signX = 1;\r\n    signY = bottom > top ? 1 : -1;\r\n    borderSkipped = vm.borderSkipped || \"bottom\";\r\n  } else {\r\n    // horizontal bar\r\n    left = vm.base;\r\n    right = vm.x;\r\n    top = vm.y - vm.height / 2;\r\n    bottom = vm.y + vm.height / 2;\r\n    signX = right > left ? 1 : -1;\r\n    signY = 1;\r\n    borderSkipped = vm.borderSkipped || \"left\";\r\n  }\r\n\r\n  // Canvas doesn't allow us to stroke inside the width so we can\r\n  // adjust the sizes to fit if we're setting a stroke on the line\r\n  if (borderWidth) {\r\n    // borderWidth shold be less than bar width and bar height.\r\n    const barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\r\n    borderWidth = borderWidth > barSize ? barSize : borderWidth;\r\n    const halfStroke = borderWidth / 2;\r\n    // Adjust borderWidth when bar top position is near vm.base(zero).\r\n    const borderLeft =\r\n      left + (borderSkipped !== \"left\" ? halfStroke * signX : 0);\r\n    const borderRight =\r\n      right + (borderSkipped !== \"right\" ? -halfStroke * signX : 0);\r\n    const borderTop = top + (borderSkipped !== \"top\" ? halfStroke * signY : 0);\r\n    const borderBottom =\r\n      bottom + (borderSkipped !== \"bottom\" ? -halfStroke * signY : 0);\r\n    // not become a vertical line?\r\n    if (borderLeft !== borderRight) {\r\n      top = borderTop;\r\n      bottom = borderBottom;\r\n    }\r\n    // not become a horizontal line?\r\n    if (borderTop !== borderBottom) {\r\n      left = borderLeft;\r\n      right = borderRight;\r\n    }\r\n  }\r\n\r\n  ctx.beginPath();\r\n  ctx.fillStyle = vm.backgroundColor;\r\n  ctx.strokeStyle = vm.borderColor;\r\n  ctx.lineWidth = borderWidth;\r\n\r\n  // Corner points, from bottom-left to bottom-right clockwise\r\n  // | 1 2 |\r\n  // | 0 3 |\r\n  const corners = [\r\n    [left, bottom],\r\n    [left, top],\r\n    [right, top],\r\n    [right, bottom],\r\n  ];\r\n\r\n  // Find first (starting) corner with fallback to 'bottom'\r\n  const borders = [\"bottom\", \"left\", \"top\", \"right\"];\r\n  let startCorner = borders.indexOf(borderSkipped, 0);\r\n  if (startCorner === -1) {\r\n    startCorner = 0;\r\n  }\r\n\r\n  function cornerAt(index) {\r\n    return corners[(startCorner + index) % 4];\r\n  }\r\n\r\n  // Draw rectangle from 'startCorner'\r\n  let corner = cornerAt(0);\r\n  ctx.moveTo(corner[0], corner[1]);\r\n\r\n  for (let i = 1; i < 4; i += 1) {\r\n    corner = cornerAt(i);\r\n    let nextCornerId = i + 1;\r\n    if (nextCornerId === 4) {\r\n      nextCornerId = 0;\r\n    }\r\n\r\n    const width = corners[2][0] - corners[1][0];\r\n    const height = corners[0][1] - corners[1][1];\r\n    const x = corners[1][0];\r\n    const y = corners[1][1];\r\n\r\n    radius = cornerRadius;\r\n    // Fix radius being too large\r\n    if (radius > Math.abs(height) / 2) {\r\n      radius = Math.floor(Math.abs(height) / 2);\r\n    }\r\n    if (radius > Math.abs(width) / 2) {\r\n      radius = Math.floor(Math.abs(width) / 2);\r\n    }\r\n\r\n    if (height < 0) {\r\n      // Negative values in a standard bar chart\r\n      const xTl = x;\r\n      const xTr = x + width;\r\n      const yTl = y + height;\r\n      const yTr = y + height;\r\n\r\n      const xBl = x;\r\n      const xBr = x + width;\r\n      const yBl = y;\r\n      const yBr = y;\r\n\r\n      // Draw\r\n      ctx.moveTo(xBl + radius, yBl);\r\n      ctx.lineTo(xBr - radius, yBr);\r\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\r\n      ctx.lineTo(xTr, yTr + radius);\r\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\r\n      ctx.lineTo(xTl + radius, yTl);\r\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\r\n      ctx.lineTo(xBl, yBl - radius);\r\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\r\n    } else if (width < 0) {\r\n      // Negative values in a horizontal bar chart\r\n      const xTl = x + width;\r\n      const xTr = x;\r\n      const yTl = y;\r\n      const yTr = y;\r\n\r\n      const xBl = x + width;\r\n      const xBr = x;\r\n      const yBl = y + height;\r\n      const yBr = y + height;\r\n\r\n      // Draw\r\n      ctx.moveTo(xBl + radius, yBl);\r\n      ctx.lineTo(xBr - radius, yBr);\r\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\r\n      ctx.lineTo(xTr, yTr + radius);\r\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\r\n      ctx.lineTo(xTl + radius, yTl);\r\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\r\n      ctx.lineTo(xBl, yBl - radius);\r\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\r\n    } else {\r\n      // Positive Value\r\n      ctx.moveTo(x + radius, y);\r\n      ctx.lineTo(x + width - radius, y);\r\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n      ctx.lineTo(x + width, y + height - radius);\r\n      ctx.quadraticCurveTo(\r\n        x + width,\r\n        y + height,\r\n        x + width - radius,\r\n        y + height\r\n      );\r\n      ctx.lineTo(x + radius, y + height);\r\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n      ctx.lineTo(x, y + radius);\r\n      ctx.quadraticCurveTo(x, y, x + radius, y);\r\n    }\r\n  }\r\n\r\n  ctx.fill();\r\n  if (borderWidth) {\r\n    ctx.stroke();\r\n  }\r\n}\r\n\r\nChart.helpers.extend(Chart.elements.Rectangle.prototype, {\r\n  draw,\r\n});\r\n","import React from 'react';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport { Box, Grid, Container, Card } from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: theme.palette.background.dark,\r\n        marginBottom: 35,\r\n        paddingBottom: theme.spacing(72.5),\r\n        paddingTop: theme.spacing(20)\r\n    },\r\n    subheader: {\r\n        margin: '5px',\r\n        fontSize: '16px',\r\n    },\r\n    card: {\r\n        marginTop: theme.spacing(3),\r\n        height: '100%',\r\n        padding: theme.spacing(3),\r\n    },\r\n    icon: {\r\n        fontSize: '3rem',\r\n        color: '#ffcc00',\r\n    },\r\n}));\r\n\r\nconst MaintenanceRedirect = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Page\r\n            className={classes.root}\r\n            title='User Redirect'\r\n        >\r\n            <Container maxWidth='lg'>\r\n                <Grid container spacing={3}>\r\n                    <Grid item lg={12} md={12} xl={12} xs={12}>\r\n                        <Card className={classes.card}>\r\n                            <Box>\r\n                                <h2>Compare Pay Tool currently under maintenance</h2>\r\n                            </Box>\r\n                            <Box mt={1}>\r\n                                <WarningIcon className={classes.icon} />\r\n                            </Box>\r\n                            <Box mt={2}>\r\n                                <h4>The client server is temporarily down due to maintenance. This is possible because the Compare Pay Tool development team is currently building or deploying a new release or bug fix on the server side.\r\n                                When this happens, the server will be down so the client will be inaccessible at this time. Please try again in a few minutes. Thank you for assistance and we apologize for the inconvenience</h4>            \r\n                            </Box>\r\n                            <Box mt={2}>\r\n                                <h4> we currently moved to new url, please use: </h4>\r\n                                <h4><a href=\"https://wiki.dayforce.com/pages/viewpage.action?spaceKey=WFM&title=ComparePay+Tool\" target=\"blank\"> https://wiki.dayforce.com/pages/viewpage.action?spaceKey=WFM&title=ComparePay+Tool </a></h4>\r\n                            </Box>\r\n                            <Box mt={3}>\r\n                                <h5>The Compare Pay Tool Development Team</h5>\r\n                            </Box>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </Page >\r\n    );\r\n}\r\n\r\nexport default MaintenanceRedirect; ","import React, { useEffect, useState } from \"react\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\nimport {\r\n  Box,\r\n  Paper,\r\n  Card,\r\n  CardContent,\r\n  Divider,\r\n  Typography,\r\n  colors,\r\n  makeStyles,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport DirectionsRunIcon from \"@material-ui/icons/DirectionsRun\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  note: {\r\n    textAlign: \"left\",\r\n    fontSize: 13,\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst Statistics = ({ result }) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [differenceCount, setdifferenceCount] = useState(0);\r\n  const [nodifferenceCount, setnodifferenceCount] = useState(0);\r\n  const [runningCount, setrunningCount] = useState(0);\r\n  const [failedCount, setfailedCount] = useState(0);\r\n  const [noresultsCount, setnoresultsCount] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    var set = {};\r\n\r\n    result.forEach((item) => {\r\n      if (item.results === \"WARNING\") {\r\n        if (set[\"Difference\"]) {\r\n          set[\"Difference\"] += 1;\r\n        } else {\r\n          set[\"Difference\"] = 1;\r\n        }\r\n      } else if (item.results === \"SUCCESS\") {\r\n        if (set[\"No Difference\"]) {\r\n          set[\"No Difference\"] += 1;\r\n        } else {\r\n          set[\"No Difference\"] = 1;\r\n        }\r\n      } else if (item.compared === 1) {\r\n        if (set[\"In Running\"]) {\r\n          set[\"In Running\"] += 1;\r\n        } else {\r\n          set[\"In Running\"] = 1;\r\n        }\r\n      } else if (item.compared === 3) {\r\n        if (set[\"Failed\"]) {\r\n          set[\"Failed\"] += 1;\r\n        } else {\r\n          set[\"Failed\"] = 1;\r\n        }\r\n      } else if (item.compared === 0) {\r\n        if (set[\"No Results\"]) {\r\n          set[\"No Results\"] += 1;\r\n        } else {\r\n          set[\"No Results\"] = 1;\r\n        }\r\n      }\r\n    });\r\n\r\n    setdifferenceCount(set[\"Difference\"] ?? 0);\r\n    setnodifferenceCount(set[\"No Difference\"] ?? 0);\r\n    setrunningCount(set[\"In Running\"] ?? 0);\r\n    setfailedCount(set[\"Failed\"] ?? 0);\r\n    setnoresultsCount(set[\"No Results\"] ?? 0);\r\n    setLoading(false);\r\n  }, [result]);\r\n\r\n  const options = {\r\n    animation: false,\r\n    cutoutPercentage: 80,\r\n    layout: { padding: 0 },\r\n    legend: {\r\n      display: false,\r\n    },\r\n    maintainAspectRatio: false,\r\n    responsive: true,\r\n    tooltips: {\r\n      backgroundColor: theme.palette.background.default,\r\n      bodyFontColor: theme.palette.text.secondary,\r\n      borderColor: theme.palette.divider,\r\n      borderWidth: 1,\r\n      enabled: true,\r\n      footerFontColor: theme.palette.text.secondary,\r\n      intersect: false,\r\n      mode: \"index\",\r\n      titleFontColor: theme.palette.text.primary,\r\n    },\r\n  };\r\n\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        data: [\r\n          differenceCount,\r\n          nodifferenceCount,\r\n          runningCount,\r\n          failedCount,\r\n          noresultsCount,\r\n        ],\r\n        backgroundColor: [\r\n          \"#FF0000\",\r\n          \"#00FF00\",\r\n          \"#eec300\",\r\n          \"#ffcccb\",\r\n          \"#D6D5CB\",\r\n        ],\r\n        borderWidth: 8,\r\n        borderColor: colors.common.white,\r\n        hoverBorderColor: colors.common.white,\r\n      },\r\n    ],\r\n    labels: [\r\n      \"Difference\",\r\n      \"No Difference\",\r\n      \"In Running\",\r\n      \"Failed\",\r\n      \"No Results\",\r\n    ],\r\n  };\r\n\r\n  const statuses = [\r\n    {\r\n      title: \"Difference\",\r\n      value: isNaN(parseInt((differenceCount / result.length) * 100))\r\n        ? 0\r\n        : parseInt((differenceCount / result.length) * 100),\r\n      icon: CloseIcon,\r\n      color: \"#FF0000\",\r\n    },\r\n    {\r\n      title: \"No Difference\",\r\n      value: isNaN(parseInt((nodifferenceCount / result.length) * 100))\r\n        ? 0\r\n        : parseInt((nodifferenceCount / result.length) * 100),\r\n      icon: DoneIcon,\r\n      color: \"#00FF00\",\r\n    },\r\n    {\r\n      title: \"In Running\",\r\n      value: isNaN(parseInt((runningCount / result.length) * 100))\r\n        ? 0\r\n        : parseInt((runningCount / result.length) * 100),\r\n      icon: DirectionsRunIcon,\r\n      color: \"#eec300\",\r\n    },\r\n    {\r\n      title: \"Failed\",\r\n      value: isNaN(parseInt((failedCount / result.length) * 100))\r\n        ? 0\r\n        : parseInt((failedCount / result.length) * 100),\r\n      icon: ErrorIcon,\r\n      color: \"#ffcccb\",\r\n    },\r\n    {\r\n      title: \"No Results\",\r\n      value: isNaN(parseInt((noresultsCount / result.length) * 100))\r\n        ? 0\r\n        : parseInt((noresultsCount / result.length) * 100),\r\n      icon: HelpOutlineIcon,\r\n      color: \"#D6D5CB\",\r\n    },\r\n  ];\r\n  return loading ? (\r\n    <></>\r\n  ) : (\r\n    <Card>\r\n      <Typography\r\n        variant=\"h2\"\r\n        align=\"center\"\r\n        color=\"primary\"\r\n        style={{ margin: \"2rem\" }}\r\n      >\r\n        Comparison Statistics\r\n      </Typography>\r\n      <Divider />\r\n      <Paper className={classes.paper}>\r\n        <CardContent style={{ paddingBottom: 16 }}>\r\n          <Box height={300} position=\"relative\">\r\n            <Doughnut data={data} options={options} />\r\n          </Box>\r\n          <Box display=\"flex\" justifyContent=\"center\" mt={2}>\r\n            {statuses.map(({ color, icon: Icon, title, value }) => (\r\n              <Box key={title} p={1} textAlign=\"center\">\r\n                <Icon color=\"action\" />\r\n                <Typography color=\"textPrimary\" variant=\"body1\">\r\n                  {title}\r\n                </Typography>\r\n                <Typography style={{ color }} variant=\"h2\">\r\n                  {value}%\r\n                </Typography>\r\n              </Box>\r\n            ))}\r\n          </Box>\r\n          <Box mt={2}>\r\n            <p className={classes.note}>\r\n              * Statistics and Analysis of all Comparisons in last 30 days\r\n            </p>\r\n          </Box>\r\n        </CardContent>\r\n      </Paper>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport {\r\n  Box,\r\n  Paper,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Divider,\r\n  useTheme,\r\n  makeStyles,\r\n  colors,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  note: {\r\n    textAlign: \"left\",\r\n    fontSize: 13,\r\n    marginTop: 34,\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst CompletedComparison = ({ result }) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const [dates, setDates] = useState([]);\r\n\r\n  const [count, setCount] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    var seen = {};\r\n    var out = [];\r\n    var j = 0;\r\n    result.reverse();\r\n    result.forEach(function (item) {\r\n      var x = new Date(item.date);\r\n      var d = `${x.getDate()} ${x.toLocaleString(\"default\", {\r\n        month: \"short\",\r\n      })}`;\r\n      if (seen[d]) {\r\n        seen[d] += 1;\r\n      } else {\r\n        seen[d] = 1;\r\n        out[j++] = d;\r\n      }\r\n    });\r\n\r\n    let tmp = [];\r\n    out.forEach(function (d) {\r\n      tmp.push(seen[d]);\r\n    });\r\n    setDates(out);\r\n    setCount(tmp);\r\n    setLoading(false);\r\n  }, [result]);\r\n\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        backgroundColor: colors.blueGrey[900],\r\n        data: count,\r\n        label: \"Comparisons\",\r\n        barPercentage: 0.5,\r\n        maxBarThickness: 10,\r\n        barThickness: 12,\r\n        categoryPercentage: 0.5,\r\n      },\r\n    ],\r\n    labels: dates,\r\n  };\r\n\r\n  const options = {\r\n    animation: false,\r\n    cornerRadius: 20,\r\n    layout: { padding: 0 },\r\n    legend: { display: false },\r\n    maintainAspectRatio: false,\r\n    responsive: true,\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          ticks: {\r\n            fontColor: theme.palette.text.secondary,\r\n          },\r\n          gridLines: {\r\n            display: false,\r\n            drawBorder: false,\r\n          },\r\n        },\r\n      ],\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            fontColor: theme.palette.text.secondary,\r\n            beginAtZero: true,\r\n            min: 0,\r\n          },\r\n          gridLines: {\r\n            borderDash: [2],\r\n            borderDashOffset: [2],\r\n            color: theme.palette.divider,\r\n            drawBorder: false,\r\n            zeroLineBorderDash: [2],\r\n            zeroLineBorderDashOffset: [2],\r\n            zeroLineColor: theme.palette.divider,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    tooltips: {\r\n      backgroundColor: theme.palette.background.default,\r\n      bodyFontColor: theme.palette.text.secondary,\r\n      borderColor: theme.palette.divider,\r\n      borderWidth: 1,\r\n      enabled: true,\r\n      footerFontColor: theme.palette.text.secondary,\r\n      intersect: false,\r\n      mode: \"index\",\r\n      titleFontColor: theme.palette.text.primary,\r\n    },\r\n  };\r\n\r\n  return loading ? (\r\n    <></>\r\n  ) : (\r\n    <Card>\r\n      <Typography\r\n        variant=\"h2\"\r\n        align=\"center\"\r\n        color=\"primary\"\r\n        style={{ margin: \"2rem\" }}\r\n      >\r\n        Number of Comparisons Initiated - {result.length}\r\n      </Typography>\r\n      <Divider />\r\n      <Paper className={classes.paper}>\r\n        <CardContent style={{ paddingBottom: 16 }}>\r\n          <Box height={400} position=\"relative\">\r\n            <Bar data={data} options={options} />\r\n          </Box>\r\n          <Box mt={2}>\r\n            <p className={classes.note}>\r\n              * Graph displays number of comparison initiated on different days\r\n              for last 30 days\r\n            </p>\r\n          </Box>\r\n        </CardContent>\r\n      </Paper>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CompletedComparison;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\nimport {\r\n  Box,\r\n  Paper,\r\n  Card,\r\n  CardContent,\r\n  Divider,\r\n  Typography,\r\n  colors,\r\n  makeStyles,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport AccountBalanceIcon from \"@material-ui/icons/AccountBalance\";\r\nimport StorageIcon from \"@material-ui/icons/Storage\";\r\nimport FlightTakeoffIcon from \"@material-ui/icons/FlightTakeoff\";\r\nimport WorkIcon from \"@material-ui/icons/Work\";\r\nimport PaymentIcon from \"@material-ui/icons/Payment\";\r\nimport AttachMoneyIcon from \"@material-ui/icons/AttachMoney\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  note: {\r\n    textAlign: \"left\",\r\n    fontSize: 13,\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst JobStatistics = ({ result }) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [aeCount, setaeCount] = useState(0);\r\n  const [brrCount, setbrrCount] = useState(0);\r\n  const [exportCount, setexportCount] = useState(0);\r\n  const [jsrCount, setjsrCount] = useState(0);\r\n  const [psrCount, setpsrCount] = useState(0);\r\n  const [scrCount, setscrCount] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    var set = {};\r\n\r\n    result.forEach((item) => {\r\n      if (item.job === \"AE_Sample\") {\r\n        if (set[\"AE\"]) {\r\n          set[\"AE\"] += 1;\r\n        } else {\r\n          set[\"AE\"] = 1;\r\n        }\r\n      } else if (item.job === \"BRR\") {\r\n        if (set[\"BRR\"]) {\r\n          set[\"BRR\"] += 1;\r\n        } else {\r\n          set[\"BRR\"] = 1;\r\n        }\r\n      } else if (item.job === \"Export\") {\r\n        if (set[\"Export\"]) {\r\n          set[\"Export\"] += 1;\r\n        } else {\r\n          set[\"Export\"] = 1;\r\n        }\r\n      } else if (item.job === \"JobStepRecalc\") {\r\n        if (set[\"JSR\"]) {\r\n          set[\"JSR\"] += 1;\r\n        } else {\r\n          set[\"JSR\"] = 1;\r\n        }\r\n      } else if (item.job === \"PSR\") {\r\n        if (set[\"PSR\"]) {\r\n          set[\"PSR\"] += 1;\r\n        } else {\r\n          set[\"PSR\"] = 1;\r\n        }\r\n      } else if (item.job === \"SCR\") {\r\n        if (set[\"SCR\"]) {\r\n          set[\"SCR\"] += 1;\r\n        } else {\r\n          set[\"SCR\"] = 1;\r\n        }\r\n      }\r\n    });\r\n\r\n    setaeCount(set[\"AE\"] ?? 0);\r\n    setbrrCount(set[\"BRR\"] ?? 0);\r\n    setexportCount(set[\"Export\"] ?? 0);\r\n    setjsrCount(set[\"JSR\"] ?? 0);\r\n    setpsrCount(set[\"PSR\"] ?? 0);\r\n    setscrCount(set[\"SCR\"] ?? 0);\r\n    setLoading(false);\r\n  }, [result]);\r\n\r\n  const options = {\r\n    animation: false,\r\n    cutoutPercentage: 80,\r\n    layout: { padding: 0 },\r\n    legend: {\r\n      display: false,\r\n    },\r\n    maintainAspectRatio: false,\r\n    responsive: true,\r\n    tooltips: {\r\n      backgroundColor: theme.palette.background.default,\r\n      bodyFontColor: theme.palette.text.secondary,\r\n      borderColor: theme.palette.divider,\r\n      borderWidth: 1,\r\n      enabled: true,\r\n      footerFontColor: theme.palette.text.secondary,\r\n      intersect: false,\r\n      mode: \"index\",\r\n      titleFontColor: theme.palette.text.primary,\r\n    },\r\n  };\r\n\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        data: [aeCount, brrCount, exportCount, jsrCount, psrCount, scrCount],\r\n        backgroundColor: [\r\n          \"#8F00FF\",\r\n          \"#4B0082\",\r\n          \"#0000FF\",\r\n          \"#00FF00\",\r\n          \"#964B00\",\r\n          \"#FFA500\",\r\n        ],\r\n        borderWidth: 8,\r\n        borderColor: colors.common.white,\r\n        hoverBorderColor: colors.common.white,\r\n      },\r\n    ],\r\n    labels: [\r\n      \"Award Entitlement\",\r\n      \"Base Rate Recalc\",\r\n      \"Pay Export\",\r\n      \"Job Step Recalc\",\r\n      \"Pay Summary Recalc\",\r\n      \"Schedule Cost Recalc\",\r\n    ],\r\n  };\r\n\r\n  const statuses = [\r\n    {\r\n      title: \"Award Entitlement\",\r\n      value: isNaN(parseInt((aeCount / result.length) * 100))\r\n        ? 0\r\n        : parseInt((aeCount / result.length) * 100),\r\n      icon: AccountBalanceIcon,\r\n      color: \"#8F00FF\",\r\n    },\r\n    {\r\n      title: \"Base Rate Recalc\",\r\n      value: isNaN(parseInt((brrCount / result.length) * 100))\r\n        ? 0\r\n        : parseInt((brrCount / result.length) * 100),\r\n      icon: StorageIcon,\r\n      color: \"#4B0082\",\r\n    },\r\n    {\r\n      title: \"Pay Export\",\r\n      value: isNaN(parseInt((exportCount / result.length) * 100))\r\n        ? 0\r\n        : parseInt((exportCount / result.length) * 100),\r\n      icon: FlightTakeoffIcon,\r\n      color: \"#0000FF\",\r\n    },\r\n    {\r\n      title: \"Job Step Recalc\",\r\n      value: isNaN(parseInt((jsrCount / result.length) * 100))\r\n        ? 0\r\n        : parseInt((jsrCount / result.length) * 100),\r\n      icon: WorkIcon,\r\n      color: \"#00FF00\",\r\n    },\r\n    {\r\n      title: \"Pay Summary Recalc\",\r\n      value: isNaN(parseInt((psrCount / result.length) * 100))\r\n        ? 0\r\n        : parseInt((psrCount / result.length) * 100),\r\n      icon: PaymentIcon,\r\n      color: \"#964B00\",\r\n    },\r\n    {\r\n      title: \"Schedule Cost Recalc\",\r\n      value: isNaN(parseInt((scrCount / result.length) * 100))\r\n        ? 0\r\n        : parseInt((scrCount / result.length) * 100),\r\n      icon: AttachMoneyIcon,\r\n      color: \"#FFA500\",\r\n    },\r\n  ];\r\n  return loading ? (\r\n    <></>\r\n  ) : (\r\n    <Card>\r\n      <Typography\r\n        variant=\"h2\"\r\n        align=\"center\"\r\n        color=\"primary\"\r\n        style={{ margin: \"2rem\" }}\r\n      >\r\n        Job Statistics\r\n      </Typography>\r\n      <Divider />\r\n      <Paper className={classes.paper}>\r\n        <CardContent style={{ paddingBottom: 16 }}>\r\n          <Box height={300} position=\"relative\">\r\n            <Doughnut data={data} options={options} />\r\n          </Box>\r\n          <Box display=\"flex\" justifyContent=\"center\" mt={2}>\r\n            {statuses.map(({ color, icon: Icon, title, value }) => (\r\n              <Box key={title} p={1} textAlign=\"center\">\r\n                <Icon color=\"action\" />\r\n                <Typography color=\"textPrimary\" variant=\"body1\">\r\n                  {title}\r\n                </Typography>\r\n                <Typography style={{ color }} variant=\"h2\">\r\n                  {value}%\r\n                </Typography>\r\n              </Box>\r\n            ))}\r\n          </Box>\r\n          <Box mt={2}>\r\n            <p className={classes.note}>\r\n              * Number of different Job Comparison initiated in last 30 days\r\n            </p>\r\n          </Box>\r\n        </CardContent>\r\n      </Paper>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default JobStatistics;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Chip,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TableSortLabel,\r\n  Button,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport axios from \"axios\";\r\nimport { inputAPI } from \"src/components/APIBase/BaseURL\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n  formControl: {\r\n    margin: 8,\r\n    marginTop: 16,\r\n    marginBottom: 0,\r\n    minWidth: 350,\r\n  },\r\n}));\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  var compA =\r\n    typeof a[orderBy] === \"string\"\r\n      ? a[orderBy].toLowerCase().trim()\r\n      : a[orderBy];\r\n  var compB =\r\n    typeof b[orderBy] === \"string\"\r\n      ? b[orderBy].toLowerCase().trim()\r\n      : b[orderBy];\r\n  if (compB < compA) {\r\n    return -1;\r\n  }\r\n  if (compB > compA) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: \"date_time\", numeric: false, label: \"Initiated Date-Time\" },\r\n  { id: \"task_name\", numeric: false, label: \"Task Name\" },\r\n  { id: \"job\", numeric: false, label: \"Job\" },\r\n  { id: \"job_id\", numeric: false, label: \"ID\" },\r\n  { id: \"start_time\", numeric: false, label: \"Start Date\" },\r\n  { id: \"start_end\", numeric: false, label: \"End Date\" },\r\n  { id: \"client\", numeric: false, label: \"Client\" },\r\n  { id: \"dbname1\", numeric: false, label: \"Version 1\" },\r\n  { id: \"dbname2\", numeric: false, label: \"Version 2\" },\r\n  { id: \"org\", numeric: false, label: \"Org\" },\r\n  { id: \"status1\", numeric: false, label: \"Version 1 Status\" },\r\n  { id: \"status2\", numeric: false, label: \"Version 2 Status\" },\r\n  { id: \"results\", numeric: false, label: \"Comparison Status\" },\r\n  { id: \"analyze\", numeric: false, label: \"\" },\r\n  { id: \"again\", numeric: false, label: \"\" },\r\n  { id: \"delete\", numeric: false, label: \"\" },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, order, orderBy, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            style={{ fontWeight: 600, color: \"#000000\" }}\r\n            align={headCell.numeric ? \"right\" : \"left\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n};\r\n\r\nconst MyComparisonTable = ({ userInfo, result, loading }) => {\r\n  const classes = useStyles();\r\n\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"comparisonRequestBy\");\r\n\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n\r\n  const [dense, setDense] = useState(false);\r\n\r\n  const [list, setlist] = useState([]);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const refreshPage = () => {\r\n    window.location.reload(true);\r\n  };\r\n\r\n  const remove = async (id) => {\r\n    // Delete this Job ID from Results, API and Table, after getting Results and required status.\r\n    await axios({\r\n      method: \"DELETE\",\r\n      url: inputAPI + id.toString(),\r\n    })\r\n      .then(() => {\r\n        console.log(\"Job \" + id.toString() + \" Deleted\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Job \" + id.toString() + \"was not deleted\", err);\r\n      });\r\n  };\r\n\r\n  const runAgain = async (request) => {\r\n    // POST Request to Send Input Parameter to Server Side and Database and then using these Input Parameters to run Job\r\n    // and Generate Comparison Ouput and then save it to Output Table Client Specific.\r\n\r\n    let url = inputAPI;\r\n    let date = new Date().toLocaleString();\r\n\r\n    // Convert Month to Type MM\r\n\r\n    let month_temp = date.split(\"/\")[0];\r\n    let month;\r\n\r\n    if (month_temp.length === 1) {\r\n      month = \"0\" + month_temp;\r\n    } else {\r\n      month = month_temp;\r\n    }\r\n\r\n    // Convert Date to Type dd\r\n\r\n    let d_temp = date.split(\"/\")[1];\r\n    let d;\r\n\r\n    if (d_temp.length === 1) {\r\n      d = \"0\" + d_temp;\r\n    } else {\r\n      d = d_temp;\r\n    }\r\n\r\n    let year_time = date.split(\"/\")[2];\r\n\r\n    // Make new date string in MM/dd/yyyy format with Time.\r\n\r\n    let formatted_date = month + \"/\" + d + \"/\" + year_time;\r\n\r\n    await axios({\r\n      method: \"POST\",\r\n      url: url,\r\n      data: {\r\n        User_ID: request.user_ID,\r\n        User_Name: request.user_Name,\r\n        User_Email: request.user_Email,\r\n        Client: request.client,\r\n        DBName_1: request.dbName_1,\r\n        DBName_2: request.dbName_2,\r\n        ControlDB_1: request.controlDB_1,\r\n        ControlDB_2: request.controlDB_2,\r\n        ControlDBServer_1: request.controlDBServer_1,\r\n        ControlDBServer_2: request.controlDBServer_2,\r\n        ControlDBServer_Server1: request.controlDBServer_Server1,\r\n        ControlDBServer_Server2: request.controlDBServer_Server2,\r\n        Task_Name: request.task_Name,\r\n        ForceCompareOnly: request.forceCompareOnly,\r\n        RunTask_1: request.runTask_1,\r\n        RunTask_2: request.runTask_2,\r\n        Start_Time: request.start_Time,\r\n        End_Time: request.end_Time,\r\n        Date_Relative_To_Today: request.date_Relative_To_Today,\r\n        Org: request.org,\r\n        Policy: request.policy,\r\n        Pay_Group_Calendar_Id: request.pay_Group_Calendar_Id,\r\n        Export_Mode: request.export_Mode,\r\n        Mock_Transmit: request.mock_Transmit,\r\n        Export_File_Name: request.export_File_Name,\r\n        Job: request.job,\r\n        Date: formatted_date,\r\n        LogId1: \"\",\r\n        Status1: \"\",\r\n        LogId2: \"\",\r\n        Status2: \"\",\r\n        Results: \"Comparison Not Started\",\r\n        Compared: 0,\r\n        Analyzed: 0,\r\n        Version1_Path: \"\",\r\n        Version2_Path: \"\",\r\n        Analyze_Path: \"\",\r\n      },\r\n    })\r\n      .then(() => {\r\n        console.log(\r\n          request.job +\r\n            \"-Input POST Request is Succesfull and Input is added to Input Table\"\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error in \" + request.job + \" POST Request\", err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (result.length > 0) {\r\n      for (let i = 0; i < result.length; i++) {\r\n        setlist(\r\n          result.filter((item) => item.user_ID === userInfo.samAccountName)\r\n        );\r\n      }\r\n    } else {\r\n      setlist([]);\r\n    }\r\n  }, [userInfo.samAccountName, result]);\r\n\r\n  return (\r\n    <Card>\r\n      <Typography\r\n        variant=\"h2\"\r\n        align=\"center\"\r\n        color=\"primary\"\r\n        style={{ margin: \"2rem\" }}\r\n      >\r\n        My Comparison Results\r\n      </Typography>\r\n      <Divider style={{ marginTop: 16, marginBottom: 16 }} />\r\n      <Paper className={classes.paper}>\r\n        <CardContent style={{ paddingBottom: 16 }}>\r\n          <TableContainer>\r\n            <Table\r\n              className={classes.table}\r\n              aria-labelledby=\"tableTitle\"\r\n              aria-label=\"enhanced table\"\r\n            >\r\n              <EnhancedTableHead\r\n                classes={classes}\r\n                order={order}\r\n                orderBy={orderBy}\r\n                onRequestSort={handleRequestSort}\r\n              />\r\n\r\n              {loading ? (\r\n                <TableBody>\r\n                  <TableRow align=\"right\">\r\n                    <TableCell colSpan={16}>\r\n                      <Loader\r\n                        type=\"ThreeDots\"\r\n                        color=\"#000000\"\r\n                        height={50}\r\n                        width={50}\r\n                        //timeout={10000}\r\n                        style={{ marginLeft: \"50%\" }}\r\n                      />\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableBody>\r\n              ) : (\r\n                <TableBody>\r\n                  {list.length === 0 ? (\r\n                    <TableRow>\r\n                      <TableCell colSpan={16}>No Comparison Found</TableCell>\r\n                    </TableRow>\r\n                  ) : (\r\n                    stableSort(list, getComparator(order, orderBy))\r\n                      .slice(\r\n                        page * rowsPerPage,\r\n                        page * rowsPerPage + rowsPerPage\r\n                      )\r\n                      .map((request) => {\r\n                        let label1;\r\n                        let color1;\r\n\r\n                        if (request.forceCompareOnly === true) {\r\n                          label1 = \"Force Compare Enabled\";\r\n                          color1 = \"#0000FF\";\r\n                        } else if (request.status1 === \"\") {\r\n                          label1 = \"Not Started\";\r\n                          color1 = \"#D6D5CB\";\r\n                        } else if (request.status1 === \"JobQueued\") {\r\n                          label1 = \"Queued\";\r\n                          color1 = \"#eec300\";\r\n                        } else if (request.status1 === \"JobQueueFailed\") {\r\n                          label1 = \"Queued Failed\";\r\n                          color1 = \"#ffcccb\";\r\n                        } else if (request.status1 === \"JobInProgress\") {\r\n                          label1 = \"In Progess\";\r\n                          color1 = \"#90EE90\";\r\n                        } else if (request.status1 === \"JobCompleted\") {\r\n                          label1 = \"Completed\";\r\n                          color1 = \"#00FF00\";\r\n                        } else if (request.status1 === \"JobFailed\") {\r\n                          label1 = \"Failed\";\r\n                          color1 = \"#FF0000\";\r\n                        }\r\n\r\n                        let label2;\r\n                        let color2;\r\n\r\n                        if (request.forceCompareOnly === true) {\r\n                          label2 = \"Force Compare Enabled\";\r\n                          color2 = \"#0000FF\";\r\n                        } else if (request.status2 === \"\") {\r\n                          label2 = \"Not Started\";\r\n                          color2 = \"#D6D5CB\";\r\n                        } else if (request.status2 === \"JobQueued\") {\r\n                          label2 = \"Queued\";\r\n                          color2 = \"#eec300\";\r\n                        } else if (request.status2 === \"JobQueueFailed\") {\r\n                          label1 = \"Queued Failed\";\r\n                          color1 = \"#ffcccb\";\r\n                        } else if (request.status2 === \"JobInProgress\") {\r\n                          label2 = \"In Progess\";\r\n                          color2 = \"#90EE90\";\r\n                        } else if (request.status2 === \"JobCompleted\") {\r\n                          label2 = \"Completed\";\r\n                          color2 = \"#00FF00\";\r\n                        } else if (request.status2 === \"JobFailed\") {\r\n                          label2 = \"Failed\";\r\n                          color2 = \"#FF0000\";\r\n                        }\r\n\r\n                        let labelcomparison;\r\n                        let colorcomparison;\r\n\r\n                        if (request.results === \"WARNING\") {\r\n                          labelcomparison = \"With Difference\";\r\n                          colorcomparison = \"#FF0000\";\r\n                        } else if (request.results === \"SUCCESS\") {\r\n                          labelcomparison = \"No Difference\";\r\n                          colorcomparison = \"#00FF00\";\r\n                        } else if (\r\n                          request.status1 === \"JobCompleted\" &&\r\n                          request.status2 === \"JobCompleted\" &&\r\n                          request.results === \"\"\r\n                        ) {\r\n                          labelcomparison = \"Running Comparison\";\r\n                          colorcomparison = \"#eec300\";\r\n                        } else if (\r\n                          (request.compared =\r\n                            1 && request.forceCompareOnly === true)\r\n                        ) {\r\n                          labelcomparison = \"Running Comparison\";\r\n                          colorcomparison = \"#eec300\";\r\n                        } else if (\r\n                          request.results === \"No Results-Job Failed\" ||\r\n                          request.results === \"No Results-Queue Failed\"\r\n                        ) {\r\n                          labelcomparison =\r\n                            \"Can't Compare - Atleast 1 Version Failed\";\r\n                          colorcomparison = \"#ffcccb\";\r\n                        } else if (request.results === \"MANUAL COMPARISON\") {\r\n                          labelcomparison = \"Manual Comparison\";\r\n                          colorcomparison = \"#90EE90\";\r\n                        } else {\r\n                          labelcomparison = \"No Results\";\r\n                          colorcomparison = \"#D6D5CB\";\r\n                        }\r\n                        let joblabel;\r\n                        let jobcolor;\r\n\r\n                        if (request.job === \"PSR\") {\r\n                          joblabel = \"PSR\";\r\n                          jobcolor = \"#964B00\";\r\n                        } else if (request.job === \"BRR\") {\r\n                          joblabel = \"BRR\";\r\n                          jobcolor = \"#4B0082\";\r\n                        } else if (request.job === \"SCR\") {\r\n                          joblabel = \"SCR\";\r\n                          jobcolor = \"#FFA500\";\r\n                        } else if (request.job === \"Export\") {\r\n                          joblabel = \"Export\";\r\n                          jobcolor = \"#0000FF\";\r\n                        } else if (request.job === \"JobStepRecalc\") {\r\n                          joblabel = \"JSR\";\r\n                          jobcolor = \"#00FF00\";\r\n                        } else if (request.job === \"AE_Sample\") {\r\n                          joblabel = \"AE\";\r\n                          jobcolor = \"#8F00FF\";\r\n                        }\r\n\r\n                        let start_dt;\r\n\r\n                        if (request.start_Time === \"\") {\r\n                          start_dt = \" N.A. \";\r\n                        } else {\r\n                          start_dt = request.start_Time.split(\"T\")[0];\r\n                        }\r\n\r\n                        let end_dt;\r\n\r\n                        if (request.end_Time === \"\") {\r\n                          end_dt = \" N.A. \";\r\n                        } else {\r\n                          end_dt = request.end_Time.split(\"T\")[0];\r\n                        }\r\n\r\n                        let org = request.org;\r\n\r\n                        if (request.org === \"\") {\r\n                          org = \"Whole Organization\";\r\n                        }\r\n\r\n                        const resultRow = (\r\n                          <>\r\n                            <TableCell style={{ width: \"14%\" }}>\r\n                              {request.date}\r\n                            </TableCell>\r\n                            <TableCell style={{ width: \"10%\" }}>\r\n                              {request.task_Name}\r\n                            </TableCell>\r\n                            <TableCell style={{ width: \"10%\" }} align=\"center\">\r\n                              <Chip\r\n                                style={{\r\n                                  width: \"100% \",\r\n                                  backgroundColor: jobcolor,\r\n                                }}\r\n                                color=\"primary\"\r\n                                label={joblabel}\r\n                                size=\"small\"\r\n                              />\r\n                            </TableCell>\r\n                            <TableCell style={{ width: \"4%\" }}>\r\n                              {request.id}\r\n                            </TableCell>\r\n                            <TableCell style={{ width: \"23%\" }}>\r\n                              {start_dt}\r\n                            </TableCell>\r\n                            <TableCell style={{ width: \"23%\" }}>\r\n                              {end_dt}\r\n                            </TableCell>\r\n                            <TableCell style={{ width: \"10%\" }}>\r\n                              {request.client}\r\n                            </TableCell>\r\n                            <TableCell style={{ width: \"5%\" }}>\r\n                              {request.dbName_1}\r\n                            </TableCell>\r\n                            <TableCell style={{ width: \"5%\" }}>\r\n                              {request.dbName_2}\r\n                            </TableCell>\r\n                            <TableCell style={{ width: \"10%\" }}>\r\n                              {org}\r\n                            </TableCell>\r\n                            <TableCell style={{ width: \"15%\" }} align=\"center\">\r\n                              <Chip\r\n                                style={{\r\n                                  width: \"100% \",\r\n                                  backgroundColor: color1,\r\n                                }}\r\n                                color=\"primary\"\r\n                                label={label1}\r\n                                size=\"small\"\r\n                              />\r\n                            </TableCell>\r\n                            <TableCell style={{ width: \"15%\" }} align=\"center\">\r\n                              <Chip\r\n                                style={{\r\n                                  width: \"100% \",\r\n                                  backgroundColor: color2,\r\n                                }}\r\n                                color=\"primary\"\r\n                                label={label2}\r\n                                size=\"small\"\r\n                              />\r\n                            </TableCell>\r\n                            <TableCell style={{ width: \"15%\" }} align=\"center\">\r\n                              <Chip\r\n                                style={{\r\n                                  width: \"100% \",\r\n                                  backgroundColor: colorcomparison,\r\n                                }}\r\n                                color=\"primary\"\r\n                                label={labelcomparison}\r\n                                size=\"small\"\r\n                              />\r\n                            </TableCell>\r\n                            {request.analyzed !== 0 ? (\r\n                              <TableCell style={{ width: \"10%\" }}>\r\n                                <Link to={`/analyze/${request.id}`}>\r\n                                  <Button\r\n                                    disabled={request.analyzed === 0}\r\n                                    id=\"analyze\"\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    // onClick={() => {}}\r\n                                  >\r\n                                    Analyze\r\n                                  </Button>\r\n                                </Link>\r\n                              </TableCell>\r\n                            ) : (\r\n                              <TableCell style={{ width: \"10%\" }}>\r\n                                <Button\r\n                                  disabled={request.analyzed === 0}\r\n                                  id=\"analyze\"\r\n                                  variant=\"contained\"\r\n                                  color=\"primary\"\r\n                                  // onClick={() => {}}\r\n                                >\r\n                                  Analyze\r\n                                </Button>\r\n                              </TableCell>\r\n                            )}\r\n                            <TableCell style={{ width: \"10%\" }}>\r\n                              <Button\r\n                                disabled={\r\n                                  request.results !== \"No Results-Job Failed\" &&\r\n                                  request.results !==\r\n                                    \"No Results-Queue Failed\" &&\r\n                                  request.analyzed !== 2 &&\r\n                                  request.results !== \"MANUAL COMPARISON\"\r\n                                }\r\n                                id=\"again\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={() => {\r\n                                  if (request.analyzed === 2) {\r\n                                    runAgain(request);\r\n                                  } else {\r\n                                    runAgain(request);\r\n                                    remove(request.id);\r\n                                  }\r\n\r\n                                  refreshPage();\r\n                                }}\r\n                              >\r\n                                RERUN\r\n                              </Button>\r\n                            </TableCell>\r\n                            <TableCell style={{ width: \"10%\" }}>\r\n                              <Button\r\n                                disabled={\r\n                                  request.results !== \"No Results-Job Failed\" &&\r\n                                  request.results !==\r\n                                    \"No Results-Queue Failed\" &&\r\n                                  request.analyzed !== 2 &&\r\n                                  request.results !== \"MANUAL COMPARISON\"\r\n                                }\r\n                                id=\"delete\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={() => {\r\n                                  remove(request.id);\r\n                                  refreshPage();\r\n                                }}\r\n                              >\r\n                                DELETE\r\n                              </Button>\r\n                            </TableCell>\r\n                          </>\r\n                        );\r\n\r\n                        return (\r\n                          <TableRow hover tabIndex={-1} key={request.index}>\r\n                            {resultRow}\r\n                          </TableRow>\r\n                        );\r\n                      })\r\n                  )}\r\n                </TableBody>\r\n              )}\r\n            </Table>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n            component=\"div\"\r\n            count={list.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </CardContent>\r\n        <FormControlLabel\r\n          style={{\r\n            float: \"left\",\r\n            marginLeft: 4,\r\n            marginBottom: 16,\r\n            marginTop: 16,\r\n          }}\r\n          control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n          label=\"Dense padding\"\r\n        />\r\n      </Paper>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default MyComparisonTable;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Container, Grid, makeStyles } from \"@material-ui/core\";\r\nimport Page from \"src/components/Page\";\r\nimport axios from \"axios\";\r\nimport { inputAPI } from \"src/components/APIBase/BaseURL\";\r\nimport Statistics from \"./components/Statistics\";\r\nimport CompletedComparison from \"./components/CompletedComparison\";\r\nimport JobStatistics from \"./components/JobStatistics\";\r\nimport MyComparisonTable from \"./components/MyComparisonTable\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.white,\r\n    marginBottom: 35,\r\n    paddingBottom: theme.spacing(100),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst Home = ({ userInfo }) => {\r\n  const classes = useStyles();\r\n\r\n  const [result, setresult] = useState([]);\r\n\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    let resultApi = async () => {\r\n      let url = inputAPI;\r\n      await axios({\r\n        method: \"GET\",\r\n        url,\r\n      })\r\n        .then(function (response) {\r\n          setresult(response.data);\r\n          setLoading(false);\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    };\r\n    resultApi();\r\n  }, []);\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Compare Pay Tool\">\r\n      <Container maxWidth={false}>\r\n        <Grid container spacing={3}>\r\n          <Grid item lg={12} md={12} xl={12} xs={12}>\r\n            <MyComparisonTable\r\n              userInfo={userInfo}\r\n              result={result}\r\n              loading={loading}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={6} md={6} xl={6} xs={6}>\r\n            <Statistics result={result} />\r\n          </Grid>\r\n          <Grid item lg={6} md={6} xl={6} xs={6}>\r\n            <JobStatistics result={result} />\r\n          </Grid>\r\n          <Grid item lg={12} md={12} xl={12} xs={12}>\r\n            <CompletedComparison result={result} />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","export const dates = {\r\n  convert: function (d) {\r\n    // Converts the date in d to a date-object. The input can be:\r\n    //   a date object: returned without modification\r\n    //  an array      : Interpreted as [year,month,day]. NOTE: month is 0-11.\r\n    //   a number     : Interpreted as number of milliseconds\r\n    //                  since 1 Jan 1970 (a timestamp)\r\n    //   a string     : Any format supported by the javascript engine, like\r\n    //                  'YYYY/MM/DD', 'MM/DD/YYYY', 'Jan 31 2009' etc.\r\n    //  an object     : Interpreted as an object with year, month and date\r\n    //                  attributes.  **NOTE** month is 0-11.\r\n    return d.constructor === Date\r\n      ? d\r\n      : d.constructor === Array\r\n      ? new Date(d[0], d[1], d[2])\r\n      : d.constructor === Number\r\n      ? new Date(d)\r\n      : d.constructor === String\r\n      ? new Date(d)\r\n      : typeof d === \"object\"\r\n      ? new Date(d.year, d.month, d.date)\r\n      : NaN;\r\n  },\r\n  convertToUTCDate: function (d) {\r\n    // the inputed date will follow a string from the lastRestore date API call as month/day/year\r\n    if (d.constructor === String) {\r\n      let tmp = d.split(\"/\");\r\n      // month will be index 0, day, index 1, year index 2\r\n      return `${tmp[2]}-${tmp[0]}-${tmp[1]}`;\r\n    } else {\r\n      return \"NA\";\r\n    }\r\n  },\r\n  convertToDateString: function (d) {\r\n    if (d.constructor === String) {\r\n      return this.convert(d).toDateString();\r\n    } else {\r\n      return \"NA\";\r\n    }\r\n  },\r\n  format: function (dateValue) {\r\n    var date = new Date(dateValue);\r\n    var hours = date.getHours();\r\n    var minutes = date.getMinutes();\r\n    var ampm = hours >= 12 ? \"PM\" : \"AM\";\r\n    hours = hours % 12;\r\n    hours = hours ? hours : 12; // the hour '0' should be '12'\r\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n    var strTime =\r\n      date.toDateString() + \" \" + hours + \":\" + minutes + \" \" + ampm;\r\n    return strTime;\r\n  },\r\n  compare: function (a, b) {\r\n    // Compare two dates (could be of any type supported by the convert\r\n    // function above) and returns:\r\n    //  -1 : if a < b\r\n    //   0 : if a = b\r\n    //   1 : if a > b\r\n    // NaN : if a or b is an illegal date\r\n    // NOTE: The code inside isFinite does an assignment (=).\r\n    return isFinite((a = this.convert(a).valueOf())) &&\r\n      isFinite((b = this.convert(b).valueOf()))\r\n      ? (a > b) - (a < b)\r\n      : NaN;\r\n  },\r\n  pad: function (num, size) {\r\n    var s = num + \"\";\r\n    while (s.length < size) s = \"0\" + s;\r\n    return s;\r\n  },\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Card,\r\n  Container,\r\n  Grid,\r\n  CardContent,\r\n  Chip,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n  Typography,\r\n  TableSortLabel,\r\n  FormControl,\r\n  Button,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { dates } from \"src/util/DateTime/dates\";\r\nimport { inputAPI } from \"src/components/APIBase/BaseURL\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n  formControl: {\r\n    margin: 8,\r\n    marginTop: 16,\r\n    marginBottom: 0,\r\n    minWidth: 350,\r\n  },\r\n}));\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  var compA =\r\n    typeof a[orderBy] === \"string\"\r\n      ? a[orderBy].toLowerCase().trim()\r\n      : a[orderBy];\r\n  var compB =\r\n    typeof b[orderBy] === \"string\"\r\n      ? b[orderBy].toLowerCase().trim()\r\n      : b[orderBy];\r\n  if (compB < compA) {\r\n    return -1;\r\n  }\r\n  if (compB > compA) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: \"user_name\", numeric: false, label: \"User\" },\r\n  { id: \"date_time\", numeric: false, label: \"Initiated Date-Time\" },\r\n  { id: \"task_name\", numeric: false, label: \"Task Name\" },\r\n  { id: \"job\", numeric: false, label: \"Job\" },\r\n  { id: \"job_id\", numeric: false, label: \"ID\" },\r\n  { id: \"start_time\", numeric: false, label: \"Start Date\" },\r\n  { id: \"start_end\", numeric: false, label: \"End Date\" },\r\n  { id: \"client\", numeric: false, label: \"Client\" },\r\n  { id: \"dbname1\", numeric: false, label: \"Version 1\" },\r\n  { id: \"dbname2\", numeric: false, label: \"Version 2\" },\r\n  { id: \"org\", numeric: false, label: \"Org\" },\r\n  { id: \"status1\", numeric: false, label: \"Version 1 Status\" },\r\n  { id: \"status2\", numeric: false, label: \"Version 2 Status\" },\r\n  { id: \"results\", numeric: false, label: \"Comparison Status\" },\r\n  { id: \"analyze\", numeric: false, label: \"\" },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, order, orderBy, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            style={{ fontWeight: 600, color: \"#000000\" }}\r\n            align={headCell.numeric ? \"right\" : \"left\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n};\r\n\r\nconst ResultTable = ({ userInfo }) => {\r\n  const classes = useStyles();\r\n\r\n  const [result, setresult] = useState([]);\r\n  const [list, setlist] = useState([]);\r\n\r\n  const [searchParam, setSearchParam] = useState(\"All Comparison Results\");\r\n\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"restoreRequestBy\");\r\n\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const [dense, setDense] = useState(false);\r\n\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [filter, setFilter] = useState(\"all\");\r\n\r\n  const [jobfilter, setjobFilter] = useState(\"all\");\r\n\r\n  const day = new Date();\r\n\r\n  const prevDay = new Date(day);\r\n  prevDay.setDate(prevDay.getDate() - 1);\r\n\r\n  const today = `${dates.pad(day.getMonth() + 1, 2)}/${dates.pad(\r\n    day.getDate(),\r\n    2\r\n  )}/${day.getFullYear()}`;\r\n\r\n  const yesterday = `${dates.pad(prevDay.getMonth() + 1, 2)}/${dates.pad(\r\n    prevDay.getDate(),\r\n    2\r\n  )}/${prevDay.getFullYear()}`;\r\n\r\n  const [selectedDate, setSelectedDate] = useState(day);\r\n\r\n  function searchFor(toSearch) {\r\n    var results = [];\r\n\r\n    toSearch = trimString(toSearch.toLowerCase());\r\n\r\n    for (var i = 0; i < result.length; i++) {\r\n      if (\r\n        result[i].user_Name?.toLowerCase().includes(toSearch) ||\r\n        result[i].task_Name?.toLowerCase().includes(toSearch) ||\r\n        result[i].id?.toString().includes(toSearch) ||\r\n        result[i].client?.toLowerCase().includes(toSearch) ||\r\n        result[i].job?.toLowerCase().includes(toSearch) ||\r\n        result[i].dbName_1?.toLowerCase().includes(toSearch) ||\r\n        result[i].dbName_2?.toLowerCase().includes(toSearch) ||\r\n        result[i].org?.toLowerCase().includes(toSearch)\r\n      ) {\r\n        results.push(result[i]);\r\n      }\r\n    }\r\n    return results;\r\n  }\r\n\r\n  function trimString(s) {\r\n    var l = 0,\r\n      r = s.length - 1;\r\n    while (l < s.length && s[l] === \" \") l++;\r\n    while (r > l && s[r] === \" \") r -= 1;\r\n    return s.substring(l, r + 1);\r\n  }\r\n\r\n  const handleSearchChange = (event) => {\r\n    if (event.target.value === \"\") {\r\n      setlist(result);\r\n    } else {\r\n      setlist(searchFor(event.target.value));\r\n    }\r\n    setPage(0);\r\n  };\r\n\r\n  const handleDateChange = (date) => {\r\n    setLoading(true);\r\n    setSelectedDate(date);\r\n    setSearchParam(\"Comparison Results - \" + date.toDateString());\r\n\r\n    var d = new Date(date);\r\n    var da = d.toDateString();\r\n\r\n    // turn the date into the string format MM/dd/yyyy\r\n    if (dates.compare(da, prevDay.toDateString()) === 0) {\r\n      setFilter(\"yesterday\");\r\n      setSearchParam(\"Comparison Results - Yesterday\");\r\n    } else if (dates.compare(da, day.toDateString()) === 0) {\r\n      setFilter(\"today\");\r\n      setSearchParam(\"Comparison Results - Today\");\r\n    } else {\r\n      setFilter(\"\");\r\n    }\r\n\r\n    // document.getElementById(\"requestSearch\").value = \"\";\r\n\r\n    var date_filter = `${dates.pad(d.getMonth() + 1, 2)}/${dates.pad(\r\n      d.getDate(),\r\n      2\r\n    )}/${d.getFullYear()}`;\r\n\r\n    setlist([]);\r\n\r\n    for (let i = 0; i < result.length; i++) {\r\n      setlist(result.filter((item) => item.date.split(\",\")[0] === date_filter));\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleSelectChange = (event) => {\r\n    setLoading(true);\r\n    setFilter(event.target.value);\r\n\r\n    switch (event.target.value) {\r\n      case \"all\":\r\n        setSearchParam(\"All Comparison Results\");\r\n        setSelectedDate(day);\r\n\r\n        setlist([]);\r\n\r\n        setlist(result);\r\n\r\n        break;\r\n\r\n      case \"my\":\r\n        setSearchParam(\"My Comparison Results\");\r\n        setSelectedDate(day);\r\n\r\n        setlist([]);\r\n        for (let i = 0; i < result.length; i++) {\r\n          setlist(\r\n            result.filter((item) => item.user_ID === userInfo.samAccountName)\r\n          );\r\n        }\r\n\r\n        break;\r\n\r\n      case \"today\":\r\n        setSearchParam(\"Comparison Results - Today\");\r\n        setSelectedDate(day);\r\n\r\n        setlist([]);\r\n        for (let i = 0; i < result.length; i++) {\r\n          setlist(result.filter((item) => item.date.split(\",\")[0] === today));\r\n        }\r\n\r\n        break;\r\n      case \"incomplete\":\r\n        setSearchParam(\"Comparison Results - Incomplete\");\r\n        setSelectedDate(day);\r\n\r\n        setlist([]);\r\n        for (let i = 0; i < result.length; i++) {\r\n          setlist(\r\n            result.filter(\r\n              (item) =>\r\n                item.results === \"Comparison Not Started\" ||\r\n                item.results === \"Comparison has started\"\r\n            )\r\n          );\r\n        }\r\n\r\n        break;\r\n      case \"failed\":\r\n        setSearchParam(\"Comparison Results - Failed\");\r\n        setSelectedDate(day);\r\n\r\n        setlist([]);\r\n        for (let i = 0; i < result.length; i++) {\r\n          setlist(\r\n            result.filter(\r\n              (item) =>\r\n                item.results === \"No Results-Job Failed\" ||\r\n                item.results === \"No Results-Queue Failed\"\r\n            )\r\n          );\r\n        }\r\n\r\n        break;\r\n      case \"complete\":\r\n        setSearchParam(\"Comparison Results - Completed\");\r\n        setSelectedDate(day);\r\n\r\n        setlist([]);\r\n        for (let i = 0; i < result.length; i++) {\r\n          setlist(result.filter((item) => item.compared === 2));\r\n        }\r\n\r\n        break;\r\n      case \"yesterday\":\r\n        setSearchParam(\"Comparison Results - Yesterday\");\r\n        setSelectedDate(prevDay);\r\n\r\n        setlist([]);\r\n        for (let i = 0; i < result.length; i++) {\r\n          setlist(\r\n            result.filter((item) => item.date.split(\",\")[0] === yesterday)\r\n          );\r\n        }\r\n\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    setLoading(false);\r\n\r\n    // document.getElementById(\"requestSearch\").value = \"\";\r\n  };\r\n\r\n  const handleJobSelectChange = (event) => {\r\n    setLoading(true);\r\n    setFilter(event.target.value);\r\n\r\n    switch (event.target.value) {\r\n      case \"all\":\r\n        setjobFilter(\"all\");\r\n\r\n        setlist([]);\r\n\r\n        setlist(result);\r\n\r\n        break;\r\n\r\n      case \"PSR\":\r\n        setjobFilter(\"PSR\");\r\n        setlist([]);\r\n\r\n        for (let i = 0; i < result.length; i++) {\r\n          setlist(result.filter((item) => item.job === \"PSR\"));\r\n        }\r\n\r\n        break;\r\n\r\n      case \"BRR\":\r\n        setjobFilter(\"BRR\");\r\n        setlist([]);\r\n\r\n        for (let i = 0; i < result.length; i++) {\r\n          setlist(result.filter((item) => item.job === \"BRR\"));\r\n        }\r\n\r\n        break;\r\n      case \"JobStepRecalc\":\r\n        setjobFilter(\"JobStepRecalc\");\r\n        setlist([]);\r\n\r\n        for (let i = 0; i < result.length; i++) {\r\n          setlist(result.filter((item) => item.job === \"JobStepRecalc\"));\r\n        }\r\n\r\n        break;\r\n      case \"SCR\":\r\n        setjobFilter(\"SCR\");\r\n        setlist([]);\r\n\r\n        for (let i = 0; i < result.length; i++) {\r\n          setlist(result.filter((item) => item.job === \"SCR\"));\r\n        }\r\n\r\n        break;\r\n      case \"AE_Sample\":\r\n        setjobFilter(\"AE_Sample\");\r\n        setlist([]);\r\n\r\n        for (let i = 0; i < result.length; i++) {\r\n          setlist(result.filter((item) => item.job === \"AE_Sample\"));\r\n        }\r\n\r\n        break;\r\n      case \"Export\":\r\n        setjobFilter(\"Export\");\r\n        setlist([]);\r\n\r\n        for (let i = 0; i < result.length; i++) {\r\n          setlist(result.filter((item) => item.job === \"Export\"));\r\n        }\r\n\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    setLoading(false);\r\n\r\n    // document.getElementById(\"requestSearch\").value = \"\";\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    let resultApi = async () => {\r\n      let url = inputAPI;\r\n      await axios({\r\n        method: \"GET\",\r\n        url,\r\n      })\r\n        .then(function (response) {\r\n          setresult(response.data);\r\n          setlist(response.data);\r\n          setLoading(false);\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    };\r\n    resultApi();\r\n  }, []);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <Typography\r\n        variant=\"h2\"\r\n        align=\"center\"\r\n        color=\"primary\"\r\n        style={{ margin: \"2rem\" }}\r\n      >\r\n        {searchParam}\r\n      </Typography>\r\n      <Typography\r\n        variant=\"h3\"\r\n        align=\"center\"\r\n        color=\"primary\"\r\n        style={{ margin: \"2rem\" }}\r\n      >\r\n        *Use filter to quickly search for Comparison Results you are interested\r\n        in*\r\n      </Typography>\r\n      <Divider style={{ marginTop: 16, marginBottom: 16 }} />\r\n      <Paper className={classes.paper}>\r\n        <CardContent style={{ paddingBottom: 16 }}>\r\n          <Container maxWidth={false}>\r\n            <Grid container spacing={3}>\r\n              <Grid item lg={4} md={4} xl={4} xs={12}>\r\n                <FormControl style={{ float: \"left\" }}>\r\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <Grid container justify=\"space-around\">\r\n                      <KeyboardDatePicker\r\n                        disableToolbar\r\n                        variant=\"inline\"\r\n                        format=\"MM/dd/yyyy\"\r\n                        margin=\"normal\"\r\n                        id=\"comparisonDateFilter\"\r\n                        disabled={result.length === 0}\r\n                        disableFuture={true}\r\n                        label=\"Filter by Comparison Initiated Date\"\r\n                        value={selectedDate}\r\n                        onChange={handleDateChange}\r\n                        KeyboardButtonProps={{\r\n                          \"aria-label\": \"change date\",\r\n                        }}\r\n                        style={{ minWidth: 350 }}\r\n                      />\r\n                    </Grid>\r\n                  </MuiPickersUtilsProvider>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item lg={4} md={4} xl={4} xs={12}>\r\n                <FormControl\r\n                  style={{ float: \"center\" }}\r\n                  className={classes.formControl}\r\n                >\r\n                  <InputLabel id=\"jobFilterLabel\">Job Filter</InputLabel>\r\n                  <Select\r\n                    labelId=\"jobFilterLabel\"\r\n                    id=\"jobFilterSelect\"\r\n                    value={jobfilter}\r\n                    disabled={result.length === 0}\r\n                    onChange={handleJobSelectChange}\r\n                    label=\"Job Filter\"\r\n                  >\r\n                    <MenuItem disabled value=\"\">\r\n                      <em>--View--</em>\r\n                    </MenuItem>\r\n                    <MenuItem value=\"all\">All Jobs</MenuItem>\r\n                    <MenuItem value=\"PSR\">Pay Summary Recalc</MenuItem>\r\n                    <MenuItem value=\"BRR\">Base Rate Recalc</MenuItem>\r\n                    <MenuItem value=\"SCR\">Schedule Cost Recalc</MenuItem>\r\n                    <MenuItem value=\"JobStepRecalc\">Job Step Recalc</MenuItem>\r\n                    <MenuItem value=\"Export\">Pay Export</MenuItem>\r\n                    <MenuItem value=\"AE_Sample\">Award Entitlement</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item lg={4} md={4} xl={4} xs={12}>\r\n                <FormControl\r\n                  style={{ float: \"right\" }}\r\n                  className={classes.formControl}\r\n                >\r\n                  <InputLabel id=\"comparisonFilterLabel\">\r\n                    Comparison Filter\r\n                  </InputLabel>\r\n                  <Select\r\n                    labelId=\"comparisonFilterLabel\"\r\n                    id=\"comparisonFilterSelect\"\r\n                    value={filter}\r\n                    disabled={result.length === 0}\r\n                    onChange={handleSelectChange}\r\n                    label=\"Comparison Filter\"\r\n                  >\r\n                    <MenuItem disabled value=\"\">\r\n                      <em>--View--</em>\r\n                    </MenuItem>\r\n                    <MenuItem value=\"all\">All Comparisons</MenuItem>\r\n                    <MenuItem value=\"my\">My Comparisons</MenuItem>\r\n                    <MenuItem value=\"today\">\r\n                      Comparisons Initiated Today\r\n                    </MenuItem>\r\n                    <MenuItem value=\"yesterday\">\r\n                      Comparisons Initiated Yesterday\r\n                    </MenuItem>\r\n                    <MenuItem value=\"complete\">\r\n                      Comparison Results - Completed\r\n                    </MenuItem>\r\n                    <MenuItem value=\"incomplete\">\r\n                      Comparison Results - Incomplete\r\n                    </MenuItem>\r\n                    <MenuItem value=\"failed\">\r\n                      Comparison Results - Failed\r\n                    </MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n            </Grid>\r\n          </Container>\r\n          <Divider style={{ marginTop: 16, marginBottom: 16 }} />\r\n          <Container maxWidth={false}>\r\n            <Grid container spacing={3}>\r\n              <Grid item lg={12} md={12} xl={12} xs={12}>\r\n                <FormControl\r\n                  style={{ float: \"right\" }}\r\n                  className={classes.formControl}\r\n                >\r\n                  <TextField\r\n                    size=\"small\"\r\n                    onChange={handleSearchChange}\r\n                    disabled={result.length === 0}\r\n                    id=\"comparisonSearch\"\r\n                    label=\"Search\"\r\n                    variant=\"outlined\"\r\n                    // disabled={true}\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n            </Grid>\r\n          </Container>\r\n          <TableContainer>\r\n            <Table\r\n              className={classes.table}\r\n              aria-labelledby=\"tableTitle\"\r\n              aria-label=\"enhanced table\"\r\n            >\r\n              <EnhancedTableHead\r\n                classes={classes}\r\n                order={order}\r\n                orderBy={orderBy}\r\n                onRequestSort={handleRequestSort}\r\n              />\r\n\r\n              {loading ? (\r\n                <TableBody>\r\n                  <TableRow align=\"right\">\r\n                    <TableCell colSpan={16}>\r\n                      <Loader\r\n                        type=\"ThreeDots\"\r\n                        color=\"#000000\"\r\n                        height={50}\r\n                        width={50}\r\n                        //timeout={10000}\r\n                        style={{ marginLeft: \"50%\" }}\r\n                      />\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableBody>\r\n              ) : (\r\n                <TableBody>\r\n                  {list.length === 0 ? (\r\n                    <TableRow>\r\n                      <TableCell colSpan={16}>No Comparison Found</TableCell>\r\n                    </TableRow>\r\n                  ) : (\r\n                    stableSort(list, getComparator(order, orderBy))\r\n                      .slice(\r\n                        page * rowsPerPage,\r\n                        page * rowsPerPage + rowsPerPage\r\n                      )\r\n                      .map((request) => {\r\n                        let label1;\r\n                        let color1;\r\n\r\n                        if (request.forceCompareOnly === true) {\r\n                          label1 = \"Force Compare Enabled\";\r\n                          color1 = \"#0000FF\";\r\n                        } else if (request.status1 === \"\") {\r\n                          label1 = \"Not Started\";\r\n                          color1 = \"#D6D5CB\";\r\n                        } else if (request.status1 === \"JobQueued\") {\r\n                          label1 = \"Queued\";\r\n                          color1 = \"#eec300\";\r\n                        } else if (request.status1 === \"JobQueueFailed\") {\r\n                          label1 = \"Queued Failed\";\r\n                          color1 = \"#ffcccb\";\r\n                        } else if (request.status1 === \"JobInProgress\") {\r\n                          label1 = \"In Progess\";\r\n                          color1 = \"#90EE90\";\r\n                        } else if (request.status1 === \"JobCompleted\") {\r\n                          label1 = \"Completed\";\r\n                          color1 = \"#00FF00\";\r\n                        } else if (request.status1 === \"JobFailed\") {\r\n                          label1 = \"Failed\";\r\n                          color1 = \"#FF0000\";\r\n                        }\r\n\r\n                        let label2;\r\n                        let color2;\r\n\r\n                        if (request.forceCompareOnly === true) {\r\n                          label2 = \"Force Compare Enabled\";\r\n                          color2 = \"#0000FF\";\r\n                        } else if (request.status2 === \"\") {\r\n                          label2 = \"Not Started\";\r\n                          color2 = \"#D6D5CB\";\r\n                        } else if (request.status2 === \"JobQueued\") {\r\n                          label2 = \"Queued\";\r\n                          color2 = \"#eec300\";\r\n                        } else if (request.status2 === \"JobQueueFailed\") {\r\n                          label1 = \"Queued Failed\";\r\n                          color1 = \"#ffcccb\";\r\n                        } else if (request.status2 === \"JobInProgress\") {\r\n                          label2 = \"In Progess\";\r\n                          color2 = \"#90EE90\";\r\n                        } else if (request.status2 === \"JobCompleted\") {\r\n                          label2 = \"Completed\";\r\n                          color2 = \"#00FF00\";\r\n                        } else if (request.status2 === \"JobFailed\") {\r\n                          label2 = \"Failed\";\r\n                          color2 = \"#FF0000\";\r\n                        }\r\n\r\n                        let labelcomparison;\r\n                        let colorcomparison;\r\n\r\n                        if (request.results === \"WARNING\") {\r\n                          labelcomparison = \"With Difference\";\r\n                          colorcomparison = \"#FF0000\";\r\n                        } else if (request.results === \"SUCCESS\") {\r\n                          labelcomparison = \"No Difference\";\r\n                          colorcomparison = \"#00FF00\";\r\n                        } else if (\r\n                          request.status1 === \"JobCompleted\" &&\r\n                          request.status2 === \"JobCompleted\" &&\r\n                          request.results === \"\"\r\n                        ) {\r\n                          labelcomparison = \"Running Comparison\";\r\n                          colorcomparison = \"#eec300\";\r\n                        } else if (\r\n                          (request.compared =\r\n                            1 && request.forceCompareOnly === true)\r\n                        ) {\r\n                          labelcomparison = \"Running Comparison\";\r\n                          colorcomparison = \"#eec300\";\r\n                        } else if (\r\n                          request.results === \"No Results-Job Failed\" ||\r\n                          request.results === \"No Results-Queue Failed\"\r\n                        ) {\r\n                          labelcomparison =\r\n                            \"Can't Compare - Atleast 1 Version Failed\";\r\n                          colorcomparison = \"#ffcccb\";\r\n                        } else if (request.results === \"MANUAL COMPARISON\") {\r\n                          labelcomparison = \"Manual Comparison\";\r\n                          colorcomparison = \"#90EE90\";\r\n                        } else {\r\n                          labelcomparison = \"No Results\";\r\n                          colorcomparison = \"#D6D5CB\";\r\n                        }\r\n\r\n                        let joblabel;\r\n                        let jobcolor;\r\n\r\n                        if (request.job === \"PSR\") {\r\n                          joblabel = \"PSR\";\r\n                          jobcolor = \"#964B00\";\r\n                        } else if (request.job === \"BRR\") {\r\n                          joblabel = \"BRR\";\r\n                          jobcolor = \"#4B0082\";\r\n                        } else if (request.job === \"SCR\") {\r\n                          joblabel = \"SCR\";\r\n                          jobcolor = \"#FFA500\";\r\n                        } else if (request.job === \"Export\") {\r\n                          joblabel = \"Export\";\r\n                          jobcolor = \"#0000FF\";\r\n                        } else if (request.job === \"JobStepRecalc\") {\r\n                          joblabel = \"JSR\";\r\n                          jobcolor = \"#00FF00\";\r\n                        } else if (request.job === \"AE_Sample\") {\r\n                          joblabel = \"AE\";\r\n                          jobcolor = \"#8F00FF\";\r\n                        }\r\n\r\n                        let start_dt;\r\n\r\n                        if (request.start_Time === \"\") {\r\n                          start_dt = \" N.A. \";\r\n                        } else {\r\n                          start_dt = request.start_Time.split(\"T\")[0];\r\n                        }\r\n\r\n                        let end_dt;\r\n\r\n                        if (request.end_Time === \"\") {\r\n                          end_dt = \" N.A. \";\r\n                        } else {\r\n                          end_dt = request.end_Time.split(\"T\")[0];\r\n                        }\r\n\r\n                        let org = request.org;\r\n\r\n                        if (request.org === \"\") {\r\n                          org = \"Whole Organization\";\r\n                        }\r\n\r\n                        const resultRow = (\r\n                          <>\r\n                            <TableCell style={{ width: \"10%\" }}>\r\n                              {request.user_Name}\r\n                            </TableCell>\r\n                            <TableCell style={{ width: \"15%\" }}>\r\n                              {request.date}\r\n                            </TableCell>\r\n                            <TableCell style={{ width: \"10%\" }}>\r\n                              {request.task_Name}\r\n                            </TableCell>\r\n                            <TableCell style={{ width: \"15%\" }} align=\"center\">\r\n                              <Chip\r\n                                style={{\r\n                                  width: \"100% \",\r\n                                  backgroundColor: jobcolor,\r\n                                }}\r\n                                color=\"primary\"\r\n                                label={joblabel}\r\n                                size=\"small\"\r\n                              />\r\n                            </TableCell>\r\n                            <TableCell style={{ width: \"4%\" }}>\r\n                              {request.id}\r\n                            </TableCell>\r\n                            <TableCell style={{ width: \"23%\" }}>\r\n                              {start_dt}\r\n                            </TableCell>\r\n                            <TableCell style={{ width: \"23%\" }}>\r\n                              {end_dt}\r\n                            </TableCell>\r\n                            <TableCell style={{ width: \"10%\" }}>\r\n                              {request.client}\r\n                            </TableCell>\r\n                            <TableCell style={{ width: \"10%\" }}>\r\n                              {request.dbName_1}\r\n                            </TableCell>\r\n                            <TableCell style={{ width: \"10%\" }}>\r\n                              {request.dbName_2}\r\n                            </TableCell>\r\n                            <TableCell style={{ width: \"10%\" }}>\r\n                              {org}\r\n                            </TableCell>\r\n                            <TableCell style={{ width: \"15%\" }} align=\"center\">\r\n                              <Chip\r\n                                style={{\r\n                                  width: \"100% \",\r\n                                  backgroundColor: color1,\r\n                                }}\r\n                                color=\"primary\"\r\n                                label={label1}\r\n                                size=\"small\"\r\n                              />\r\n                            </TableCell>\r\n                            <TableCell style={{ width: \"15%\" }} align=\"center\">\r\n                              <Chip\r\n                                style={{\r\n                                  width: \"100% \",\r\n                                  backgroundColor: color2,\r\n                                }}\r\n                                color=\"primary\"\r\n                                label={label2}\r\n                                size=\"small\"\r\n                              />\r\n                            </TableCell>\r\n                            <TableCell style={{ width: \"15%\" }} align=\"center\">\r\n                              <Chip\r\n                                style={{\r\n                                  width: \"100% \",\r\n                                  backgroundColor: colorcomparison,\r\n                                }}\r\n                                color=\"primary\"\r\n                                label={labelcomparison}\r\n                                size=\"small\"\r\n                              />\r\n                            </TableCell>\r\n                            {request.analyzed !== 0 ? (\r\n                              <TableCell style={{ width: \"10%\" }}>\r\n                                <Link to={`/analyze/${request.id}`}>\r\n                                  <Button\r\n                                    disabled={request.analyzed === 0}\r\n                                    id=\"analyze\"\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    // onClick={() => {}}\r\n                                  >\r\n                                    Analyze\r\n                                  </Button>\r\n                                </Link>\r\n                              </TableCell>\r\n                            ) : (\r\n                              <TableCell style={{ width: \"10%\" }}>\r\n                                <Button\r\n                                  disabled={request.analyzed === 0}\r\n                                  id=\"analyze\"\r\n                                  variant=\"contained\"\r\n                                  color=\"primary\"\r\n                                  // onClick={() => {}}\r\n                                >\r\n                                  Analyze\r\n                                </Button>\r\n                              </TableCell>\r\n                            )}\r\n                          </>\r\n                        );\r\n\r\n                        return (\r\n                          <TableRow hover tabIndex={-1} key={request.index}>\r\n                            {resultRow}\r\n                          </TableRow>\r\n                        );\r\n                      })\r\n                  )}\r\n                </TableBody>\r\n              )}\r\n            </Table>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[10, 25, 50]}\r\n            component=\"div\"\r\n            count={list.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </CardContent>\r\n        <FormControlLabel\r\n          style={{\r\n            float: \"left\",\r\n            marginLeft: 4,\r\n            marginBottom: 16,\r\n            marginTop: 16,\r\n          }}\r\n          control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n          label=\"Dense padding\"\r\n        />\r\n      </Paper>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ResultTable;\r\n","import React from \"react\";\r\nimport { Container, Grid, makeStyles } from \"@material-ui/core\";\r\nimport Page from \"src/components/Page\";\r\nimport ResultTable from \"./components/ResultTable\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.white,\r\n    marginBottom: 35,\r\n    paddingBottom: theme.spacing(100),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst ResultsPage = ({ userInfo }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Results Page\">\r\n      <Container maxWidth={false}>\r\n        <Grid container spacing={3}>\r\n          <Grid item lg={12} md={12} xl={12} xs={12}>\r\n            <ResultTable userInfo={userInfo} />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default ResultsPage;\r\n","import React from \"react\";\r\nimport { Box, Grid, Container, Card } from \"@material-ui/core\";\r\nimport Page from \"src/components/Page\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    marginBottom: 35,\r\n    paddingBottom: theme.spacing(72.5),\r\n    paddingTop: theme.spacing(35),\r\n  },\r\n  subheader: {\r\n    margin: \"5px\",\r\n    fontSize: \"16px\",\r\n  },\r\n  card: {\r\n    marginTop: theme.spacing(3),\r\n    height: \"100%\",\r\n    padding: theme.spacing(3),\r\n  },\r\n  icon: {\r\n    fontSize: \"3rem\",\r\n    color: \"#ffcc00\",\r\n  },\r\n}));\r\n\r\nconst ComparePayTool = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"About\">\r\n      <Container maxWidth=\"lg\">\r\n        <Grid container spacing={3}>\r\n          <Grid item lg={12} md={12} xl={12} xs={12}>\r\n            <Card className={classes.card}>\r\n              <Box>\r\n                <h2>Compare Pay Tool</h2>\r\n              </Box>\r\n              <Box mt={2}>\r\n                <h4>\r\n                  This tool based on the Input parameters starts Pay Summary\r\n                  Recalc, Base Rate Recalc, Job Step Recalc, Schedule Cost\r\n                  Recalc, Award Entitlement, and Pay Export Background Job,\r\n                  generates Output Files, Compares them and Analyze Record.\r\n                </h4>\r\n              </Box>\r\n              <Box mt={2}>\r\n                <h3>Announcements:</h3>\r\n              </Box>\r\n              <Box mt={2}>\r\n                <h4>\r\n                  For Pay Export - Background Job: Comparison and Analyzing\r\n                  implementation is not completed, Therefore once the Background\r\n                  Job is Finished with JobCompleted status, proceed with Manual\r\n                  Comparison. For more information:\r\n                  <a\r\n                    href=\"https://wiki.dayforce.com/display/WFM/Export+File+-+Comparison\"\r\n                    target=\"blank\"\r\n                  >\r\n                    {\" \"}\r\n                    https://wiki.dayforce.com/display/WFM/Export+File+-+Comparison{\" \"}\r\n                  </a>\r\n                </h4>\r\n              </Box>\r\n              <Box mt={2}>\r\n                <h4> For more information: </h4>\r\n                <h4>\r\n                  <a\r\n                    href=\"https://wiki.dayforce.com/pages/viewpage.action?spaceKey=WFM&title=ComparePay+Tool\"\r\n                    target=\"blank\"\r\n                  >\r\n                    {\" \"}\r\n                    https://wiki.dayforce.com/pages/viewpage.action?spaceKey=WFM&title=ComparePay+Tool{\" \"}\r\n                  </a>\r\n                </h4>\r\n              </Box>\r\n              <Box mt={3}>\r\n                <h5>The Compare Pay Tool Development Team</h5>\r\n              </Box>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default ComparePayTool;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Container,\r\n  Grid,\r\n  Chip,\r\n  TextField,\r\n  FormControl,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TableSortLabel,\r\n  Button,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport { dates } from \"src/util/DateTime/dates\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport axios from \"axios\";\r\nimport {\r\n  analyzeAPI,\r\n  inputAPI,\r\n  analyzeBRRAPI,\r\n  analyzeJSRAPI,\r\n  analyzeSCRAPI,\r\n  analyzeAEAPI,\r\n  analyzeEAPI,\r\n} from \"src/components/APIBase/BaseURL\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n  formControl: {\r\n    margin: 8,\r\n    marginTop: 16,\r\n    marginBottom: 0,\r\n    minWidth: 350,\r\n  },\r\n}));\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  var compA =\r\n    typeof a[orderBy] === \"string\"\r\n      ? a[orderBy].toLowerCase().trim()\r\n      : a[orderBy];\r\n  var compB =\r\n    typeof b[orderBy] === \"string\"\r\n      ? b[orderBy].toLowerCase().trim()\r\n      : b[orderBy];\r\n  if (compB < compA) {\r\n    return -1;\r\n  }\r\n  if (compB > compA) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCellsPSR_SCR = [\r\n  { id: \"line\", numeric: false, label: \"Line\" },\r\n  { id: \"employee_id\", numeric: false, label: \"Employee ID\" },\r\n  { id: \"date\", numeric: false, label: \"Date\" },\r\n  {\r\n    id: \"employee_adjustid\",\r\n    numeric: false,\r\n    label: \"Version 1 Employee Pay AdjustID - Version 2 Employee Pay AdjustID\",\r\n  },\r\n  { id: \"result\", numeric: false, label: \"Result\" },\r\n  { id: \"tracer\", numeric: false, label: \"Tracer\" },\r\n];\r\n\r\nfunction EnhancedTableHeadFilePSRSCR(props) {\r\n  const { classes, order, orderBy, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {headCellsPSR_SCR.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            style={{ fontWeight: 600, color: \"#000000\" }}\r\n            align={headCell.numeric ? \"right\" : \"left\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHeadFilePSRSCR.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n};\r\n\r\nconst headCells2 = [\r\n  { id: \"version1_path\", numeric: false, label: \"Version 1 File\" },\r\n  { id: \"version2_path\", numeric: false, label: \"Version 2 File\" },\r\n  { id: \"analyze_path\", numeric: false, label: \"Analyze File\" },\r\n];\r\n\r\nfunction EnhancedTableHeadFile(props) {\r\n  const { classes, order, orderBy, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {headCells2.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            style={{ fontWeight: 600, color: \"#000000\" }}\r\n            align={headCell.numeric ? \"right\" : \"center\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHeadFile.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n};\r\n\r\nconst headCellsBRR = [\r\n  { id: \"line\", numeric: false, label: \"Line\" },\r\n  { id: \"employeeid\", numeric: false, label: \"Employee ID\" },\r\n  { id: \"employmentstatusid\", numeric: false, label: \"Employee Status ID\" },\r\n  {\r\n    id: \"start\",\r\n    numeric: false,\r\n    label: \"Effective Start\",\r\n  },\r\n  { id: \"end\", numeric: false, label: \"Effective End\" },\r\n  { id: \"table\", numeric: false, label: \"Table\" },\r\n  { id: \"discrepancy\", numeric: false, label: \"Discrepancy\" },\r\n];\r\n\r\nfunction EnhancedTableHeadBRR(props) {\r\n  const { classes, order, orderBy, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {headCellsBRR.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            style={{ fontWeight: 600, color: \"#000000\" }}\r\n            align={headCell.numeric ? \"right\" : \"left\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHeadBRR.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n};\r\n\r\nconst headCellsJSR = [\r\n  { id: \"line\", numeric: false, label: \"Line\" },\r\n  { id: \"employeeid\", numeric: false, label: \"Employee ID\" },\r\n  {\r\n    id: \"employeeworkassignmentid\",\r\n    numeric: false,\r\n    label: \"Employee Work Assignment ID\",\r\n  },\r\n  { id: \"table\", numeric: false, label: \"Table\" },\r\n  { id: \"discrepancy\", numeric: false, label: \"Discrepancy\" },\r\n];\r\n\r\nfunction EnhancedTableHeadJSR(props) {\r\n  const { classes, order, orderBy, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {headCellsJSR.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            style={{ fontWeight: 600, color: \"#000000\" }}\r\n            align={headCell.numeric ? \"right\" : \"left\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHeadJSR.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n};\r\n\r\nconst headCellsAE = [\r\n  { id: \"line\", numeric: false, label: \"Line\" },\r\n  { id: \"employeeid\", numeric: false, label: \"Employee ID\" },\r\n  { id: \"table\", numeric: false, label: \"Table\" },\r\n  { id: \"discrepancy\", numeric: false, label: \"Discrepancy\" },\r\n];\r\n\r\nfunction EnhancedTableHeadAE(props) {\r\n  const { classes, order, orderBy, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {headCellsAE.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            style={{ fontWeight: 600, color: \"#000000\" }}\r\n            align={headCell.numeric ? \"right\" : \"left\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHeadAE.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n};\r\n\r\nconst headCellsE = [\r\n  { id: \"line\", numeric: false, label: \"Line\" },\r\n  { id: \"discrepancy\", numeric: false, label: \"Discrepancy\" },\r\n];\r\n\r\nfunction EnhancedTableHeadE(props) {\r\n  const { classes, order, orderBy, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {headCellsE.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            style={{ fontWeight: 600, color: \"#000000\" }}\r\n            align={headCell.numeric ? \"right\" : \"left\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHeadE.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n};\r\n\r\nconst AnalyzeTable = () => {\r\n  const classes = useStyles();\r\n\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"analyzeRequestBy\");\r\n\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [result, setresult] = useState([]);\r\n  const [list, setlist] = useState([]);\r\n\r\n  const [input, setinput] = useState({\r\n    id: null,\r\n    user_ID: \"\",\r\n    user_Name: \"\",\r\n    user_Email: \"\",\r\n    client: \"\",\r\n    dbName_1: \"\",\r\n    dbName_2: \"\",\r\n    controlDB_1: \"\",\r\n    controlDB_2: \"\",\r\n    controlDBServer_1: \"\",\r\n    controlDBServer_2: \"\",\r\n    controlDBServer_Server1: \"\",\r\n    controlDBServer_Server2: \"\",\r\n    forceCompareOnly: null,\r\n    runTask_1: null,\r\n    runTask_2: null,\r\n    start_Time: \"\",\r\n    end_Time: \"\",\r\n    date_Relative_To_Today: \"\",\r\n    org: \"\",\r\n    policy: \"\",\r\n    pay_Group_Calendar_Id: 0,\r\n    export_Mode: \"\",\r\n    mock_Transmit: null,\r\n    export_File_Name: \"\",\r\n    job: \"\",\r\n    date: \"\",\r\n    logId1: \"\",\r\n    status1: \"\",\r\n    logId2: \"\",\r\n    status2: \"\",\r\n    results: \"\",\r\n    compared: 2,\r\n    analyzed: -1,\r\n    version1_Path: \"\",\r\n    version2_Path: \"\",\r\n    analyze_Path: \"\",\r\n  });\r\n\r\n  const { id } = useParams();\r\n\r\n  const day = new Date();\r\n  const [selectedDate, setSelectedDate] = useState(day);\r\n\r\n  function searchForPSRSCR(toSearch) {\r\n    var results = [];\r\n\r\n    toSearch = trimString(toSearch.toLowerCase());\r\n\r\n    for (var i = 0; i < result.length; i++) {\r\n      if (\r\n        result[i].employee_ID?.toLowerCase().includes(toSearch) ||\r\n        result[i].buisness_Date?.toLowerCase().includes(toSearch) ||\r\n        result[i].discrepancy?.toLowerCase().includes(toSearch) ||\r\n        result[i].employee_Pay_AdjustID?.toLowerCase().includes(toSearch)\r\n      ) {\r\n        results.push(result[i]);\r\n      }\r\n    }\r\n    return results;\r\n  }\r\n\r\n  function searchForBRR(toSearch) {\r\n    var results = [];\r\n\r\n    toSearch = trimString(toSearch.toLowerCase());\r\n\r\n    for (var i = 0; i < result.length; i++) {\r\n      if (\r\n        result[i].employeeId?.toLowerCase().includes(toSearch) ||\r\n        result[i].employmentStatusId?.toLowerCase().includes(toSearch) ||\r\n        result[i].table?.toLowerCase().includes(toSearch)\r\n      ) {\r\n        results.push(result[i]);\r\n      }\r\n    }\r\n    return results;\r\n  }\r\n\r\n  function searchForJSR(toSearch) {\r\n    var results = [];\r\n\r\n    toSearch = trimString(toSearch.toLowerCase());\r\n\r\n    for (var i = 0; i < result.length; i++) {\r\n      if (\r\n        result[i].employeeId?.toLowerCase().includes(toSearch) ||\r\n        result[i].employeeWorkAssignmentId?.toLowerCase().includes(toSearch) ||\r\n        result[i].table?.toLowerCase().includes(toSearch)\r\n      ) {\r\n        results.push(result[i]);\r\n      }\r\n    }\r\n    return results;\r\n  }\r\n\r\n  function searchForAE(toSearch) {\r\n    var results = [];\r\n\r\n    toSearch = trimString(toSearch.toLowerCase());\r\n\r\n    for (var i = 0; i < result.length; i++) {\r\n      if (\r\n        result[i].employeeId?.toLowerCase().includes(toSearch) ||\r\n        result[i].table?.toLowerCase().includes(toSearch)\r\n      ) {\r\n        results.push(result[i]);\r\n      }\r\n    }\r\n    return results;\r\n  }\r\n\r\n  function searchForE(toSearch) {\r\n    var results = [];\r\n\r\n    toSearch = trimString(toSearch.toLowerCase());\r\n\r\n    for (var i = 0; i < result.length; i++) {\r\n      if (\r\n        result[i].employeeId?.toLowerCase().includes(toSearch) ||\r\n        result[i].table?.toLowerCase().includes(toSearch)\r\n      ) {\r\n        results.push(result[i]);\r\n      }\r\n    }\r\n    return results;\r\n  }\r\n\r\n  function trimString(s) {\r\n    var l = 0,\r\n      r = s.length - 1;\r\n    while (l < s.length && s[l] === \" \") l++;\r\n    while (r > l && s[r] === \" \") r -= 1;\r\n    return s.substring(l, r + 1);\r\n  }\r\n\r\n  const handleSearchChangePSRSCR = (event) => {\r\n    if (event.target.value === \"\") {\r\n      setlist(result);\r\n    } else {\r\n      setlist(searchForPSRSCR(event.target.value));\r\n    }\r\n    setPage(0);\r\n  };\r\n\r\n  const handleSearchChangeBRR = (event) => {\r\n    if (event.target.value === \"\") {\r\n      setlist(result);\r\n    } else {\r\n      setlist(searchForBRR(event.target.value));\r\n    }\r\n    setPage(0);\r\n  };\r\n\r\n  const handleSearchChangeJSR = (event) => {\r\n    if (event.target.value === \"\") {\r\n      setlist(result);\r\n    } else {\r\n      setlist(searchForJSR(event.target.value));\r\n    }\r\n    setPage(0);\r\n  };\r\n\r\n  const handleSearchChangeAE = (event) => {\r\n    if (event.target.value === \"\") {\r\n      setlist(result);\r\n    } else {\r\n      setlist(searchForAE(event.target.value));\r\n    }\r\n    setPage(0);\r\n  };\r\n\r\n  const handleSearchChangeE = (event) => {\r\n    if (event.target.value === \"\") {\r\n      setlist(result);\r\n    } else {\r\n      setlist(searchForE(event.target.value));\r\n    }\r\n    setPage(0);\r\n  };\r\n\r\n  const handleDateChangePSRSCR = (date) => {\r\n    setLoading(true);\r\n    setSelectedDate(date);\r\n\r\n    var d = new Date(date);\r\n\r\n    // document.getElementById(\"requestSearch\").value = \"\";\r\n\r\n    var date_filter = `${d.getFullYear()}-${dates.pad(\r\n      d.getMonth() + 1,\r\n      2\r\n    )}-${dates.pad(d.getDate(), 2)}`;\r\n\r\n    setlist([]);\r\n\r\n    for (let i = 0; i < result.length; i++) {\r\n      setlist(\r\n        result.filter(\r\n          (item) => item.buisness_Date.substring(0, 10) === date_filter\r\n        )\r\n      );\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let analyzeApi = async () => {\r\n      let comparison_id = id;\r\n      let url = analyzeAPI + comparison_id;\r\n      await axios({\r\n        method: \"GET\",\r\n        url,\r\n      })\r\n        .then(function (response) {\r\n          setresult(response.data);\r\n          setlist(response.data);\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    };\r\n    let analyzeBRRApi = async () => {\r\n      let comparison_id = id;\r\n      let url = analyzeBRRAPI + comparison_id;\r\n      await axios({\r\n        method: \"GET\",\r\n        url,\r\n      })\r\n        .then(function (response) {\r\n          setresult(response.data);\r\n          setlist(response.data);\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    };\r\n    let analyzeJSRApi = async () => {\r\n      let comparison_id = id;\r\n      let url = analyzeJSRAPI + comparison_id;\r\n      await axios({\r\n        method: \"GET\",\r\n        url,\r\n      })\r\n        .then(function (response) {\r\n          setresult(response.data);\r\n          setlist(response.data);\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    };\r\n    let analyzeSCRApi = async () => {\r\n      let comparison_id = id;\r\n      let url = analyzeSCRAPI + comparison_id;\r\n      await axios({\r\n        method: \"GET\",\r\n        url,\r\n      })\r\n        .then(function (response) {\r\n          setresult(response.data);\r\n          setlist(response.data);\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    };\r\n    let analyzeAEApi = async () => {\r\n      let comparison_id = id;\r\n      let url = analyzeAEAPI + comparison_id;\r\n      await axios({\r\n        method: \"GET\",\r\n        url,\r\n      })\r\n        .then(function (response) {\r\n          setresult(response.data);\r\n          setlist(response.data);\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    };\r\n    let analyzeEApi = async () => {\r\n      let comparison_id = id;\r\n      let url = analyzeEAPI + comparison_id;\r\n      await axios({\r\n        method: \"GET\",\r\n        url,\r\n      })\r\n        .then(function (response) {\r\n          setresult(response.data);\r\n          setlist(response.data);\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    };\r\n    let inputApi = async () => {\r\n      let comparison_id = id;\r\n      let url = inputAPI + comparison_id;\r\n      await axios({\r\n        method: \"GET\",\r\n        url,\r\n      })\r\n        .then(function (response) {\r\n          setinput(response.data);\r\n          setLoading(false);\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    };\r\n    inputApi();\r\n    if (input.job === \"PSR\") {\r\n      analyzeApi();\r\n    } else if (input.job === \"BRR\") {\r\n      analyzeBRRApi();\r\n    } else if (input.job === \"JobStepRecalc\") {\r\n      analyzeJSRApi();\r\n    } else if (input.job === \"SCR\") {\r\n      analyzeSCRApi();\r\n    } else if (input.job === \"AE_Sample\") {\r\n      analyzeAEApi();\r\n    } else if (input.job === \"Export\") {\r\n      analyzeEApi();\r\n    }\r\n  }, [id, input.job]);\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Typography\r\n          variant=\"h2\"\r\n          align=\"center\"\r\n          color=\"primary\"\r\n          style={{ margin: \"2rem\" }}\r\n        >\r\n          Records and Analyze File\r\n        </Typography>\r\n        <Paper className={classes.paper}>\r\n          <CardContent style={{ paddingBottom: 16 }}>\r\n            <Divider style={{ marginTop: 16, marginBottom: 16 }} />\r\n            <TableContainer>\r\n              <Table\r\n                className={classes.table}\r\n                aria-labelledby=\"tableTitle\"\r\n                aria-label=\"enhanced table\"\r\n              >\r\n                <EnhancedTableHeadFile\r\n                  classes={classes}\r\n                  order={order}\r\n                  orderBy={orderBy}\r\n                  onRequestSort={handleRequestSort}\r\n                />\r\n                <TableBody>\r\n                  <TableCell style={{ width: \"23%\" }}>\r\n                    {input.version1_Path === \"\" ? (\r\n                      <></>\r\n                    ) : (\r\n                      <a\r\n                        style={{ marginLeft: 260 }}\r\n                        href={input.version1_Path}\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                        className={classes.title}\r\n                      >\r\n                        Version 1 Records\r\n                      </a>\r\n                    )}\r\n                  </TableCell>\r\n                  <TableCell style={{ width: \"23%\" }}>\r\n                    {input.version2_Path === \"\" ? (\r\n                      <></>\r\n                    ) : (\r\n                      <a\r\n                        style={{ marginLeft: 260 }}\r\n                        href={input.version2_Path}\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                        className={classes.title}\r\n                      >\r\n                        Version 2 Records\r\n                      </a>\r\n                    )}\r\n                  </TableCell>\r\n                  <TableCell style={{ width: \"23%\" }}>\r\n                    {input.analyze_Path === \"\" ? (\r\n                      <></>\r\n                    ) : (\r\n                      <a\r\n                        style={{ marginLeft: 260 }}\r\n                        href={input.analyze_Path}\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                        className={classes.title}\r\n                      >\r\n                        Analyze Records\r\n                      </a>\r\n                    )}\r\n                  </TableCell>\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </CardContent>\r\n        </Paper>\r\n      </Card>\r\n      {input.job === \"PSR\" || input.job === \"SCR\" ? (\r\n        <>\r\n          {\" \"}\r\n          <Divider />\r\n          <Divider />\r\n          <Divider style={{ marginTop: 16, marginBottom: 16 }} />\r\n          <Divider />\r\n          <Divider />\r\n          <Card>\r\n            <Divider style={{ marginTop: 16, marginBottom: 16 }} />\r\n            <Typography\r\n              variant=\"h2\"\r\n              align=\"center\"\r\n              color=\"primary\"\r\n              style={{ margin: \"2rem\" }}\r\n            >\r\n              Analyze\r\n            </Typography>\r\n            <Typography\r\n              variant=\"h2\"\r\n              align=\"center\"\r\n              color=\"primary\"\r\n              style={{ margin: \"2rem\" }}\r\n            >\r\n              Comparison ID-{id}\r\n            </Typography>\r\n            <Chip\r\n              style={{\r\n                width: \"25% \",\r\n                backgroundColor:\r\n                  input.analyzed === 0\r\n                    ? \"#90ee90\"\r\n                    : input.analyzed === 1\r\n                    ? \"#eec300\"\r\n                    : input.analyzed === 2\r\n                    ? \"#00FF00\"\r\n                    : \"#FFFFFF\",\r\n              }}\r\n              color=\"black\"\r\n              label={\r\n                input.analyzed === 0\r\n                  ? \"Status: Analyze has started successfully for this Comparison\"\r\n                  : input.analyzed === 1\r\n                  ? \"Status: Analyzing.... Discrepancies Detected will continue to be added\"\r\n                  : input.analyzed === 2\r\n                  ? \"Status: Completed Analyzing for this Comparison\"\r\n                  : \"\"\r\n              }\r\n              size=\"large\"\r\n            />\r\n            <Divider style={{ marginTop: 16, marginBottom: 16 }} />\r\n            <Paper className={classes.paper}>\r\n              <CardContent style={{ paddingBottom: 16 }}>\r\n                <Container maxWidth={false}>\r\n                  <Grid container spacing={3}>\r\n                    <Grid item lg={6} md={6} xl={6} xs={12}>\r\n                      <FormControl style={{ float: \"left\" }}>\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                          <Grid container justify=\"space-around\">\r\n                            <KeyboardDatePicker\r\n                              disableToolbar\r\n                              variant=\"inline\"\r\n                              format=\"yyyy-MM-dd\"\r\n                              margin=\"normal\"\r\n                              id=\"comparisonDateFilter\"\r\n                              disabled={result.length === 0}\r\n                              disableFuture={true}\r\n                              label=\"Filter by Discrepancy Date\"\r\n                              value={selectedDate}\r\n                              onChange={handleDateChangePSRSCR}\r\n                              KeyboardButtonProps={{\r\n                                \"aria-label\": \"change date\",\r\n                              }}\r\n                              style={{ minWidth: 350 }}\r\n                            />\r\n                          </Grid>\r\n                        </MuiPickersUtilsProvider>\r\n                      </FormControl>\r\n                    </Grid>\r\n                    <Grid item lg={6} md={6} xl={6} xs={12}>\r\n                      <FormControl\r\n                        style={{ float: \"right\" }}\r\n                        className={classes.formControl}\r\n                      >\r\n                        <TextField\r\n                          size=\"small\"\r\n                          onChange={handleSearchChangePSRSCR}\r\n                          disabled={result.length === 0}\r\n                          id=\"comparisonSearch\"\r\n                          label=\"Search\"\r\n                          variant=\"outlined\"\r\n                          // disabled={true}\r\n                        />\r\n                      </FormControl>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Container>\r\n                <Divider style={{ marginTop: 16, marginBottom: 16 }} />\r\n                <TableContainer>\r\n                  <Table\r\n                    className={classes.table}\r\n                    aria-labelledby=\"tableTitle\"\r\n                    aria-label=\"enhanced table\"\r\n                  >\r\n                    <EnhancedTableHeadFilePSRSCR\r\n                      classes={classes}\r\n                      order={order}\r\n                      orderBy={orderBy}\r\n                      onRequestSort={handleRequestSort}\r\n                    />\r\n                    {loading ? (\r\n                      <TableBody>\r\n                        <TableRow align=\"right\">\r\n                          <TableCell colSpan={16}>\r\n                            <Loader\r\n                              type=\"ThreeDots\"\r\n                              color=\"#000000\"\r\n                              height={50}\r\n                              width={50}\r\n                              //timeout={10000}\r\n                              style={{ marginLeft: \"50%\" }}\r\n                            />\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      </TableBody>\r\n                    ) : (\r\n                      <TableBody>\r\n                        {list.length === 0 ? (\r\n                          <TableRow>\r\n                            <TableCell colSpan={16}>\r\n                              No Discrepancy or Issue Found\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        ) : (\r\n                          stableSort(list, getComparator(order, orderBy))\r\n                            .slice(\r\n                              page * rowsPerPage,\r\n                              page * rowsPerPage + rowsPerPage\r\n                            )\r\n                            .map((request) => {\r\n                              let rule = \"Find Rule\";\r\n                              if (\r\n                                request.discrepancy ===\r\n                                  \"Cant' Analyze - Difference Reason: No Record for Version 2\" ||\r\n                                request.discrepancy ===\r\n                                  \"Cant' Analyze - Difference Reason: No Record for Version 1\" ||\r\n                                request.discrepancy ===\r\n                                  \"No Difference Reason: No Record exist for both Versions\" ||\r\n                                request.discrepancy ===\r\n                                  \"Difference Reason: Can't Find Record for both Versions\" ||\r\n                                request.discrepancy === \"No Analyze Needed\" ||\r\n                                request.discrepancy === \"Duplicate Tardy\" ||\r\n                                request.discrepancy ===\r\n                                  \"Version 1 and 2 has no corresponding aligned record, but these records are similar and exist as Duplicate Tardy\" ||\r\n                                request.discrepancy ===\r\n                                  \"Only EmployeePayAdjustId Mismatch\" ||\r\n                                request.discrepancy ===\r\n                                  \"Only EmployeePayAdjustId and PayAdjCodeId Mismatch\" ||\r\n                                request.discrepancy === \"Overlapping Tardy\" ||\r\n                                request.discrepancy ===\r\n                                  \"Duplicate Work Assignment with Different Rates\" ||\r\n                                request.discrepancy.includes(\r\n                                  \"Version 1 has no corresponding record\"\r\n                                ) ||\r\n                                request.discrepancy.includes(\r\n                                  \"Version 2 has no corresponding record\"\r\n                                ) ||\r\n                                request.employee_ID.includes(\" - \") ||\r\n                                request.buisness_Date.includes(\" - \") ||\r\n                                request.discrepancy ===\r\n                                  \"Can't Analyze Reason: Large Record File\"\r\n                              ) {\r\n                                rule = \"Not Applicable\";\r\n                              }\r\n\r\n                              const analyzePSRSCRRow = (\r\n                                <>\r\n                                  <TableCell style={{ width: \"5%\" }}>\r\n                                    {request.line}\r\n                                  </TableCell>\r\n                                  <TableCell style={{ width: \"3%\" }}>\r\n                                    {request.employee_ID}\r\n                                  </TableCell>\r\n                                  <TableCell style={{ width: \"10%\" }}>\r\n                                    {request.buisness_Date}\r\n                                  </TableCell>\r\n                                  <TableCell style={{ width: \"17%\" }}>\r\n                                    {request.employee_Pay_AdjustID}\r\n                                  </TableCell>\r\n                                  <TableCell style={{ width: \"15%\" }}>\r\n                                    {request.discrepancy}\r\n                                  </TableCell>\r\n                                  {rule === \"Not Applicable\" ? (\r\n                                    <TableCell style={{ width: \"5%\" }}>\r\n                                      <Button\r\n                                        disabled={rule === \"Not Applicable\"}\r\n                                        id=\"tracer\"\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        // onClick={() => {\r\n                                        // }}\r\n                                      >\r\n                                        {rule}\r\n                                      </Button>\r\n                                    </TableCell>\r\n                                  ) : (\r\n                                    <TableCell style={{ width: \"10%\" }}>\r\n                                      <Link to={`/rule/${request.id}`}>\r\n                                        <Button\r\n                                          disabled={rule === \"Not Applicable\"}\r\n                                          id=\"tracer\"\r\n                                          variant=\"contained\"\r\n                                          color=\"primary\"\r\n                                          // onClick={() => {\r\n                                          // }}\r\n                                        >\r\n                                          {rule}\r\n                                        </Button>\r\n                                      </Link>\r\n                                    </TableCell>\r\n                                  )}\r\n                                </>\r\n                              );\r\n\r\n                              return (\r\n                                <TableRow\r\n                                  hover\r\n                                  tabIndex={-1}\r\n                                  key={request.index}\r\n                                >\r\n                                  {analyzePSRSCRRow}\r\n                                </TableRow>\r\n                              );\r\n                            })\r\n                        )}\r\n                      </TableBody>\r\n                    )}\r\n                  </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                  rowsPerPageOptions={[10, 15, 25]}\r\n                  component=\"div\"\r\n                  count={list.length}\r\n                  rowsPerPage={rowsPerPage}\r\n                  page={page}\r\n                  onChangePage={handleChangePage}\r\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n              </CardContent>\r\n            </Paper>\r\n          </Card>\r\n        </>\r\n      ) : input.job === \"BRR\" ? (\r\n        <>\r\n          {\" \"}\r\n          <Divider />\r\n          <Divider />\r\n          <Divider style={{ marginTop: 16, marginBottom: 16 }} />\r\n          <Divider />\r\n          <Divider />\r\n          <Card>\r\n            <Divider style={{ marginTop: 16, marginBottom: 16 }} />\r\n            <Typography\r\n              variant=\"h2\"\r\n              align=\"center\"\r\n              color=\"primary\"\r\n              style={{ margin: \"2rem\" }}\r\n            >\r\n              Analyze\r\n            </Typography>\r\n            <Typography\r\n              variant=\"h2\"\r\n              align=\"center\"\r\n              color=\"primary\"\r\n              style={{ margin: \"2rem\" }}\r\n            >\r\n              Comparison ID-{id}\r\n            </Typography>\r\n            <Chip\r\n              style={{\r\n                width: \"25% \",\r\n                backgroundColor:\r\n                  input.analyzed === 0\r\n                    ? \"#90ee90\"\r\n                    : input.analyzed === 1\r\n                    ? \"#eec300\"\r\n                    : input.analyzed === 2\r\n                    ? \"#00FF00\"\r\n                    : \"#FFFFFF\",\r\n              }}\r\n              color=\"black\"\r\n              label={\r\n                input.analyzed === 0\r\n                  ? \"Status: Analyze has started successfully for this Comparison\"\r\n                  : input.analyzed === 1\r\n                  ? \"Status: Analyzing.... Discrepancies Detected will continue to be added\"\r\n                  : input.analyzed === 2\r\n                  ? \"Status: Completed Analyzing for this Comparison\"\r\n                  : \"\"\r\n              }\r\n              size=\"large\"\r\n            />\r\n            <Divider style={{ marginTop: 16, marginBottom: 16 }} />\r\n            <Paper className={classes.paper}>\r\n              <CardContent style={{ paddingBottom: 16 }}>\r\n                <Container maxWidth={false}>\r\n                  <Grid container spacing={3}>\r\n                    <Grid item lg={12} md={12} xl={12} xs={12}>\r\n                      <FormControl\r\n                        style={{ float: \"right\" }}\r\n                        className={classes.formControl}\r\n                      >\r\n                        <TextField\r\n                          size=\"small\"\r\n                          onChange={handleSearchChangeBRR}\r\n                          disabled={result.length === 0}\r\n                          id=\"comparisonSearch\"\r\n                          label=\"Search\"\r\n                          variant=\"outlined\"\r\n                          // disabled={true}\r\n                        />\r\n                      </FormControl>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Container>\r\n                <Divider style={{ marginTop: 16, marginBottom: 16 }} />\r\n                <TableContainer>\r\n                  <Table\r\n                    className={classes.table}\r\n                    aria-labelledby=\"tableTitle\"\r\n                    aria-label=\"enhanced table\"\r\n                  >\r\n                    <EnhancedTableHeadBRR\r\n                      classes={classes}\r\n                      order={order}\r\n                      orderBy={orderBy}\r\n                      onRequestSort={handleRequestSort}\r\n                    />\r\n                    {loading ? (\r\n                      <TableBody>\r\n                        <TableRow align=\"right\">\r\n                          <TableCell colSpan={16}>\r\n                            <Loader\r\n                              type=\"ThreeDots\"\r\n                              color=\"#000000\"\r\n                              height={50}\r\n                              width={50}\r\n                              //timeout={10000}\r\n                              style={{ marginLeft: \"50%\" }}\r\n                            />\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      </TableBody>\r\n                    ) : (\r\n                      <TableBody>\r\n                        {list.length === 0 ? (\r\n                          <TableRow>\r\n                            <TableCell colSpan={16}>\r\n                              No Discrepancy or Issue Found\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        ) : (\r\n                          stableSort(list, getComparator(order, orderBy))\r\n                            .slice(\r\n                              page * rowsPerPage,\r\n                              page * rowsPerPage + rowsPerPage\r\n                            )\r\n                            .map((request) => {\r\n                              const analyzeBRRRow = (\r\n                                <>\r\n                                  <TableCell style={{ width: \"10%\" }}>\r\n                                    {request.line}\r\n                                  </TableCell>\r\n                                  <TableCell style={{ width: \"20%\" }}>\r\n                                    {request.employeeId}\r\n                                  </TableCell>\r\n                                  <TableCell style={{ width: \"20%\" }}>\r\n                                    {request.employmentStatusId}\r\n                                  </TableCell>\r\n                                  <TableCell style={{ width: \"10%\" }}>\r\n                                    {request.effectiveStart}\r\n                                  </TableCell>\r\n                                  <TableCell style={{ width: \"10%\" }}>\r\n                                    {request.effectiveEnd}\r\n                                  </TableCell>\r\n                                  <TableCell style={{ width: \"10%\" }}>\r\n                                    {request.table}\r\n                                  </TableCell>\r\n                                  <TableCell style={{ width: \"20%\" }}>\r\n                                    {request.discrepancy}\r\n                                  </TableCell>\r\n                                </>\r\n                              );\r\n                              return (\r\n                                <TableRow\r\n                                  hover\r\n                                  tabIndex={-1}\r\n                                  key={request.index}\r\n                                >\r\n                                  {analyzeBRRRow}\r\n                                </TableRow>\r\n                              );\r\n                            })\r\n                        )}\r\n                      </TableBody>\r\n                    )}\r\n                  </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                  rowsPerPageOptions={[10, 15, 25]}\r\n                  component=\"div\"\r\n                  count={list.length}\r\n                  rowsPerPage={rowsPerPage}\r\n                  page={page}\r\n                  onChangePage={handleChangePage}\r\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n              </CardContent>\r\n            </Paper>\r\n          </Card>\r\n        </>\r\n      ) : input.job === \"JobStepRecalc\" ? (\r\n        <>\r\n          {\" \"}\r\n          <Divider />\r\n          <Divider />\r\n          <Divider style={{ marginTop: 16, marginBottom: 16 }} />\r\n          <Divider />\r\n          <Divider />\r\n          <Card>\r\n            <Divider style={{ marginTop: 16, marginBottom: 16 }} />\r\n            <Typography\r\n              variant=\"h2\"\r\n              align=\"center\"\r\n              color=\"primary\"\r\n              style={{ margin: \"2rem\" }}\r\n            >\r\n              Analyze\r\n            </Typography>\r\n            <Typography\r\n              variant=\"h2\"\r\n              align=\"center\"\r\n              color=\"primary\"\r\n              style={{ margin: \"2rem\" }}\r\n            >\r\n              Comparison ID-{id}\r\n            </Typography>\r\n            <Chip\r\n              style={{\r\n                width: \"25% \",\r\n                backgroundColor:\r\n                  input.analyzed === 0\r\n                    ? \"#90ee90\"\r\n                    : input.analyzed === 1\r\n                    ? \"#eec300\"\r\n                    : input.analyzed === 2\r\n                    ? \"#00FF00\"\r\n                    : \"#FFFFFF\",\r\n              }}\r\n              color=\"black\"\r\n              label={\r\n                input.analyzed === 0\r\n                  ? \"Status: Analyze has started successfully for this Comparison\"\r\n                  : input.analyzed === 1\r\n                  ? \"Status: Analyzing.... Discrepancies Detected will continue to be added\"\r\n                  : input.analyzed === 2\r\n                  ? \"Status: Completed Analyzing for this Comparison\"\r\n                  : \"\"\r\n              }\r\n              size=\"large\"\r\n            />\r\n            <Divider style={{ marginTop: 16, marginBottom: 16 }} />\r\n            <Paper className={classes.paper}>\r\n              <CardContent style={{ paddingBottom: 16 }}>\r\n                <Container maxWidth={false}>\r\n                  <Grid container spacing={3}>\r\n                    <Grid item lg={12} md={12} xl={12} xs={12}>\r\n                      <FormControl\r\n                        style={{ float: \"right\" }}\r\n                        className={classes.formControl}\r\n                      >\r\n                        <TextField\r\n                          size=\"small\"\r\n                          onChange={handleSearchChangeJSR}\r\n                          disabled={result.length === 0}\r\n                          id=\"comparisonSearch\"\r\n                          label=\"Search\"\r\n                          variant=\"outlined\"\r\n                          // disabled={true}\r\n                        />\r\n                      </FormControl>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Container>\r\n                <Divider style={{ marginTop: 16, marginBottom: 16 }} />\r\n                <TableContainer>\r\n                  <Table\r\n                    className={classes.table}\r\n                    aria-labelledby=\"tableTitle\"\r\n                    aria-label=\"enhanced table\"\r\n                  >\r\n                    <EnhancedTableHeadJSR\r\n                      classes={classes}\r\n                      order={order}\r\n                      orderBy={orderBy}\r\n                      onRequestSort={handleRequestSort}\r\n                    />\r\n                    {loading ? (\r\n                      <TableBody>\r\n                        <TableRow align=\"right\">\r\n                          <TableCell colSpan={16}>\r\n                            <Loader\r\n                              type=\"ThreeDots\"\r\n                              color=\"#000000\"\r\n                              height={50}\r\n                              width={50}\r\n                              //timeout={10000}\r\n                              style={{ marginLeft: \"50%\" }}\r\n                            />\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      </TableBody>\r\n                    ) : (\r\n                      <TableBody>\r\n                        {list.length === 0 ? (\r\n                          <TableRow>\r\n                            <TableCell colSpan={16}>\r\n                              No Discrepancy or Issue Found\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        ) : (\r\n                          stableSort(list, getComparator(order, orderBy))\r\n                            .slice(\r\n                              page * rowsPerPage,\r\n                              page * rowsPerPage + rowsPerPage\r\n                            )\r\n                            .map((request) => {\r\n                              const analyzeJSRRow = (\r\n                                <>\r\n                                  <TableCell style={{ width: \"20%\" }}>\r\n                                    {request.line}\r\n                                  </TableCell>\r\n                                  <TableCell style={{ width: \"20%\" }}>\r\n                                    {request.employeeId}\r\n                                  </TableCell>\r\n                                  <TableCell style={{ width: \"20%\" }}>\r\n                                    {request.employeeWorkAssignmentId}\r\n                                  </TableCell>\r\n                                  <TableCell style={{ width: \"20%\" }}>\r\n                                    {request.table}\r\n                                  </TableCell>\r\n                                  <TableCell style={{ width: \"20%\" }}>\r\n                                    {request.discrepancy}\r\n                                  </TableCell>\r\n                                </>\r\n                              );\r\n                              return (\r\n                                <TableRow\r\n                                  hover\r\n                                  tabIndex={-1}\r\n                                  key={request.index}\r\n                                >\r\n                                  {analyzeJSRRow}\r\n                                </TableRow>\r\n                              );\r\n                            })\r\n                        )}\r\n                      </TableBody>\r\n                    )}\r\n                  </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                  rowsPerPageOptions={[10, 15, 25]}\r\n                  component=\"div\"\r\n                  count={list.length}\r\n                  rowsPerPage={rowsPerPage}\r\n                  page={page}\r\n                  onChangePage={handleChangePage}\r\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n              </CardContent>\r\n            </Paper>\r\n          </Card>\r\n        </>\r\n      ) : input.job === \"AE_Sample\" ? (\r\n        <>\r\n          {\" \"}\r\n          <Divider />\r\n          <Divider />\r\n          <Divider style={{ marginTop: 16, marginBottom: 16 }} />\r\n          <Divider />\r\n          <Divider />\r\n          <Card>\r\n            <Divider style={{ marginTop: 16, marginBottom: 16 }} />\r\n            <Typography\r\n              variant=\"h2\"\r\n              align=\"center\"\r\n              color=\"primary\"\r\n              style={{ margin: \"2rem\" }}\r\n            >\r\n              Analyze\r\n            </Typography>\r\n            <Typography\r\n              variant=\"h2\"\r\n              align=\"center\"\r\n              color=\"primary\"\r\n              style={{ margin: \"2rem\" }}\r\n            >\r\n              Comparison ID-{id}\r\n            </Typography>\r\n            <Chip\r\n              style={{\r\n                width: \"25% \",\r\n                backgroundColor:\r\n                  input.analyzed === 0\r\n                    ? \"#90ee90\"\r\n                    : input.analyzed === 1\r\n                    ? \"#eec300\"\r\n                    : input.analyzed === 2\r\n                    ? \"#00FF00\"\r\n                    : \"#FFFFFF\",\r\n              }}\r\n              color=\"black\"\r\n              label={\r\n                input.analyzed === 0\r\n                  ? \"Status: Analyze has started successfully for this Comparison\"\r\n                  : input.analyzed === 1\r\n                  ? \"Status: Analyzing.... Discrepancies Detected will continue to be added\"\r\n                  : input.analyzed === 2\r\n                  ? \"Status: Completed Analyzing for this Comparison\"\r\n                  : \"\"\r\n              }\r\n              size=\"large\"\r\n            />\r\n            <Divider style={{ marginTop: 16, marginBottom: 16 }} />\r\n            <Paper className={classes.paper}>\r\n              <CardContent style={{ paddingBottom: 16 }}>\r\n                <Container maxWidth={false}>\r\n                  <Grid container spacing={3}>\r\n                    <Grid item lg={12} md={12} xl={12} xs={12}>\r\n                      <FormControl\r\n                        style={{ float: \"right\" }}\r\n                        className={classes.formControl}\r\n                      >\r\n                        <TextField\r\n                          size=\"small\"\r\n                          onChange={handleSearchChangeAE}\r\n                          disabled={result.length === 0}\r\n                          id=\"comparisonSearch\"\r\n                          label=\"Search\"\r\n                          variant=\"outlined\"\r\n                          // disabled={true}\r\n                        />\r\n                      </FormControl>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Container>\r\n                <Divider style={{ marginTop: 16, marginBottom: 16 }} />\r\n                <TableContainer>\r\n                  <Table\r\n                    className={classes.table}\r\n                    aria-labelledby=\"tableTitle\"\r\n                    aria-label=\"enhanced table\"\r\n                  >\r\n                    <EnhancedTableHeadAE\r\n                      classes={classes}\r\n                      order={order}\r\n                      orderBy={orderBy}\r\n                      onRequestSort={handleRequestSort}\r\n                    />\r\n                    {loading ? (\r\n                      <TableBody>\r\n                        <TableRow align=\"right\">\r\n                          <TableCell colSpan={16}>\r\n                            <Loader\r\n                              type=\"ThreeDots\"\r\n                              color=\"#000000\"\r\n                              height={50}\r\n                              width={50}\r\n                              //timeout={10000}\r\n                              style={{ marginLeft: \"50%\" }}\r\n                            />\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      </TableBody>\r\n                    ) : (\r\n                      <TableBody>\r\n                        {list.length === 0 ? (\r\n                          <TableRow>\r\n                            <TableCell colSpan={16}>\r\n                              No Discrepancy or Issue Found\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        ) : (\r\n                          stableSort(list, getComparator(order, orderBy))\r\n                            .slice(\r\n                              page * rowsPerPage,\r\n                              page * rowsPerPage + rowsPerPage\r\n                            )\r\n                            .map((request) => {\r\n                              const analyzeAERow = (\r\n                                <>\r\n                                  <TableCell style={{ width: \"20%\" }}>\r\n                                    {request.line}\r\n                                  </TableCell>\r\n                                  <TableCell style={{ width: \"20%\" }}>\r\n                                    {request.employeeId}\r\n                                  </TableCell>\r\n                                  <TableCell style={{ width: \"20%\" }}>\r\n                                    {request.table}\r\n                                  </TableCell>\r\n                                  <TableCell style={{ width: \"20%\" }}>\r\n                                    {request.discrepancy}\r\n                                  </TableCell>\r\n                                </>\r\n                              );\r\n                              return (\r\n                                <TableRow\r\n                                  hover\r\n                                  tabIndex={-1}\r\n                                  key={request.index}\r\n                                >\r\n                                  {analyzeAERow}\r\n                                </TableRow>\r\n                              );\r\n                            })\r\n                        )}\r\n                      </TableBody>\r\n                    )}\r\n                  </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                  rowsPerPageOptions={[10, 15, 25]}\r\n                  component=\"div\"\r\n                  count={list.length}\r\n                  rowsPerPage={rowsPerPage}\r\n                  page={page}\r\n                  onChangePage={handleChangePage}\r\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n              </CardContent>\r\n            </Paper>\r\n          </Card>\r\n        </>\r\n      ) : input.job === \"Export\" ? (\r\n        <>\r\n          {\" \"}\r\n          <Divider />\r\n          <Divider />\r\n          <Divider style={{ marginTop: 16, marginBottom: 16 }} />\r\n          <Divider />\r\n          <Divider />\r\n          <Card>\r\n            <Divider style={{ marginTop: 16, marginBottom: 16 }} />\r\n            <Typography\r\n              variant=\"h2\"\r\n              align=\"center\"\r\n              color=\"primary\"\r\n              style={{ margin: \"2rem\" }}\r\n            >\r\n              Analyze\r\n            </Typography>\r\n            <Typography\r\n              variant=\"h2\"\r\n              align=\"center\"\r\n              color=\"primary\"\r\n              style={{ margin: \"2rem\" }}\r\n            >\r\n              Comparison ID-{id}\r\n            </Typography>\r\n            <Chip\r\n              style={{\r\n                width: \"25% \",\r\n                backgroundColor:\r\n                  input.analyzed === 0\r\n                    ? \"#90ee90\"\r\n                    : input.analyzed === 1\r\n                    ? \"#eec300\"\r\n                    : input.analyzed === 2\r\n                    ? \"#00FF00\"\r\n                    : \"#FFFFFF\",\r\n              }}\r\n              color=\"black\"\r\n              label={\r\n                input.analyzed === 0\r\n                  ? \"Status: Analyze has started successfully for this Comparison\"\r\n                  : input.analyzed === 1\r\n                  ? \"Status: Analyzing.... Discrepancies Detected will continue to be added\"\r\n                  : input.analyzed === 2\r\n                  ? \"Status: Completed Analyzing for this Comparison\"\r\n                  : \"\"\r\n              }\r\n              size=\"large\"\r\n            />\r\n            <Divider style={{ marginTop: 16, marginBottom: 16 }} />\r\n            <Paper className={classes.paper}>\r\n              <CardContent style={{ paddingBottom: 16 }}>\r\n                <Container maxWidth={false}>\r\n                  <Grid container spacing={3}>\r\n                    <Grid item lg={12} md={12} xl={12} xs={12}>\r\n                      <FormControl\r\n                        style={{ float: \"right\" }}\r\n                        className={classes.formControl}\r\n                      >\r\n                        <TextField\r\n                          size=\"small\"\r\n                          onChange={handleSearchChangeE}\r\n                          disabled={result.length === 0}\r\n                          id=\"comparisonSearch\"\r\n                          label=\"Search\"\r\n                          variant=\"outlined\"\r\n                          // disabled={true}\r\n                        />\r\n                      </FormControl>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Container>\r\n                <Divider style={{ marginTop: 16, marginBottom: 16 }} />\r\n                <TableContainer>\r\n                  <Table\r\n                    className={classes.table}\r\n                    aria-labelledby=\"tableTitle\"\r\n                    aria-label=\"enhanced table\"\r\n                  >\r\n                    <EnhancedTableHeadE\r\n                      classes={classes}\r\n                      order={order}\r\n                      orderBy={orderBy}\r\n                      onRequestSort={handleRequestSort}\r\n                    />\r\n                    {loading ? (\r\n                      <TableBody>\r\n                        <TableRow align=\"right\">\r\n                          <TableCell colSpan={16}>\r\n                            <Loader\r\n                              type=\"ThreeDots\"\r\n                              color=\"#000000\"\r\n                              height={50}\r\n                              width={50}\r\n                              //timeout={10000}\r\n                              style={{ marginLeft: \"50%\" }}\r\n                            />\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      </TableBody>\r\n                    ) : (\r\n                      <TableBody>\r\n                        {list.length === 0 ? (\r\n                          <TableRow>\r\n                            <TableCell colSpan={16}>\r\n                              No Discrepancy or Issue Found\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        ) : (\r\n                          stableSort(list, getComparator(order, orderBy))\r\n                            .slice(\r\n                              page * rowsPerPage,\r\n                              page * rowsPerPage + rowsPerPage\r\n                            )\r\n                            .map((request) => {\r\n                              const analyzeERow = (\r\n                                <>\r\n                                  <TableCell style={{ width: \"20%\" }}>\r\n                                    {request.line}\r\n                                  </TableCell>\r\n                                  <TableCell style={{ width: \"20%\" }}>\r\n                                    {request.discrepancy}\r\n                                  </TableCell>\r\n                                </>\r\n                              );\r\n                              return (\r\n                                <TableRow\r\n                                  hover\r\n                                  tabIndex={-1}\r\n                                  key={request.index}\r\n                                >\r\n                                  {analyzeERow}\r\n                                </TableRow>\r\n                              );\r\n                            })\r\n                        )}\r\n                      </TableBody>\r\n                    )}\r\n                  </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                  rowsPerPageOptions={[10, 15, 25]}\r\n                  component=\"div\"\r\n                  count={list.length}\r\n                  rowsPerPage={rowsPerPage}\r\n                  page={page}\r\n                  onChangePage={handleChangePage}\r\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n              </CardContent>\r\n            </Paper>\r\n          </Card>\r\n        </>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AnalyzeTable;\r\n","import React from \"react\";\r\nimport { Container, Grid, makeStyles } from \"@material-ui/core\";\r\nimport Page from \"src/components/Page\";\r\nimport AnalyzeTable from \"./components/AnalyzeTable\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.white,\r\n    marginBottom: 35,\r\n    paddingBottom: theme.spacing(100),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst AnalyzePage = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Analyze Page\">\r\n      <Container maxWidth={false}>\r\n        <Grid container spacing={3}>\r\n          <Grid item lg={12} md={12} xl={12} xs={12}>\r\n            <AnalyzeTable />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default AnalyzePage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Card, Typography, makeStyles } from \"@material-ui/core\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport axios from \"axios\";\r\nimport { CPTtracerAPI, tracerAPI } from \"src/components/APIBase/BaseURL\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n  formControl: {\r\n    margin: 8,\r\n    marginTop: 16,\r\n    marginBottom: 0,\r\n    minWidth: 350,\r\n  },\r\n}));\r\n\r\nconst Tracer = () => {\r\n  const classes = useStyles();\r\n\r\n  //   const [result, setresult] = useState([]);\r\n\r\n  const { id } = useParams();\r\n\r\n  const [analyze, setanalyze] = useState({\r\n    id: null,\r\n    comparison_ID: null,\r\n    line: null,\r\n    client: \"\",\r\n    employee_ID: \"\",\r\n    buisness_Date: \"\",\r\n    employee_Pay_AdjustID: \"\",\r\n    discrepancy: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    let analyzeApi = async () => {\r\n      let analyze_id = id;\r\n      let url = CPTtracerAPI + analyze_id;\r\n      await axios({\r\n        method: \"GET\",\r\n        url,\r\n      })\r\n        .then(function (response) {\r\n          setanalyze(response.data);\r\n          console.log(response.data);\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    };\r\n    let tracerApi = async () => {\r\n      let employee = parseInt(analyze.employee_ID, 10);\r\n      let url = tracerAPI;\r\n      await axios({\r\n        method: \"GET\",\r\n        url: url,\r\n        data: {\r\n          EmployeeId: employee,\r\n          Date: analyze.buisness_Date,\r\n          RunPeriod: \"DAILY\",\r\n          ShowPolicyConfiguration: true,\r\n          ShowOnlyReferencePolicyConfiguration: true,\r\n          SegmentCapturePeriodType: \"DAILY\",\r\n          KeepSegmentsCaptureRunPeriod: false,\r\n          KeepRunsOutsideRunPeriod: false,\r\n          DontAddSegmentsForRepeatRuns: true,\r\n          DropEmptyRuns: false,\r\n          UseClientRounding: true,\r\n          CalculateMissingAmounts: true,\r\n        },\r\n      })\r\n        .then(function (response) {\r\n          //   setresult(response.data);\r\n          console.log(response.data);\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    };\r\n    analyzeApi();\r\n    tracerApi();\r\n  }, [id, analyze.employee_ID, analyze.buisness_Date]);\r\n\r\n  return (\r\n    <Card>\r\n      <Typography\r\n        variant=\"h2\"\r\n        align=\"center\"\r\n        color=\"primary\"\r\n        style={{ margin: \"2rem\" }}\r\n      >\r\n        Tracer\r\n      </Typography>\r\n      <Paper className={classes.paper}></Paper>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Tracer;\r\n","import React from \"react\";\r\nimport { Container, Grid, makeStyles } from \"@material-ui/core\";\r\nimport Page from \"src/components/Page\";\r\nimport Tracer from \"./components/Tracer\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.white,\r\n    marginBottom: 35,\r\n    paddingBottom: theme.spacing(100),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst RulePage = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Rule Page\">\r\n      <Container maxWidth={false}>\r\n        <Grid container spacing={3}>\r\n          <Grid item lg={12} md={12} xl={12} xs={12}>\r\n            <Tracer />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default RulePage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { HashRouter as Router, Route, Redirect } from \"react-router-dom\";\r\nimport { ThemeProvider } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport \"./App.css\";\r\nimport theme from \"./theme\";\r\nimport GlobalStyles from \"./components/GlobalStyles\";\r\nimport ComparisonForm from \"./views/ComparePayView\";\r\nimport DashboardLayout from \"src/layout\";\r\nimport { env, userAPI } from \"./components/APIBase/BaseURL\"; // import { env, userAPI, referrer } from \"./components/APIBase/BaseURL\";\r\n//import { userWhiteList } from './components/UserWhiteList';\r\nimport \"./mixins/chartjs\";\r\nimport MaintenanceRedirect from \"./views/MaintenanceView\";\r\nimport Home from \"./views/HomeView/Home\";\r\nimport ResultsPage from \"./views/ResultsPageView/ResultsPage\";\r\nimport ComparePayTool from \"./views/AboutView/ComparePayTool\";\r\nimport AnalyzePage from \"./views/AnalyzeView/AnalyzePage\";\r\nimport RulePage from \"./views/RuleView/RulePage\";\r\n\r\nexport default function App() {\r\n  // Run user windows auth API here since App.js only renders once between navigation of tabs\r\n  const [start, setStart] = useState(true);\r\n  const [error, setError] = useState(false);\r\n  const [userInfo, setUserInfo] = useState({\r\n    displayName: \"\",\r\n    distinguishedName: \"\",\r\n    domain: \"\",\r\n    givenName: \"\",\r\n    isMemberOf: false,\r\n    role: \"\",\r\n    samAccountName: \"\",\r\n    surname: \"\",\r\n    tfsName: \"\",\r\n    user: \"\",\r\n    userPrincipalName: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    let userApi = async () => {\r\n      let url = userAPI;\r\n      await axios({\r\n        method: \"GET\",\r\n        url,\r\n        headers: { withCredentials: true },\r\n      })\r\n        .then(function (response) {\r\n          setUserInfo(response.data);\r\n          setStart(false);\r\n        })\r\n        .catch(function (error) {\r\n          setError(true);\r\n          console.log(error);\r\n          setStart(false);\r\n        });\r\n    };\r\n\r\n    if (env === \"prod\" || env === \"dev\") {\r\n      userApi();\r\n    } else {\r\n      setUserInfo((prev) => {\r\n        let update = { ...prev };\r\n        update.displayName = \"Bhandari, Naman\";\r\n        update.distinguishedName =\r\n          \"CN=Bhandari, Naman (P264),OU=Standard,OU=Users,OU=Root,DC=corpadds,DC=com\";\r\n        update.domain = \"CORPADDS\";\r\n        update.givenName = \"Naman\";\r\n        update.isMemberOf = false;\r\n        update.role = \"Intern-Developer\";\r\n        update.samAccountName = \"P264\";\r\n        update.surname = \"Bhandari\";\r\n        update.tfsName = \"Bhandari, Naman &lt;CORPADDS\\\\P264&gt;\";\r\n        update.user = \"Bhandari, Naman(p264)\";\r\n        update.userPrincipalName = \"Naman.Bhandari@ceridian.com\";\r\n        update.server = \"nan5dfc1sql07\";\r\n        update.database = \"ComparePayTool\";\r\n        return update;\r\n      });\r\n      setStart(false);\r\n    }\r\n  }, []);\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <GlobalStyles />\r\n      <div className=\"App\">\r\n        {start ? (\r\n          <Router></Router>\r\n        ) : error ? (\r\n          <Router>\r\n            <Route exact path=\"/\" component={() => <MaintenanceRedirect />} />\r\n            <Route\r\n              exact\r\n              path=\"/comparison\"\r\n              component={() => <Redirect to=\"/\" />}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/comparepaytool\"\r\n              component={() => <Redirect to=\"/\" />}\r\n            />\r\n            <Route exact path=\"/result\" component={() => <Redirect to=\"/\" />} />\r\n            <Route\r\n              exact\r\n              path=\"/analyze/:id\"\r\n              component={() => <Redirect to=\"/\" />}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/rule/:id\"\r\n              component={() => <Redirect to=\"/\" />}\r\n            />\r\n          </Router>\r\n        ) : (\r\n          <Router>\r\n            <Route\r\n              exact\r\n              path=\"/\"\r\n              component={() => (\r\n                <DashboardLayout userInfo={userInfo}>\r\n                  <Home userInfo={userInfo} />\r\n                </DashboardLayout>\r\n              )}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/comparison\"\r\n              component={() => (\r\n                <DashboardLayout userInfo={userInfo}>\r\n                  <ComparisonForm userInfo={userInfo} />\r\n                </DashboardLayout>\r\n              )}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/comparepaytool\"\r\n              component={() => (\r\n                <DashboardLayout userInfo={userInfo}>\r\n                  <ComparePayTool />\r\n                </DashboardLayout>\r\n              )}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/result\"\r\n              component={() => (\r\n                <DashboardLayout userInfo={userInfo}>\r\n                  <ResultsPage userInfo={userInfo} />\r\n                </DashboardLayout>\r\n              )}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/analyze/:id\"\r\n              component={() => (\r\n                <DashboardLayout userInfo={userInfo}>\r\n                  <AnalyzePage />\r\n                </DashboardLayout>\r\n              )}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/rule/:id\"\r\n              component={() => (\r\n                <DashboardLayout userInfo={userInfo}>\r\n                  <RulePage />\r\n                </DashboardLayout>\r\n              )}\r\n            />\r\n          </Router>\r\n        )}\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n"],"sourceRoot":""}